/* Maple Theme v1.1.6 For Obsidian */
/* @settings
id: maple-basic
name: Maple Basic
settings:
    - id: setting-animation-time
      type: variable-number-slider
      title: Animation Duration (ms)
      title.zh: 动画时长（毫秒）
      default: 250
      min: 0
      max: 1000
      step: 50
      format: ms
    - id: setting-item-line-height
      type: variable-number-slider
      title: List Item Line Height
      title.zh: 列表行高
      description: Adjust the line height for items in file explorer, outline panel,
          and setting modal sidebar.
      description.zh: 调整文件管理器、大纲面板和设置面板侧边栏中行高。
      default: 1.5
      min: 1
      max: 2
      step: 0.1
    - id: setting-divider-color
      type: variable-themed-color
      title: Panel Divider Color
      title.zh: 面板分割线颜色
      format: hsl
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: title-colors
      title: Colors
      title.zh: 颜色
      type: heading
      level: 1
      collapsed: false
    - id: color-scheme
      type: class-select
      title: Color Scheme
      title.zh: 颜色方案
      allow-empty: false
      default: color-use-custom
      options:
          - label: Default
            value: color-use-default
          - label: Minimal
            value: color-use-minimal
          - label: Custom
            value: color-use-custom
    - id: title-light-mode
      title: Light Mode
      title.zh: 浅色模式
      type: heading
      level: 2
      collapsed: true
    - id: setting-accent-h-light
      type: variable-number-slider
      title: Base Color
      title.zh: 基础色
      default: 35
      min: 0
      max: 360
      step: 5
    - id: color-active-light
      type: class-select
      title: Highlight Color
      title.zh: 高亮色
      allow-empty: false
      default: color-active-default-light
      options:
          - label: Theme Color
            value: color-active-default-light
          - label: Theme Color Alt
            value: color-active-alt-light
          - label: Custom
            value: color-active-custom-light
    - id: setting-color-active-custom-light
      type: variable-color
      title: Custom Highlight Color (Active)
      title.zh: 自定义高亮色（激活状态）
      description: Affects saturation and brightness of the background color.
      description.zh: 影响背景色的饱和度和亮度。
      default: "#"
      format: hsl-split
      opacity: false
    - id: setting-color-inactive-custom-light
      type: variable-color
      title: Custom Highlight Color (Inactive)
      title.zh: 自定义高亮色（非激活状态）
      default: "#"
      format: hsl-split
      opacity: false
    - id: title-dark-mode
      title: Dark Mode
      title.zh: 暗色模式
      type: heading
      level: 2
      collapsed: true
    - id: setting-accent-h-dark
      type: variable-number-slider
      title: Base Color
      title.zh: 基础色
      default: 207
      min: 0
      max: 360
      step: 5
    - id: color-active-dark
      type: class-select
      title: Highlight Color
      title.zh: 高亮色
      allow-empty: false
      default: color-active-default-dark
      options:
          - label: Theme Color
            value: color-active-default-dark
          - label: Theme Color Alt
            value: color-active-alt-dark
          - label: Custom
            value: color-active-custom-dark
    - id: setting-color-active-custom-dark
      type: variable-color
      title: Custom Highlight Color (Active)
      title.zh: 自定义高亮色（激活状态）
      description: Affects saturation and brightness of the background color.
      description.zh: 影响背景色的饱和度和亮度。
      default: "#"
      format: hsl-split
      opacity: false
    - id: setting-color-inactive-custom-dark
      type: variable-color
      title: Custom Highlight Color (Inactive)
      title.zh: 自定义高亮色（非激活状态）
      default: "#"
      format: hsl-split
      opacity: false
    - id: title-layout
      title: Layout
      title.zh: 布局
      type: heading
      level: 1
      collapsed: false
    - id: app-layout-card
      type: class-toggle
      title: Enable Card Layout
      title.zh: 启用卡片布局
      default: true
    - id: app-layout-card-border
      type: class-toggle
      title: Add Border to Cards
      title.zh: 为卡片添加边框
    - id: setting-app-layout-spacing
      type: variable-number-slider
      title: Card Spacing
      title.zh: 卡片间距
      default: 6
      max: 16
      min: 2
      step: 0.5
      format: px
    - id: app-layout-card-bg
      type: class-select
      title: Background Type
      title.zh: 背景类型
      description: '"gradient" is ineffective when the color scheme is "Minimal"'
      description.zh: 当颜色方案为 "Minimal" 时，"gradient" 不会生效
      allow-empty: false
      default: app-layout-card-gradient
      options:
          - label: Plain
            value: app-layout-card-plain
          - label: Gradient
            value: app-layout-card-gradient
          - label: Custom
            value: app-layout-card-custom
    - id: setting-layout-image-light
      type: variable-text
      title: Light Theme Background Image
      title.zh: 浅色主题背景图片
      description: Any CSS "background-image" value, e.g. url("/your/image/url")
      description.zh: 任何 CSS “background-image” 值，例如：url("图片链接地址")
      default: ""
    - id: setting-layout-opacity-light
      type: variable-number-slider
      title: Light Theme Background Opacity
      title.zh: 浅色主题背景不透明度
      default: 0.6
      max: 0.9
      min: 0.1
      step: 0.05
    - id: setting-layout-image-dark
      type: variable-text
      title: Dark Theme Background Image
      title.zh: 深色主题背景图片
      description: Any CSS "background-image" value, e.g. url("/your/image/url")
      description.zh: 任何 CSS “background-image” 值，例如：url("图片链接地址")
      default: ""
    - id: setting-layout-opacity-dark
      type: variable-number-slider
      title: Dark Theme Background Opacity
      title.zh: 深色主题背景不透明度
      default: 0.6
      max: 0.9
      min: 0.1
      step: 0.05
*/
/* @settings
id: maple-workspace
name: Maple Workspace
settings:
    - id: enable-blur
      type: class-toggle
      title: Enable Background Blur
      title.zh: 启用背景模糊
      description: Applies to menus, modals, popups, and graph control panels. Disable
          if scrolling becomes laggy. Not available on mobile devices.
      description.zh: 在菜单、弹出框和图谱控制面板中生效；若滚动卡顿，请关闭此选项；手机端不支持
      default: true
    - id: title-file-explorer
      title: File Explorer
      title.zh: 文件管理器
      type: heading
      level: 1
      collapsed: true
    - id: explorer-title-wrap
      type: class-toggle
      title: Auto Wrap Long File Names
      title.zh: 长文件名自动换行
    - id: explorer-icon
      type: class-toggle
      title: Enable Prefix Icons
      title.zh: 启用前置图标
      description: Please turn off this option when using third-party icon plugins to
          avoid conflicts.
      description.zh: 使用第三方图标插件时建议关闭以避免冲突。
      default: true
    - id: explorer-folder-bold
      type: class-toggle
      title: Bold Folder Titles
      title.zh: 加粗文件夹标题
    - id: setting-color-dirs
      type: variable-themed-color
      title: Directory Color
      title.zh: 文件夹颜色
      format: hsl
      opacity: false
      default-light: hsl(46, 81%, 45%)
      default-dark: hsl(46, 81%, 45%)
    - id: title-outline
      title: Outline
      title.zh: 大纲
      type: heading
      level: 1
      collapsed: true
    - id: outline-enable
      type: class-toggle
      title: Enable Logseq Bullet Thread Style of outline
      title.zh: 启用 Logseq 样式的大纲
      description: Reload Obsidian after enabling this feature. Reference from
          https://github.com/pengx17/logseq-dev-theme/blob/main/bullet_threading.css
      description.zh: 启用此功能后请重启 Obsidian。参考自
          https://github.com/pengx17/logseq-dev-theme/blob/main/bullet_threading.css
    - id: setting-outline-width
      type: variable-number-slider
      title: Guide Line Width
      title.zh: 引导线宽度
      default: 2
      min: 1
      max: 4
      step: 0.5
      format: px
    - id: setting-outline-line-color
      type: variable-themed-color
      title: Guide Line Color
      title.zh: 引导线颜色
      format: hsl
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-outline-dot-color
      type: variable-themed-color
      title: Guide Dot Color
      title.zh: 引导点颜色
      format: hsl
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: title-document-search-and-replace
      title: Document Search and Replace
      title.zh: 文档搜索和替换
      type: heading
      level: 1
      collapsed: true
    - id: search-internal-enable
      type: class-toggle
      title: Enable Floating Style
      title.zh: 启用浮动风格
      description: Similar to VSCode document search widget
      description.zh: 类似于 VSCode 的文档搜索框
      default: true
    - id: search-remove-button
      type: class-toggle
      title: Remove Rarely Used Buttons
      title.zh: 移除不常用的按钮
      description: "Removed buttons: Find All"
      description.zh: 已移除的按钮：查找全部
    - id: title-graph
      title: Graph
      title.zh: 关系图谱
      type: heading
      level: 1
      collapsed: true
    - id: setting-graph-node
      type: variable-themed-color
      title: Normal Node Color
      title.zh: 普通节点颜色
      format: hsl
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-graph-node-unresolved
      type: variable-themed-color
      title: Unresolved Node Color
      title.zh: 未连接节点颜色
      format: hsl
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-graph-node-focus
      type: variable-themed-color
      title: Focused Node Color
      title.zh: 聚焦节点颜色
      format: hsl
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: title-modal-and-setting-panel
      title: Modal and Setting Panel
      title.zh: 模态框和设置面板
      type: heading
      level: 1
      collapsed: true
    - id: modal-header
      type: class-toggle
      title: Add Header To Setting Panel
      title.zh: 为设置面板添加顶部标题
      description: Works best with the "Setting Search" plugin; not valid on mobile
      description.zh: 配合“设置搜索”插件使用效果更佳，移动端无效
      default: true
    - id: setting-modal-header-title
      type: variable-text
      title: Setting Panel Header Title
      title.zh: 设置面板标题
      default: Maple 1.1.6
      quotes: true
    - id: modal-header-search
      type: class-toggle
      title: Move Some Search Bar to Modal Header
      title.zh: 将部分搜索框移动到模态框顶部
      default: true
    - id: enable-group-title
      type: class-toggle
      title: Add Icons For Left Navigation Group Title
      title.zh: 为左侧导航组标题添加图标
      default: true
    - id: title-control
      title: Control
      title.zh: 控件
      type: heading
      level: 2
      collapsed: true
    - id: modal-control-gradient
      type: class-toggle
      title: Enable Gradient Style on Controls
      title.zh: 控件启用渐变样式
      default: true
    - id: modal-slider
      type: class-toggle
      title: Styled Slider
      title.zh: 启用滑块样式
      default: true
    - id: modal-toggle
      type: class-select
      title: Styled Toggle Button
      title.zh: 启用开关按钮样式
      description: '"Thin" and "Floating" will fallback to "Default" on mobile'
      description.zh: “Thin” 和 “Floating” 选项在移动端会回退到 “默认” 风格
      allow-empty: false
      default: modal-toggle-default
      options:
          - label: Default
            value: modal-toggle-default
          - label: Square
            value: modal-toggle-square
          - label: Thin
            value: modal-toggle-thin
          - label: Floating
            value: modal-toggle-floating
    - id: title-tab-and-navigation-bar
      title: Tab and Navigation Bar
      title.zh: 标签页和导航栏
      type: heading
      level: 1
      collapsed: true
    - id: labeled-nav
      type: class-toggle
      title: Enable Vertical Navigation Bar
      title.zh: 启用竖向导航栏
      description: Reference from
          https://github.com/kepano/obsidian-minimal/blob/master/src/scss/features/labeled-nav.scss
      description.zh: 参考自
          https://github.com/kepano/obsidian-minimal/blob/master/src/scss/features/labeled-nav.scss
    - id: tab-float
      type: class-toggle
      title: Enable Floating Style Tab Bar
      title.zh: 启用浮动风格的标签栏
      default: true
    - id: tab-slide-up
      type: class-toggle
      title: Enable Tab Slide Up Animation
      title.zh: 启用标签页切换动画
      description: ❗Turning on will prevent some panels updating instantly while
          switching tabs
      description.zh: ❗开启后会导致部分面板无法立即更新
    - id: tab-show-close
      type: class-select
      title: When To Show Close Button On Tabs
      title.zh: 何时显示标签页的关闭按钮
      allow-empty: false
      default: tab-show-close-default
      options:
          - label: Always
            value: tab-show-close-default
          - label: Hover only
            value: tab-show-close-all
          - label: Hover only or active tab
            value: tab-show-close-part
    - id: tab-title-bar-text
      type: class-select
      title: Font Size of File Name On Tab Title Bar
      title.zh: 标签页标题栏的文件名的字体大小
      allow-empty: false
      default: tab-title-bar-text-default
      options:
          - label: Default
            value: tab-title-bar-text-default
          - label: Small size
            value: tab-title-bar-text-small
          - label: Hover only
            value: tab-title-bar-text-hidden
    - id: title-status-bar
      title: Status Bar
      title.zh: 状态栏
      type: heading
      level: 1
      collapsed: true
    - id: status-bar-style-float
      type: class-toggle
      title: Enable Floating Style
      title.zh: 启用浮动样式
      default: true
    - id: status-bar-style
      type: class-select
      title: Status Bar Animation
      title.zh: 状态栏动画效果
      description: 'Note: The "Auto scroll in" option is only effective when "Enable
          Floating Style" is on'
      description.zh: 注意：“自动滚入”选项仅在"启用浮动风格"开启时生效
      allow-empty: false
      default: status-bar-default
      options:
          - label: Default
            value: status-bar-default
          - label: Auto hide
            value: status-bar-hidden
          - label: Auto scroll in
            value: status-bar-scroll
    - id: status-bar-style-center
      type: class-toggle
      title: Centered Status Bar
      title.zh: 状态栏居中显示
    - id: title-tooltip-and-notice
      title: Tooltip and Notice
      title.zh: 提示框和通知
      type: heading
      level: 1
      collapsed: true
    - id: message-tooltip-hide-arrow
      type: class-toggle
      title: Hide Tooltip Arrow
      title.zh: 隐藏气泡提示框箭头
    - id: message-tooltip-hide
      type: class-toggle
      title: Always Hide Tooltip
      title.zh: 始终隐藏气泡提示框
    - id: message-modify
      type: class-toggle
      title: Modify Tooltip and Notice Color
      title.zh: 修改气泡提示框和通知的颜色
      default: true
    - id: setting-message-bg
      type: variable-themed-color
      title: Background Color
      title.zh: 背景色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-message-fg
      type: variable-themed-color
      title: Foreground Color
      title.zh: 文字色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: title-scrollbar
      title: Scrollbar
      title.zh: 滚动条
      type: heading
      level: 1
      collapsed: true
    - id: scrollbar-hide
      type: class-toggle
      title: Always Hide Scrollbar
      title.zh: 始终隐藏滚动条
    - id: scrollbar-enable
      type: class-toggle
      title: Enable Scrollbar Style
      title.zh: 启用滚动条样式
      default: true
    - id: scrollbar-hover
      type: class-select
      title: Scrollbar Hover Action
      title.zh: 鼠标悬停时滚动条的变化
      allow-empty: false
      default: scrollbar-hover-accent
      options:
          - label: None
            value: scrollbar-hover-default
          - label: Accent
            value: scrollbar-hover-accent
          - label: Expand
            value: scrollbar-hover-expand
    - id: scrollbar-movein-animation-enable
      type: class-toggle
      title: Enable Scrollbar Animation
      title.zh: 启用滚动条动画
      description: When disabled, the scrollbar is always visible; when enabled, the
          scrollbar hides when the mouse moves outside the container
      description.zh: 禁用时，滚动条始终可见；启用后，当鼠标移出容器时滚动条将隐藏
      default: true
*/
/* @settings
id: maple-editor
name: Maple Editor
settings:
    - id: title-background-pattern
      title: Background Pattern
      title.zh: 背景图案
      type: heading
      level: 1
      collapsed: true
    - id: editor-bg-pattern
      type: class-select
      title: Pattern Style
      title.zh: 图案风格
      allow-empty: false
      default: editor-bg-plain
      options:
          - label: Plain
            value: editor-bg-plain
          - label: Dots
            value: editor-bg-grid-dots
          - label: Grid
            value: editor-bg-grid-line
    - id: setting-editor-bg-grid-dots
      type: variable-themed-color
      title: Dot Color for Editor Background
      title.zh: 编辑器背景点颜色
      format: rgb
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-editor-bg-grid-line
      type: variable-themed-color
      title: Grid Line Color for Editor Background
      title.zh: 编辑器背景网格线颜色
      format: rgb
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-editor-bg-grid-spacing
      type: variable-number-slider
      title: Grid Spacing for Editor Background
      title.zh: 编辑器背景网格间距
      format: px
      default: 20
      min: 10
      max: 30
      step: 1
    - id: title-line-and-spacing
      title: Line and Spacing
      title.zh: 行和间距
      type: heading
      level: 1
      collapsed: true
    - id: setting-editor-p-spacing
      type: variable-number-slider
      title: Paragraph Spacing (px)
      title.zh: 段落间距（px）
      default: 8
      format: px
      min: 0
      max: 20
      step: 1
    - id: editor-custom-bottom-spacing
      type: class-toggle
      title: Custom Page Bottom Spacing
      title.zh: 自定义页面底部留白
    - id: setting-editor-bottom-spacing
      type: variable-number-slider
      title: Page Bottom Spacing (vh)
      title.zh: 页面底部留白大小（vh）
      default: 40
      format: vh
      min: 0
      max: 80
      step: 5
    - id: setting-editor-p-indent
      type: variable-number-slider
      title: Paragraph Indent
      title.zh: 段落缩进
      description: Indent all paragraphs if "p-indent" exists in properties.cssclasses
      description.zh: 当文档属性的 cssclasses 中存在 “p-indent” 类时，为所有段落添加缩进
      default: 2
      min: 0
      max: 4
      step: 0.2
    - id: setting-line-height
      type: variable-number-slider
      title: Line Height
      title.zh: 行高
      description: Multiple of text size
      description.zh: 文字大小的倍数
      default: 1.8
      min: 1.2
      max: 2.4
      step: 0.1
    - id: setting-file-line-width
      type: variable-text
      title: Line Width
      title.zh: 行宽
      description: Any CSS "width" value, e.g. clamp(MinWidth, WidthPercent, MaxWidth)
      description.zh: 任何 CSS “width” 值，例如：clamp(最小值, 宽度百分比, 最大值)
      default: clamp(600px, 72%, 850px)
    - id: line-indicator
      type: class-select
      title: Hover Line Marker
      title.zh: 鼠标悬停行标记
      description: Reference from https://github.com/Akifyss/obsidian-border
      description.zh: 参考自 https://github.com/Akifyss/obsidian-border
      allow-empty: false
      default: line-indicator-disable
      options:
          - label: None
            value: line-indicator-disable
          - label: Left
            value: line-indicator-enable
          - label: Full Line
            value: line-indicator-full
    - id: line-active
      type: class-select
      title: Active Line Highlight
      title.zh: 当前行高亮
      allow-empty: false
      default: line-active-enable
      options:
          - label: None
            value: line-active-disable
          - label: Left
            value: line-active-left
          - label: Full Line
            value: line-active-enable
    - id: setting-line-active-color
      type: variable-themed-color
      title: Active Line Color
      title.zh: 高亮行颜色
      format: hsl-values
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: title-text
      title: Text
      title.zh: 文本
      type: heading
      level: 1
      collapsed: true
    - id: setting-text-normal
      type: variable-themed-color
      title: Editor Text Color
      title.zh: 编辑器文本颜色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-underline-offset
      type: variable-number-slider
      title: Underline Offset
      title.zh: 下划线偏移
      default: 2
      format: px
      min: 0
      max: 8
      step: 0.5
    - id: title-highlight
      title: Highlight
      title.zh: 高亮
      type: heading
      level: 2
      collapsed: true
    - id: setting-text-highlight-bg
      type: variable-text
      title: Highlight Text Background Color
      title.zh: 文本高亮背景色
      description: Any CSS "background" value, e.g. url("/your/image/url")
      description.zh: 任何 CSS “background” 值，例如：url("图片链接地址")
      default: rgba(255, 208, 0, 0.4)
    - id: setting-text-highlight-color
      type: variable-themed-color
      title: Highlight Text Color
      title.zh: 文本高亮文字色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-text-highlight-radius
      type: variable-number-slider
      title: Highlight Background Radius
      title.zh: 高亮背景圆角大小
      description: Value in pixels (px)
      description.zh: 单位：像素（px）
      default: 4
      min: 0
      max: 8
      step: 1
      format: px
    - id: text-highlight-all-round
      type: class-toggle
      title: Maintain Radius When Wrapping
      title.zh: 换行时保持圆角
      description: Except during editing
      description.zh: 编辑时除外
      default: true
    - id: title-bold
      title: Bold
      title.zh: 粗体
      type: heading
      level: 2
      collapsed: true
    - id: setting-text-bold-color
      type: variable-themed-color
      title: Bold Text Color
      title.zh: 粗体颜色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-text-bold-weight
      type: variable-number-slider
      title: Bold Font Weight
      title.zh: 粗体字重
      default: 600
      min: 100
      max: 800
      step: 50
    - id: setting-text-bold-style
      type: variable-text
      title: Bold Style
      title.zh: 粗体样式
      description: Any CSS "text-decoration" value
      description.zh: 任何 CSS “text-decoration” 值
      default: ""
    - id: setting-text-bold-font
      type: variable-text
      title: Bold Font
      title.zh: 粗体字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: ""
    - id: title-italic
      title: Italic
      title.zh: 斜体
      type: heading
      level: 2
      collapsed: true
    - id: setting-text-italic-color
      type: variable-themed-color
      title: Italic Text Color
      title.zh: 斜体颜色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-text-italic-style
      type: variable-text
      title: Italic Style
      title.zh: 斜体样式
      description: Any CSS "text-decoration" value
      description.zh: 任何 CSS “text-decoration” 值
      default: ""
    - id: setting-text-italic-font
      type: variable-text
      title: Italic Font
      title.zh: 斜体字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: ""
    - id: title-font
      title: Font
      title.zh: 字体
      type: heading
      level: 1
      collapsed: true
    - id: font-maple
      type: class-toggle
      title: Use "Maple Mono" as Monospace Font
      title.zh: 使用 “Maple Mono” 作为等宽字体
      description: https://github.com/subframe7536/maple-font
      description.zh: https://github.com/subframe7536/maple-font
      default: true
    - id: setting-code-ligature
      type: variable-text
      title: Monospace Font Features
      title.zh: 等宽字体特性
      description: If using "Maple Mono" as monospace font, recommend setting to
          'calt','cv01','cv02' to bring back normal glyphs
      description.zh: 如果您使用 “Maple Mono” 作为等宽字体，建议设置为 'calt','cv01','cv02' 以改为正常的字形
      default: "'calt'"
    - id: font-latex-text
      type: class-toggle
      title: Use Text Font in Non-formula Parts of LaTeX
      title.zh: 在 LaTeX 内非公式部分使用正文字体
      description: No effective on Latin letters and numbers
      description.zh: 仅修改中文字体
    - id: title-link
      title: Link
      title.zh: 链接
      type: heading
      level: 1
      collapsed: true
    - id: link-hover-expand
      type: class-toggle
      title: Use Underline Animation on Hover
      title.zh: 鼠标悬停时启用下划线动画
    - id: link-icon
      type: class-toggle
      title: Add Icon Before Link
      title.zh: 在链接前添加图标
      description: ❗The icon will be duplicated if the link text contains space or
          extra styles
      description.zh: ❗如果链接文本包含空格或额外样式，图标将会重复出现
      default: true
    - id: link-heading
      type: class-toggle
      title: Compatible with Heading Style
      title.zh: 兼容标题样式
      description: Keep link color consistent with heading, but retain icon
      description.zh: 链接颜色与标题颜色保持一致，但保留图标
    - id: link-click-to-edit-in-live-preview
      type: class-toggle
      title: Click to Edit Link in Live Preview Mode
      title.zh: 实时预览模式下点击链接进行编辑而非跳转
      description: ❗Disables hover animation; external link prefix icon will be disabled
      description.zh: ❗将禁用悬停动画；外部链接前缀图标将不可用
    - id: title-link-color
      title: Link Color
      title.zh: 链接颜色
      type: heading
      level: 2
      collapsed: true
    - id: setting-link-internal-color
      type: variable-themed-color
      title: Internal Link Color
      title.zh: 内部链接颜色
      default-dark: "#"
      default-light: "#"
      format: rgb-values
      opacity: false
    - id: setting-link-internal-color-underline
      type: variable-themed-color
      title: Internal Link Underline Color
      title.zh: 内部链接下划线颜色
      format: rgb
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-link-external-color
      type: variable-themed-color
      title: External Link Color
      title.zh: 外部链接颜色
      default-dark: "#"
      default-light: "#"
      format: rgb-values
      opacity: false
    - id: setting-link-external-color-underline
      type: variable-themed-color
      title: External Link Underline Color
      title.zh: 外部链接下划线颜色
      format: rgb
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: title-heading
      title: Heading
      title.zh: 标题
      type: heading
      level: 1
      collapsed: true
    - id: heading-color-style
      type: class-select
      title: Heading Color Style
      title.zh: 标题颜色样式
      allow-empty: false
      default: heading-color-colorful
      options:
          - label: Text Color
            value: heading-color-base
          - label: Accent Color
            value: heading-color-accent
          - label: Colorful
            value: heading-color-colorful
    - id: heading-indicator
      type: class-select
      title: Heading Level Marker
      title.zh: 标题等级标记
      allow-empty: false
      default: heading-indicator-auto
      options:
          - label: Disable
            value: heading-indicator-disable
          - label: Auto hide
            value: heading-indicator-auto
          - label: Fixed
            value: heading-indicator-fixed
    - id: title-level-1-heading
      title: Level 1 Heading
      title.zh: 一级标题
      type: heading
      level: 2
      collapsed: true
    - id: heading-h1-style
      type: class-select
      title: H1 Style
      title.zh: H1 样式
      allow-empty: false
      default: heading-h1-normal
      options:
          - label: Normal
            value: heading-h1-normal
          - label: Underline
            value: heading-h1-underline
          - label: Full Line
            value: heading-h1-full-line
          - label: Block
            value: heading-h1-block
    - id: heading-h1-full-line-direction
      type: class-select
      title: H1 Full Line Decoration Gradient Direction
      title.zh: H1 整行下划线渐变方向
      allow-empty: false
      default: heading-h1-full-line-both
      options:
          - label: Both
            value: heading-h1-full-line-both
          - label: Left
            value: heading-h1-full-line-left
          - label: Right
            value: heading-h1-full-line-right
    - id: heading-h1-block-contrast
      type: class-toggle
      title: H1 Block Decoration Use Higher Contrast Color
      title.zh: H1 块状装饰颜色提高对比度
    - id: setting-h1-color
      type: variable-themed-color
      title: H1 Color
      title.zh: H1 颜色
      format: rgb-values
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: heading-h1-center
      type: class-toggle
      title: H1 Centered
      title.zh: H1 居中
      default: true
    - id: heading-h1-italic
      type: class-toggle
      title: H1 Italic Style
      title.zh: H1 斜体样式
    - id: setting-h1-font
      type: variable-text
      title: H1 Font Family
      title.zh: H1 字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: ""
    - id: setting-h1-weight
      type: variable-text
      title: H1 Font Weight
      title.zh: H1 字重
      description: Any CSS "font-weight" value
      description.zh: 任何 CSS “font-weight” 值
      default: "750"
    - id: heading-h1-caps
      type: class-toggle
      title: H1 Small Caps Text Variant
      title.zh: H1 文本变体
      description: Uses the form of uppercase letters but are reduced to the size of
          lowercase letters
      description.zh: 将小写字母转换成大写字母，但字号保持不变
      default: false
    - id: title-level-2-heading
      title: Level 2 Heading
      title.zh: 二级标题
      type: heading
      level: 2
      collapsed: true
    - id: heading-h2-style
      type: class-select
      title: H2 Style
      title.zh: H2 样式
      allow-empty: false
      default: heading-h2-underline
      options:
          - label: Normal
            value: heading-h2-normal
          - label: Underline
            value: heading-h2-underline
          - label: Full Line
            value: heading-h2-full-line
          - label: Block
            value: heading-h2-block
    - id: heading-h2-full-line-direction
      type: class-select
      title: H2 Full Line Decoration Gradient Direction
      title.zh: H2 整行下划线渐变方向
      allow-empty: false
      default: heading-h2-full-line-both
      options:
          - label: Both
            value: heading-h2-full-line-both
          - label: Left
            value: heading-h2-full-line-left
          - label: Right
            value: heading-h2-full-line-right
    - id: heading-h2-block-contrast
      type: class-toggle
      title: H2 Block Decoration Use Higher Contrast Color
      title.zh: H2 块状装饰颜色提高对比度
    - id: setting-h2-color
      type: variable-themed-color
      title: H2 Color
      title.zh: H2 颜色
      format: rgb-values
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: heading-h2-center
      type: class-toggle
      title: H2 Centered
      title.zh: H2 居中
      default: false
    - id: heading-h2-italic
      type: class-toggle
      title: H2 Italic Style
      title.zh: H2 斜体样式
    - id: setting-h2-font
      type: variable-text
      title: H2 Font Family
      title.zh: H2 字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: ""
    - id: setting-h2-weight
      type: variable-text
      title: H2 Font Weight
      title.zh: H2 字重
      description: Any CSS "font-weight" value
      description.zh: 任何 CSS “font-weight” 值
      default: "700"
    - id: heading-h2-caps
      type: class-toggle
      title: H2 Small Caps Text Variant
      title.zh: H2 文本变体
      description: Uses the form of uppercase letters but are reduced to the size of
          lowercase letters
      description.zh: 将小写字母转换成大写字母，但字号保持不变
      default: false
    - id: title-level-3-heading
      title: Level 3 Heading
      title.zh: 三级标题
      type: heading
      level: 2
      collapsed: true
    - id: heading-h3-style
      type: class-select
      title: H3 Style
      title.zh: H3 样式
      allow-empty: false
      default: heading-h3-normal
      options:
          - label: Normal
            value: heading-h3-normal
          - label: Underline
            value: heading-h3-underline
          - label: Full Line
            value: heading-h3-full-line
          - label: Block
            value: heading-h3-block
    - id: heading-h3-full-line-direction
      type: class-select
      title: H3 Full Line Decoration Gradient Direction
      title.zh: H3 整行下划线渐变方向
      allow-empty: false
      default: heading-h3-full-line-both
      options:
          - label: Both
            value: heading-h3-full-line-both
          - label: Left
            value: heading-h3-full-line-left
          - label: Right
            value: heading-h3-full-line-right
    - id: heading-h3-block-contrast
      type: class-toggle
      title: H3 Block Decoration Use Higher Contrast Color
      title.zh: H3 块状装饰颜色提高对比度
    - id: setting-h3-color
      type: variable-themed-color
      title: H3 Color
      title.zh: H3 颜色
      format: rgb-values
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: heading-h3-center
      type: class-toggle
      title: H3 Centered
      title.zh: H3 居中
      default: false
    - id: heading-h3-italic
      type: class-toggle
      title: H3 Italic Style
      title.zh: H3 斜体样式
    - id: setting-h3-font
      type: variable-text
      title: H3 Font Family
      title.zh: H3 字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: ""
    - id: setting-h3-weight
      type: variable-text
      title: H3 Font Weight
      title.zh: H3 字重
      description: Any CSS "font-weight" value
      description.zh: 任何 CSS “font-weight” 值
      default: "600"
    - id: heading-h3-caps
      type: class-toggle
      title: H3 Small Caps Text Variant
      title.zh: H3 文本变体
      description: Uses the form of uppercase letters but are reduced to the size of
          lowercase letters
      description.zh: 将小写字母转换成大写字母，但字号保持不变
      default: false
    - id: title-level-4-heading
      title: Level 4 Heading
      title.zh: 四级标题
      type: heading
      level: 2
      collapsed: true
    - id: heading-h4-style
      type: class-select
      title: H4 Style
      title.zh: H4 样式
      allow-empty: false
      default: heading-h4-normal
      options:
          - label: Normal
            value: heading-h4-normal
          - label: Underline
            value: heading-h4-underline
          - label: Full Line
            value: heading-h4-full-line
          - label: Block
            value: heading-h4-block
    - id: heading-h4-full-line-direction
      type: class-select
      title: H4 Full Line Decoration Gradient Direction
      title.zh: H4 整行下划线渐变方向
      allow-empty: false
      default: heading-h4-full-line-both
      options:
          - label: Both
            value: heading-h4-full-line-both
          - label: Left
            value: heading-h4-full-line-left
          - label: Right
            value: heading-h4-full-line-right
    - id: heading-h4-block-contrast
      type: class-toggle
      title: H4 Block Decoration Use Higher Contrast Color
      title.zh: H4 块状装饰颜色提高对比度
    - id: setting-h4-color
      type: variable-themed-color
      title: H4 Color
      title.zh: H4 颜色
      format: rgb-values
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: heading-h4-center
      type: class-toggle
      title: H4 Centered
      title.zh: H4 居中
      default: false
    - id: heading-h4-italic
      type: class-toggle
      title: H4 Italic Style
      title.zh: H4 斜体样式
    - id: setting-h4-font
      type: variable-text
      title: H4 Font Family
      title.zh: H4 字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: ""
    - id: setting-h4-weight
      type: variable-text
      title: H4 Font Weight
      title.zh: H4 字重
      description: Any CSS "font-weight" value
      description.zh: 任何 CSS “font-weight” 值
      default: "550"
    - id: heading-h4-caps
      type: class-toggle
      title: H4 Small Caps Text Variant
      title.zh: H4 文本变体
      description: Uses the form of uppercase letters but are reduced to the size of
          lowercase letters
      description.zh: 将小写字母转换成大写字母，但字号保持不变
      default: false
    - id: title-level-5-heading
      title: Level 5 Heading
      title.zh: 五级标题
      type: heading
      level: 2
      collapsed: true
    - id: heading-h5-style
      type: class-select
      title: H5 Style
      title.zh: H5 样式
      allow-empty: false
      default: heading-h5-normal
      options:
          - label: Normal
            value: heading-h5-normal
          - label: Underline
            value: heading-h5-underline
          - label: Full Line
            value: heading-h5-full-line
          - label: Block
            value: heading-h5-block
    - id: heading-h5-full-line-direction
      type: class-select
      title: H5 Full Line Decoration Gradient Direction
      title.zh: H5 整行下划线渐变方向
      allow-empty: false
      default: heading-h5-full-line-both
      options:
          - label: Both
            value: heading-h5-full-line-both
          - label: Left
            value: heading-h5-full-line-left
          - label: Right
            value: heading-h5-full-line-right
    - id: heading-h5-block-contrast
      type: class-toggle
      title: H5 Block Decoration Use Higher Contrast Color
      title.zh: H5 块状装饰颜色提高对比度
    - id: setting-h5-color
      type: variable-themed-color
      title: H5 Color
      title.zh: H5 颜色
      format: rgb-values
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: heading-h5-center
      type: class-toggle
      title: H5 Centered
      title.zh: H5 居中
      default: false
    - id: heading-h5-italic
      type: class-toggle
      title: H5 Italic Style
      title.zh: H5 斜体样式
    - id: setting-h5-font
      type: variable-text
      title: H5 Font Family
      title.zh: H5 字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: ""
    - id: setting-h5-weight
      type: variable-text
      title: H5 Font Weight
      title.zh: H5 字重
      description: Any CSS "font-weight" value
      description.zh: 任何 CSS “font-weight” 值
      default: "550"
    - id: heading-h5-caps
      type: class-toggle
      title: H5 Small Caps Text Variant
      title.zh: H5 文本变体
      description: Uses the form of uppercase letters but are reduced to the size of
          lowercase letters
      description.zh: 将小写字母转换成大写字母，但字号保持不变
      default: false
    - id: title-level-6-heading
      title: Level 6 Heading
      title.zh: 六级标题
      type: heading
      level: 2
      collapsed: true
    - id: heading-h6-style
      type: class-select
      title: H6 Style
      title.zh: H6 样式
      allow-empty: false
      default: heading-h6-normal
      options:
          - label: Normal
            value: heading-h6-normal
          - label: Underline
            value: heading-h6-underline
          - label: Full Line
            value: heading-h6-full-line
          - label: Block
            value: heading-h6-block
    - id: heading-h6-full-line-direction
      type: class-select
      title: H6 Full Line Decoration Gradient Direction
      title.zh: H6 整行下划线渐变方向
      allow-empty: false
      default: heading-h6-full-line-both
      options:
          - label: Both
            value: heading-h6-full-line-both
          - label: Left
            value: heading-h6-full-line-left
          - label: Right
            value: heading-h6-full-line-right
    - id: heading-h6-block-contrast
      type: class-toggle
      title: H6 Block Decoration Use Higher Contrast Color
      title.zh: H6 块状装饰颜色提高对比度
    - id: setting-h6-color
      type: variable-themed-color
      title: H6 Color
      title.zh: H6 颜色
      format: rgb-values
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: heading-h6-center
      type: class-toggle
      title: H6 Centered
      title.zh: H6 居中
      default: false
    - id: heading-h6-italic
      type: class-toggle
      title: H6 Italic Style
      title.zh: H6 斜体样式
    - id: setting-h6-font
      type: variable-text
      title: H6 Font Family
      title.zh: H6 字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: ""
    - id: setting-h6-weight
      type: variable-text
      title: H6 Font Weight
      title.zh: H6 字重
      description: Any CSS "font-weight" value
      description.zh: 任何 CSS “font-weight” 值
      default: "500"
    - id: heading-h6-caps
      type: class-toggle
      title: H6 Small Caps Text Variant
      title.zh: H6 文本变体
      description: Uses the form of uppercase letters but are reduced to the size of
          lowercase letters
      description.zh: 将小写字母转换成大写字母，但字号保持不变
      default: true
    - id: title-horizontal-rule
      title: Horizontal Rule
      title.zh: 分隔线
      type: heading
      level: 1
      collapsed: true
    - id: hr-enable
      type: class-toggle
      title: Enable Horizontal Rule Style
      title.zh: 启用分隔线样式
      default: true
    - id: setting-hr-icon
      type: variable-text
      title: Set Icon in the Center of Horizontal Rule
      title.zh: 分隔线中部图标
      default: ⭐
      quotes: true
    - id: title-table
      title: Table
      title.zh: 表格
      type: heading
      level: 1
      collapsed: true
    - id: table-full
      type: class-toggle
      title: Full Width Table
      title.zh: 全宽表格
      default: true
    - id: table-style
      type: class-select
      title: Table Style
      title.zh: 表格样式
      description: "Ignore DataView table. Minimal: Academic style with only
          horizontal lines; Colorful: Accented header and line background
          colors"
      description.zh: "忽略 DataView 表格。Minimal: 仅显示横线的学术风格；Colorful: 加深表头和行的背景色"
      allow-empty: false
      default: table-style-default
      options:
          - label: Default
            value: table-style-default
          - label: Minimal
            value: table-style-minimal
          - label: Colorful
            value: table-style-colorful
    - id: table-round
      type: class-toggle
      title: Add Round Corner For Table
      title.zh: 表格添加圆角
      default: true
    - id: setting-table-header-text
      type: variable-themed-color
      title: Table Header Text Color
      title.zh: 表头文字色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-table-header-bg
      type: variable-themed-color
      title: Table Header Background Color
      title.zh: 表头背景色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-table-line-bg
      type: variable-themed-color
      title: Striped Background Color
      title.zh: 斑马纹背景色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: title-embed-block
      title: Embed Block
      title.zh: 内嵌块
      type: heading
      level: 1
      collapsed: true
    - id: embed-border-hidden
      type: class-toggle
      title: Hide Embed Block's Border
      title.zh: 隐藏内嵌块的边框
    - id: embed-title-right-top
      type: class-toggle
      title: Move Embed File Title to Top Right
      title.zh: 内嵌文件标题移至右上角
      description: Visible on hover; disabled when alias is "#", e.g., ![[FileName|#]]
      description.zh: 鼠标悬停时显示；别名为 “#” 时禁用，例如：![[文件名|#]]
      default: true
    - id: title-image
      title: Image
      title.zh: 图片
      type: heading
      level: 1
      collapsed: true
    - id: image-alt
      type: class-toggle
      title: Add Alt Text Below and Center the Image
      title.zh: 在图片底部添加提示文本并居中图片
      description: "Example: ![[image.jpg|alt text]]"
      description.zh: 示例：![[图片.jpg|提示文本]]
      default: true
    - id: image-zoom
      type: class-toggle
      title: Click to Zoom Image
      title.zh: 鼠标按下时放大图片
      description: Reference from https://github.com/aaaaalexis/obsidian-cupertino
      description.zh: 参考自 https://github.com/aaaaalexis/obsidian-cupertino
      default: true
    - id: image-dark-hover
      type: class-toggle
      title: Decrease Brightness in Dark Mode
      title.zh: 黑暗模式下降低图片亮度
      description: Brightness increases on hover
      description.zh: 鼠标悬停时亮度会增加
      default: true
    - id: title-blockquote
      title: Blockquote
      title.zh: 引言块
      type: heading
      level: 1
      collapsed: true
    - id: quote-italic
      type: class-toggle
      title: Use Italic Style in Blockquote
      title.zh: 使用斜体
    - id: quote-mark
      type: class-toggle
      title: Enable Quote Mark Style in Reading View
      title.zh: 阅读视图下添加前置大引号
      description: Replace front line border with a quotation mark
      description.zh: 用引号替代前置边框
    - id: quote-outline-style
      type: class-select
      title: Blockquote Style in Reading View
      title.zh: 阅读视图中引言的样式
      allow-empty: false
      default: quote-shadow
      options:
          - label: Plain
            value: quote-none
          - label: Border
            value: quote-border
          - label: Shadow
            value: quote-shadow
    - id: title-list
      title: List
      title.zh: 列表
      type: heading
      level: 1
      collapsed: true
    - id: list-enable
      type: class-toggle
      title: Optimize List Style
      title.zh: 优化列表样式
      description: ❗No support for list or task items inside callouts
      description.zh: ❗精力有限，暂不适配 Callout 中的列表或待办项
      default: true
    - id: list-bullet-thread-style
      type: class-toggle
      title: Logseq Bullet Thread Style List
      title.zh: Logseq Bullet Thread 样式的列表
      description: Only support bullet list in Live Preview mode. Reference from
          https://gist.github.com/KillyMXI/cbef8edff6dd55d9e6ea4df66567e9b1
      description.zh: 仅支持实时预览模式中的无序列表。参考自
          https://gist.github.com/KillyMXI/cbef8edff6dd55d9e6ea4df66567e9b1
      default: true
    - id: setting-list-marker
      type: variable-themed-color
      title: List Marker Color
      title.zh: 列表标记颜色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-list-marker-alt
      type: variable-themed-color
      title: Alternate List Marker Color
      title.zh: 列表标记颜色2
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-list-guide-color
      type: variable-themed-color
      title: List Guide Line Color
      title.zh: 列表引导线颜色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: title-task-list-(checkbox)
      title: Task List (Checkbox)
      title.zh: 待办事项（勾选框）
      type: heading
      level: 2
      collapsed: true
    - id: list-checkbox-line
      type: class-select
      title: Completed Items Decoration Style
      title.zh: 已完成事项的样式
      allow-empty: false
      default: list-checkbox-decoration-default
      options:
          - label: Strikethrough
            value: list-checkbox-decoration-default
          - label: Underline
            value: list-checkbox-decoration-underline
          - label: None
            value: list-checkbox-decoration-none
    - id: list-checkbox-gray
      type: class-toggle
      title: Gray Out Completed Items
      title.zh: 已完成的事项使用灰色文字
    - id: list-checkbox-alternative
      type: class-toggle
      title: Enhanced Checkbox Styles
      title.zh: 更多的勾选框样式
      description: Disable this if you are using your own implementation via a CSS snippet
      description.zh: 如果您正在使用自己的 CSS 片段实现，请禁用此选项
      default: true
    - id: setting-list-checkbox-color
      type: variable-themed-color
      title: Checkbox Marker Color
      title.zh: 勾选框标记颜色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-list-checkbox-color-hover
      type: variable-themed-color
      title: Checkbox Marker Hover Color
      title.zh: 勾选框标记悬停颜色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-list-checkbox-border
      type: variable-themed-color
      title: Checkbox Marker Border Color
      title.zh: 勾选框标记边框颜色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: title-code
      title: Code
      title.zh: 代码
      type: heading
      level: 1
      collapsed: true
    - id: setting-code-inline
      type: variable-themed-color
      title: Inline Code Color
      title.zh: 行内代码文字色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-code-bg
      type: variable-themed-color
      title: Code Block Background Color
      title.zh: 代码块背景色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: code-line-number
      type: class-toggle
      title: Enable Code Block Line Numbers in Live Preview Mode
      title.zh: 在实时预览模式下启用代码块行号
      description: Due to the limitation of Obsidian's render strategy, if the code
          block has too many lines, line numbering may be incorrect
      description.zh: 由于 Obsidian 渲染方式的限制，如果代码块行数过多，行号可能会出现错误
      default: true
    - id: setting-code-language-color
      type: variable-themed-color
      title: Language Indicator Color
      title.zh: 语言标识颜色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: code-language
      type: class-toggle
      title: Enable Code Block Language Indicator in Reading View
      title.zh: 在阅读视图下启用代码块语言标识
      default: true
    - id: code-nowrap
      type: class-toggle
      title: Prevent Code Wrapping in Reading View
      title.zh: 阅读视图下代码过长时不换行
      description: Only effective in editor
      description.zh: 仅在编辑器内生效
      default: true
    - id: code-preview-bg
      type: class-toggle
      title: Enable Code Block Background in Reading View
      title.zh: 在阅读视图下启用代码块背景
    - id: setting-code-bg-outer
      type: variable-text
      title: Custom Code Block Background in Reading View
      title.zh: 自定义阅读视图下代码块背景
      description: Any CSS "background" value, e.g. url("/your/image/url")
      description.zh: 任何 CSS “background” 值，例如：url("图片链接地址")
      default: ""
    - id: code-mac-style-header
      type: class-toggle
      title: Add macOS Style Code Block Header in Reading View
      title.zh: 在阅读视图下为代码块添加 macOS 风格标题栏
      description: No code block border; No effective when exporting PDF
      description.zh: 无代码块边框；导出 PDF 时不生效
    - id: code-theme
      type: class-toggle
      title: Use Theme's Color Scheme
      title.zh: 使用主题的代码高亮方案
      default: true
    - id: title-tag
      title: Tag
      title.zh: 标签
      type: heading
      level: 1
      collapsed: true
    - id: tag-click-to-edit
      type: class-toggle
      title: Click to Edit Tags in Live Preview Mode
      title.zh: 在实时预览模式下点击标签进行编辑
      description: Click "#" to jump
      description.zh: 点击 “#” 跳转
    - id: tag-style
      type: class-select
      title: Tag Style
      title.zh: 标签样式
      description: Tags like "#obsidian", "#todo", "#important", "#progress", and
          "#complete" will be colorized when using "Outline" or "Fill" styles
      description.zh: 当选择 “Outline” 或 “Fill”
          样式时，“#obsidian”、“#todo”、“#important”、“#progress”、“#complete” 标签会有额外颜色
      allow-empty: false
      default: tag-outline
      options:
          - label: Default
            value: tag-default
          - label: Plain
            value: tag-plain
          - label: Outline
            value: tag-outline
          - label: Fill
            value: tag-fill
    - id: setting-tag-bg
      type: variable-themed-color
      title: Tag Background Color
      title.zh: 标签背景色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-tag-color
      type: variable-themed-color
      title: Tag Text Color
      title.zh: 标签文字色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: setting-tag-border
      type: variable-themed-color
      title: Tag Border Color
      title.zh: 标签边框颜色
      format: hex
      opacity: true
      default-light: "#"
      default-dark: "#"
    - id: title-canvas
      title: Canvas
      title.zh: 白板
      type: heading
      level: 1
      collapsed: true
    - id: canvas-group-hide
      type: class-toggle
      title: Hide Left Canvas Control Buttons
      title.zh: 隐藏左侧控制按钮
      description: Shows on hover
      description.zh: 鼠标移入时显示
    - id: canvas-center
      type: class-toggle
      title: Center Text in Card When Focus is Lost
      title.zh: 卡片失去焦点时居中文本
    - id: title-pdf
      title: PDF
      title.zh: PDF
      type: heading
      level: 1
      collapsed: true
    - id: pdf-dark-hover
      type: class-toggle
      title: Decrease Brightness in Dark Mode
      title.zh: 黑暗模式下降低图片亮度
      description: Brightness increases on hover
      description.zh: 鼠标悬停时亮度会增加
      default: true
    - id: pdf-dark-invert
      type: class-toggle
      title: Invert Colors in Dark Mode
      title.zh: 黑暗模式下反转颜色
    - id: title-pdf-export
      title: PDF Export
      title.zh: PDF 导出
      type: heading
      level: 2
      collapsed: false
    - id: pdf-export-transparent
      type: class-toggle
      title: Set Background to Transparent
      title.zh: 导出时将页面背景色设置为透明
    - id: pdf-export-page-break
      type: class-toggle
      title: Better Page Break Strategy
      title.zh: 更好的分页策略
      description: Always break page before H1 headings; avoid page breaks inside
          images, tables, and code blocks
      description.zh: 在 H1 标题前强制分页；避免在图片、表格和代码块内分页
    - id: pdf-export-standard
      type: class-toggle
      title: Standard Spacing Between Paragraphs and List
      title.zh: 标准的段落和列表的间距
    - id: pdf-export-default-hr
      type: class-toggle
      title: Use Default Style for Horizontal Rule
      title.zh: 使用默认的水平线样式
    - id: title-properties
      title: Properties
      title.zh: 文档属性
      type: heading
      level: 1
      collapsed: true
    - id: prop-outline
      type: class-toggle
      title: Add Outline for Property Panel
      title.zh: 属性面板添加边框
    - id: prop-hide-preview
      type: class-toggle
      title: Hide Property Panel in Reading View
      title.zh: 阅读视图下隐藏属性面板
*/
/* @settings
id: maple-plugin
name: Maple Plugin
settings:
    - id: info-plugin-intro
      type: info-text
      description: >-
          If you find any plugin not displaying properly, please open an issue
          at the [GitHub
          repository](https://github.com/subframe7536/obsidian-theme-maple).

          > [!info]- Adapted plugins

          > - Better Command Palette

          > - Calendar

          > - Obsidian Git

          > - MySnippets

          > - Quite Outline

          > - Recent Files

          > - Settings Search

          > - Shiki Highlighter
      description.zh: >-
          如果您发现某个插件显示不正常，请前往 [GitHub
          仓库](https://github.com/subframe7536/obsidian-theme-maple) 提交 issue。

          > [!info]- 已适配的插件

          > - Better Command Palette

          > - Calendar

          > - Obsidian Git

          > - MySnippets

          > - Quite Outline

          > - Recent Files

          > - Settings Search

          > - Shiki Highlighter
      markdown: true
    - id: title-calendar
      title: Calendar
      title.zh: 日历
      type: heading
      level: 1
      collapsed: true
    - id: calendar-weekend
      type: class-select
      title: Highlight Weekends
      title.zh: 突出显示周末
      allow-empty: false
      default: calendar-end-disable
      options:
          - label: Disable
            value: calendar-end-disable
          - label: Day 1 and Day 2
            value: calendar-end-1-2
          - label: Day 2 and Day 3
            value: calendar-end-2-3
          - label: Day 3 and Day 4
            value: calendar-end-3-4
          - label: Day 4 and Day 5
            value: calendar-end-4-5
          - label: Day 5 and Day 6
            value: calendar-end-5-6
          - label: Day 6 and Day 7
            value: calendar-end-6-7
          - label: Day 7 and Day 1
            value: calendar-end-7-1
    - id: calendar-swap-year-month
      type: class-toggle
      title: Swap Year and Month Display
      title.zh: 交换年份和月份显示
    - id: setting-calendar-year-suffix
      type: variable-text
      title: Year Suffix Text
      title.zh: 年份后缀文本
      default: 年
      quotes: true
    - id: setting-calendar-max-width
      type: variable-text
      title: Calendar Maximum Width
      title.zh: 日历最大宽度
      description: Any CSS "max-width" value
      description.zh: 任何 CSS “max-width” 值
      default: 500px
*/
/* @settings
id: maple-mobile
name: Maple Mobile
settings:
    - id: mobile-floating-button
      type: class-toggle
      title: Enable Floating Mode Switch Button
      title.zh: 启用浮动的模式切换按钮
      default: true
    - id: title-font-settings
      title: Font Settings
      title.zh: 字体设置
      description: It is inconvenient to install fonts on mobile devices, so maybe you
          need this option
      description.zh: 移动端不方便安装字体，所以有了这个选项
      type: heading
      level: 1
      collapsed: true
    - id: info-info-font-mobile
      type: info-text
      description: >-
          > [!tip]

          > 1. Reset options in **Appearance > Font** to make this work

          > 2. Type "**maplemono**" if you want to use the theme's built-in
          monospace font Maple Mono

          > 3. External font can load from CSS Snippets.
      description.zh: |-
          > [!tip]
          > 1. 需要先重置 **外观 > 字体** 中的选项才能生效
          > 2. 如果想使用主题内置的等宽字体 Maple Mono，请输入 **maplemono**
          > 3. 外部字体可以通过 CSS 片段加载
      markdown: true
    - id: setting-mobile-font-interface
      type: variable-text
      title: Interface Font
      title.zh: 页面字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: ""
    - id: setting-mobile-font-text
      type: variable-text
      title: Text Font
      title.zh: 正文字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: ""
    - id: setting-mobile-font-monospace
      type: variable-text
      title: Monospace Font
      title.zh: 等宽字体
      description: Any CSS "font-family" value
      description.zh: 任何 CSS “font-family” 值
      default: maplemono
*/

/* #region global variables */
body {
  --base-accent-h: var(--accent-h);
  --theme-accent-h: var(--base-accent-h);
  --accent-active: hsl(
    var(--theme-accent-active-h),
    var(--theme-accent-active-s),
    var(--theme-accent-active-l)
  );
  --accent-active-bg: hsla(
    var(--theme-accent-active-h),
    var(--theme-accent-active-s),
    var(--theme-accent-active-l),
    var(--color-opacity)
  );
  --accent-inactive: hsl(
    var(--theme-accent-inactive-h),
    var(--theme-accent-inactive-s),
    var(--theme-accent-inactive-l)
  );
  --bg-opacity: 1;
  --font-ui-smaller: 13px;
  --font-ui-small: 14px;
  --font-ui-medium: 16px;
  --background-modifier-border: hsla(
    var(--theme-accent-inactive-h),
    calc(var(--theme-accent-inactive-s) / 2),
    var(--theme-accent-inactive-l),
    75%
  );
  --background-modifier-border-hover: hsla(
    var(--theme-accent-active-h),
    calc(var(--theme-accent-active-s) * 0.7),
    var(--theme-accent-active-l),
    60%
  );
  --background-primary: hsl(var(--background-primary-hsl));
  --background-primary-alt: hsl(var(--background-primary-alt-hsl));
  --background-secondary: hsl(var(--background-secondary-hsl));
  --background-modifier-border-focus: var(--background-modifier-border-hover);
  --background-modifier-error: rgba(var(--color-red-rgb), 1);
  --background-modifier-error-hover: rgba(var(--color-red-rgb), 0.9);
  --background-modifier-cover: hsla(var(--background-secondary-hsl), 0.6);
  --tab-container-background: var(--frame-bg);
  --titlebar-background: var(--frame-bg);
  --titlebar-background-focused: var(--frame-bg);
  --input-radius: var(--size-2-3);
  --input-shadow: 0 0.125px 0 0.5px var(--color-base-10),
    inset 0 -0.125px 1px 0px var(--color-base-30),
    0 0.75px 2px 0.5px var(--color-base-50);
  --input-shadow-hover: 0 0.125px 0 0.5px var(--color-base-20),
    inset 0 -0.125px 1px 0px var(--color-base-40),
    0 0.75px 2px 0.5px var(--color-base-50);
  --animation-dur: var(--setting-animation-time, 250ms);
  --animation-fast: calc(var(--animation-dur) / 2) var(--anim-motion-smooth);
  --animation: var(--animation-dur) var(--anim-motion-smooth);
  --animation-slow: calc(var(--animation-dur) * 2) var(--anim-motion-smooth);
  --animation-delay: calc(4 * var(--animation-dur));
  --divider-color: var(--setting-divider-color, var(--color-base-30));
  --divider-width-hover: var(--size-4-1);
  --nav-item-background-active: var(--accent-active-bg);
  --nav-item-background-selected: var(--background-modifier-hover);
  --line-height-normal: var(--setting-line-height, 1.8);
  --line-height-tight: var(--setting-item-line-height, 1.5);
  --menu-padding: 4px;
}

.theme-light {
  --color-red-rgb: 189.0825, 81.2175, 81.2175;
  --color-red: rgba(var(--color-red-rgb), var(--color-opacity));
  --color-orange-rgb: 199.41, 122.774, 35.19;
  --color-orange: rgba(var(--color-orange-rgb), var(--color-opacity));
  --color-yellow-rgb: 177.48, 139.74, 26.52;
  --color-yellow: rgba(var(--color-yellow-rgb), var(--color-opacity));
  --color-green-rgb: 71.4, 142.8, 20.4;
  --color-green: rgba(var(--color-green-rgb), var(--color-opacity));
  --color-cyan-rgb: 17.85, 124.95, 82.11;
  --color-cyan: rgba(var(--color-cyan-rgb), var(--color-opacity));
  --color-blue-rgb: 5.202, 132.8822, 168.198;
  --color-blue: rgba(var(--color-blue-rgb), var(--color-opacity));
  --color-purple-rgb: 114.24, 97.92, 146.88;
  --color-purple: rgba(var(--color-purple-rgb), var(--color-opacity));
  --color-opacity: 1;
  --theme-accent-active-h: var(--theme-accent-h);
  --theme-accent-active-s: calc(20% + var(--accent-s) / 10);
  --theme-accent-active-l: calc(50% + var(--accent-l) / 10);
  --theme-accent-inactive-h: var(--theme-accent-h);
  --theme-accent-inactive-s: calc(15% + var(--accent-s) / 10);
  --theme-accent-inactive-l: calc(75% + var(--accent-l) / 10);
  --color-accent-hsl: var(--base-accent-h), var(--theme-accent-active-s),
    var(--theme-accent-active-l);
  --color-accent: hsl(var(--color-accent-hsl));
  --color-accent-1: hsl(
    calc(var(--base-accent-h) - 1),
    calc(var(--theme-accent-active-s) * 1.01),
    calc(var(--theme-accent-active-l) * 1.075)
  );
  --color-accent-2: hsl(
    calc(var(--base-accent-h) - 3),
    calc(var(--theme-accent-active-s) * 1.02),
    calc(var(--theme-accent-active-l) * 1.15)
  );
  --frame-bg: hsl(
    var(--base-accent-h),
    calc(var(--theme-accent-active-s) * 0.6),
    calc(85% + var(--theme-accent-active-l) * 0.1)
  );
  --background-primary-hsl: var(--base-accent-h), 12%, 97%;
  --background-primary-alt-hsl: var(--base-accent-h), 10%, 95%;
  --background-secondary-hsl: calc(var(--base-accent-h) - 18), 8%, 93%;
  --background-modifier-hover: hsl(
    var(--base-accent-h),
    var(--theme-accent-inactive-s),
    max(70%, var(--accent-l) * 0.8),
    25%
  );
  --text-on-accent: #fafafa !important;
}
.theme-light.color-use-minimal {
  --base-accent-h: var(--setting-color-active-custom-light-h, 210);
  --background-primary-hsl: var(--base-accent-h), 6%, 97%;
  --background-primary-alt-hsl: var(--base-accent-h), 10%, 95.5%;
  --background-secondary-hsl: calc(var(--base-accent-h) - 18), 4%, 93%;
  --frame-bg: hsl(
    var(--base-accent-h),
    calc(var(--theme-accent-active-s) * 0.2),
    calc(85% + var(--theme-accent-active-l) * 0.1)
  );
  --theme-accent-active-s: var(--setting-color-active-custom-light-s, 6%);
  --theme-accent-active-l: var(--setting-color-active-custom-light-l, 36%);
  --theme-accent-inactive-s: var(--setting-color-inactive-custom-light-s, 8%);
  --theme-accent-inactive-l: var(
    --setting-color-inactive-custom-light-l,
    70%
  );
}
.theme-light.color-use-custom {
  --base-accent-h: var(--setting-accent-h-light, 35);
  --theme-accent-active-s: 22%;
  --theme-accent-active-l: 56%;
  --theme-accent-inactive-s: 20%;
  --theme-accent-inactive-l: 78%;
}
.theme-light.color-use-custom.color-active-alt-light {
  --theme-accent-h: calc(var(--base-accent-h) + 60);
}
.theme-light.color-use-custom.color-active-custom-light {
  --theme-accent-active-h: var(--setting-color-active-custom-light-h);
  --theme-accent-active-s: var(--setting-color-active-custom-light-s);
  --theme-accent-active-l: var(--setting-color-active-custom-light-l);
  --theme-accent-inactive-h: var(--setting-color-inactive-custom-light-h);
  --theme-accent-inactive-s: var(--setting-color-inactive-custom-light-s);
  --theme-accent-inactive-l: var(--setting-color-inactive-custom-light-l);
}

.theme-dark {
  --color-red-rgb: 209.304, 137.496, 137.496;
  --color-red: rgba(var(--color-red-rgb), var(--color-opacity));
  --color-orange-rgb: 206.04, 162.52, 140.76;
  --color-orange: rgba(var(--color-orange-rgb), var(--color-opacity));
  --color-yellow-rgb: 214.2, 181.56, 132.6;
  --color-yellow: rgba(var(--color-yellow-rgb), var(--color-opacity));
  --color-green-rgb: 147.288, 199.512, 155.992;
  --color-green: rgba(var(--color-green-rgb), var(--color-opacity));
  --color-cyan-rgb: 126.48, 199.92, 197.472;
  --color-cyan: rgba(var(--color-cyan-rgb), var(--color-opacity));
  --color-blue-rgb: 126.48, 183.6, 240.72;
  --color-blue: rgba(var(--color-blue-rgb), var(--color-opacity));
  --color-purple-rgb: 186.2265, 179.265, 238.935;
  --color-purple: rgba(var(--color-purple-rgb), var(--color-opacity));
  --color-opacity: 0.85;
  --theme-accent-active-h: var(--theme-accent-h);
  --theme-accent-active-s: calc(20% + var(--accent-s) / 10);
  --theme-accent-active-l: calc(40% + var(--accent-l) / 10);
  --theme-accent-inactive-h: var(--theme-accent-h);
  --theme-accent-inactive-s: calc(15% + var(--accent-s) / 10);
  --theme-accent-inactive-l: calc(30% + var(--accent-l) / 10);
  --color-accent-hsl: var(--base-accent-h), var(--theme-accent-active-s),
    calc(var(--theme-accent-active-l) * var(--color-opacity));
  --color-accent: hsl(var(--color-accent-hsl));
  --color-accent-1: hsl(
    calc(var(--base-accent-h) - 3),
    calc(var(--theme-accent-active-s) * 1.02),
    calc(var(--theme-accent-active-l) * 1.15 * var(--color-opacity))
  );
  --color-accent-2: hsl(
    calc(var(--base-accent-h) - 5),
    calc(var(--theme-accent-active-s) * 1.05),
    calc(var(--theme-accent-active-l) * 1.29 * var(--color-opacity))
  );
  --frame-bg: hsl(
    var(--base-accent-h),
    calc(var(--theme-accent-active-s) * 0.5),
    calc(8% + var(--theme-accent-active-l) * 0.1 * var(--color-opacity))
  );
  --background-primary-hsl: var(--base-accent-h), 5%, 11%;
  --background-primary-alt-hsl: var(--base-accent-h), 10%, 13%;
  --background-secondary-hsl: calc(var(--base-accent-h) - 18), 6%, 12%;
  --background-modifier-hover: hsl(
    var(--base-accent-h),
    var(--theme-accent-active-s),
    max(50%, var(--accent-l) * 0.6),
    20%
  );
  --text-normal: hsla(var(--base-accent-h), 50%, 94%, 75%);
  --text-on-accent: #eaeaea !important;
}
.theme-dark.color-use-minimal {
  --text-on-accent: #1e1e1f !important;
  --base-accent-h: var(--setting-color-active-custom-dark-h, 210);
  --background-primary-hsl: var(--base-accent-h), 4%, 10%;
  --background-primary-alt-hsl: var(--base-accent-h), 8%, 12%;
  --background-secondary-hsl: calc(var(--base-accent-h) - 18), 4%, 12%;
  --frame-bg: hsl(
    var(--base-accent-h),
    calc(var(--theme-accent-active-s) * 0.1),
    calc(8% + var(--theme-accent-active-l) * 0.1 * var(--color-opacity))
  );
  --theme-accent-active-s: var(--setting-color-active-custom-dark-s, 4%);
  --theme-accent-active-l: var(--setting-color-active-custom-dark-l, 72%);
  --theme-accent-inactive-s: var(--setting-color-inactive-custom-dark-s, 12%);
  --theme-accent-inactive-l: var(--setting-color-inactive-custom-dark-l, 42%);
}
.theme-dark.color-use-custom {
  --base-accent-h: var(--setting-accent-h-dark, 207);
  --theme-accent-active-s: 24%;
  --theme-accent-active-l: 52%;
  --theme-accent-inactive-s: 12%;
  --theme-accent-inactive-l: 32%;
}
.theme-dark.color-use-custom.color-active-alt-dark {
  --theme-accent-h: calc(var(--base-accent-h) + 60);
}
.theme-dark.color-use-custom.theme-dark.color-use-custom.color-active-custom-dark {
  --theme-accent-active-h: var(--setting-color-active-custom-dark-h);
  --theme-accent-active-s: var(--setting-color-active-custom-dark-s);
  --theme-accent-active-l: var(--setting-color-active-custom-dark-l);
  --theme-accent-inactive-h: var(--setting-color-inactive-custom-dark-h);
  --theme-accent-inactive-s: var(--setting-color-inactive-custom-dark-s);
  --theme-accent-inactive-l: var(--setting-color-inactive-custom-dark-l);
}

/* #endregion global variables */
/* #region style settings */
/* #region Icon */
.style-settings-heading[data-id^=maple] .style-settings-collapse-indicator::after {
  content: "";
  display: inline-block;
  translate: 0 var(--size-4-1);
  margin-left: var(--size-4-2);
  -webkit-mask: var(--style-settings-icon) no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--text-muted);
  width: var(--font-ui-medium);
  height: var(--font-ui-medium);
}

.style-settings-heading[data-id=maple-basic] {
  --style-settings-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12 22a1 1 0 0 1 0-20a10 9 0 0 1 10 9a5 5 0 0 1-5 5h-2.25a1.75 1.75 0 0 0-1.4 2.8l.3.4a1.75 1.75 0 0 1-1.4 2.8z'/><circle cx='13.5' cy='6.5' r='.5' fill='currentColor'/><circle cx='17.5' cy='10.5' r='.5' fill='currentColor'/><circle cx='6.5' cy='12.5' r='.5' fill='currentColor'/><circle cx='8.5' cy='7.5' r='.5' fill='currentColor'/></g></svg>");
}

.style-settings-heading[data-id=maple-workspace] {
  --style-settings-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><rect width='18' height='18' x='3' y='3' rx='2'/><path d='M9 3v18m0-6h12'/></g></svg>");
}

.style-settings-heading[data-id=maple-editor] {
  --style-settings-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 21h8m.174-14.188a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z'/></svg>");
}

.style-settings-heading[data-id=maple-plugin] {
  --style-settings-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M10 22V7a1 1 0 0 0-1-1H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5a1 1 0 0 0-1-1H2'/><rect width='8' height='8' x='14' y='2' rx='1'/></g></svg>");
}

.style-settings-heading[data-id=maple-mobile] {
  --style-settings-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><rect width='10' height='14' x='3' y='8' rx='2'/><path d='M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4M8 18h.01'/></g></svg>");
}

/* #endregion */
/* #region Default Color Input Indicator */
html[lang=zh] {
  --system-accent-override-text-cotent: "由 Style Settings 插件控制";
}

.setting-item-info:has(+ .setting-item-control > .style-settings-import) .setting-item-name {
  padding: var(--size-4-1);
}

body:not(.color-use-default) .mod-settings .vertical-tab-content-container > .vertical-tab-content > .setting-item:nth-child(2) > .setting-item-control:has(> input[type=color]) {
  position: relative;
}
body:not(.color-use-default) .mod-settings .vertical-tab-content-container > .vertical-tab-content > .setting-item:nth-child(2) > .setting-item-control:has(> input[type=color]) :is(div, input) {
  visibility: hidden;
  pointer-events: none;
}
body:not(.color-use-default) .mod-settings .vertical-tab-content-container > .vertical-tab-content > .setting-item:nth-child(2) > .setting-item-control:has(> input[type=color])::before {
  content: var(--system-accent-override-text-cotent, "Controlled by Style Settings Plugin");
  font-family: var(--font-interface);
  font-size: var(--font-ui-smaller);
  position: absolute;
  width: var(--system-access-override-text-width, max-content);
  top: 50%;
  translate: 0 -50%;
  pointer-events: none;
}

/* #endregion */
/* #region Buttons */
:is(.style-settings-import,
.style-settings-export,
.style-settings-copy,
.style-settings-download,
.style-settings-import-label) {
  transition: background-color var(--animation);
  text-decoration: none !important;
  height: var(--input-height);
  font-size: var(--font-ui-small);
  font-family: inherit;
  font-weight: var(--input-font-weight);
  color: var(--text-normal) !important;
  line-height: var(--input-height);
  padding: 0 0.8em;
  max-width: 100%;
  box-sizing: border-box;
  margin: 0;
  border: 0;
  box-shadow: var(--input-shadow);
  border-radius: var(--input-radius);
  background-color: var(--interactive-normal);
}
:is(.style-settings-import,
.style-settings-export,
.style-settings-copy,
.style-settings-download,
.style-settings-import-label):hover {
  box-shadow: var(--input-shadow-hover);
  background-color: var(--interactive-hover);
}

/* #endregion */
/* #region Controls */
.style-settings-container .themed-color-wrapper {
  display: flex;
}
.style-settings-container .themed-color-wrapper > div {
  gap: var(--size-4-2);
}
.style-settings-container .themed-color-wrapper > div + div {
  margin-top: 0;
}
.style-settings-container .themed-color-wrapper > div .pickr > button {
  width: var(--input-height);
  height: var(--input-height);
  border-radius: var(--button-radius);
}
.style-settings-container .themed-color-wrapper > div .pickr > button::before, .style-settings-container .themed-color-wrapper > div .pickr > button::after {
  border-radius: var(--button-radius);
}
.style-settings-container .themed-color-wrapper > div .pickr-reset > button {
  cursor: pointer;
  margin: 0;
  width: var(--input-height);
  height: var(--input-height);
  position: relative;
}
.style-settings-container .themed-color-wrapper > div .pickr-reset > button svg {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}

.style-settings-container .setting-item:is([data-id=setting-accent-h-light],
[data-id=setting-accent-h-dark]) input.slider {
  --slider-thumb-height: var(--size-4-6);
  --slider-thumb-width: var(--size-2-2);
  --slider-track-height: calc(var(--slider-thumb-height) - var(--size-4-3));
  --slider-thumb-radius: var(--slider-thumb-width);
  --slider-thumb-y: calc(
    (var(--slider-track-height) - var(--slider-thumb-height)) / 1.4
  );
  border-radius: var(--radius-s);
  background: linear-gradient(to right, hsl(0, 60%, 60%), hsl(30, 60%, 60%), hsl(60, 60%, 60%), hsl(90, 60%, 60%), hsl(120, 60%, 60%), hsl(150, 60%, 60%), hsl(180, 60%, 60%), hsl(210, 60%, 60%), hsl(240, 60%, 60%), hsl(270, 60%, 60%), hsl(300, 60%, 60%), hsl(330, 60%, 60%), hsl(0, 60%, 60%));
}
.style-settings-container .setting-item:is([data-id=setting-accent-h-light],
[data-id=setting-accent-h-dark]) input.slider::-webkit-slider-thumb {
  box-shadow: none;
  border-width: 1px;
}
.style-settings-container .setting-item:is([data-id=setting-accent-h-light],
[data-id=setting-accent-h-dark]) .setting-item-control::before {
  content: "";
  font-size: 0.7em;
  text-align: center;
  white-space: pre-wrap;
  height: 1.6em;
  width: 1.6em;
  color: var(--text-normal);
  position: relative;
  right: 1em;
  border-radius: var(--radius-s);
}
.style-settings-container .setting-item[data-id=setting-accent-h-light] .setting-item-control::before {
  background-color: hsl(var(--setting-accent-h-light, 35), 20%, 56%);
}
.style-settings-container .setting-item[data-id=setting-accent-h-dark] .setting-item-control::before {
  background-color: hsl(var(--setting-accent-h-dark, 207), 24%, 42%);
}

/* #endregion */
/* #region Hide Options */
body.is-mobile .setting-item:is([data-id=title-layout],
[data-id=modal-slider],
[data-id=modal-blur],
[data-id*=modal-header],
[data-id=image-zoom],
[data-id=scrollbar-enable],
[data-id=tab-slide-up]),
body.is-phone .setting-item:is([data-id=enable-blur]),
body:not(.is-mobile) div[data-id=maple-mobile],
body:not(.line-active-enable) .setting-item[data-id=setting-line-active-color],
body:not(.calendar-swap-year-month) .setting-item[data-id=setting-calendar-year-suffix],
body:not(.app-layout-card) .setting-item:is([data-id=app-layout-card-bg],
[data-id=app-layout-card-border],
[data-id=setting-app-layout-spacing]),
body:not(.app-layout-card.app-layout-card-custom) .setting-item:is([data-id=setting-layout-image-light],
[data-id=setting-layout-opacity-light],
[data-id=setting-layout-image-dark],
[data-id=setting-layout-opacity-dark]),
body:not(.editor-bg-plain) .setting-item[data-id=setting-editor-bg],
body.editor-bg-plain .setting-item[data-id=setting-editor-bg-grid-spacing],
body:not(.editor-bg-grid-dots) .setting-item[data-id=setting-editor-bg-grid-dots],
body:not(.editor-bg-grid-line) .setting-item[data-id=setting-editor-bg-grid-line],
body:not(.scrollbar-enable) .setting-item:is([data-id=scrollbar-hover],
[data-id=scrollbar-movein-animation-enable]),
body.bg-default .setting-item[data-id=setting-bg-color],
body.scrollbar-hide .setting-item:is([data-id*=scrollbar-hover],
[data-id=scrollbar-movein-animation],
[data-id=scrollbar-gutter]),
:is(body.status-bar-scroll, body:not(.status-bar-style-float)) .setting-item[data-id=status-bar-style-center],
body:not(.loading-text) .setting-item[data-id=loading-text-content],
body:not(.explorer-icon) .setting-item[data-id=setting-color-dirs],
body:not(.search-internal-enable) .setting-item:is([data-id=search-internal-expand-on-focus],
[data-id=search-internal-disable-select-all]),
body:not(.outline-enable) .setting-item:is([data-id=setting-outline-width],
[data-id=setting-outline-line-color],
[data-id=setting-outline-dot-color]),
body.color-use-default .setting-item:is([data-id=title-light-mode], [data-id=title-dark-mode]),
body.color-use-minimal .setting-item:is([data-id=setting-accent-h-light],
[data-id=setting-accent-h-dark],
[data-id=color-active-light],
[data-id=color-active-dark]),
body:not(.editor-custom-bottom-spacing) .setting-item[data-id=setting-editor-bottom-spacing],
body:not(.list-enable) .setting-item:is([data-id*=setting-list-],
[data-id=list-checkbox],
[data-id=list-bullet-thread-style]),
body:not(.list-bullet-thread-style) .setting-item[data-id=setting-list-guide-color],
body:not(.code-preview-bg) .setting-item[data-id=setting-code-bg-outer],
body:not(.modal-header) .setting-item:is([data-id=modal-header-search],
[data-id=setting-modal-header-title]),
body:not(.message-modify) .setting-item[data-id^=setting-message],
body:not(.image-zoom) .setting-item[data-id^=image-zoom-out],
body:not(.heading-level-enable) .setting-item[data-id^=heading-level-fix],
body:not(.heading-color-colorful) .setting-item[data-id=heading-color-custom],
body:not(.heading-h1-full-line) .setting-item[data-id=heading-h1-full-line-direction],
body:not(.heading-h1-block) .setting-item[data-id=heading-h1-block-contrast],
body:not(.heading-h2-full-line) .setting-item[data-id=heading-h2-full-line-direction],
body:not(.heading-h2-block) .setting-item[data-id=heading-h2-block-contrast],
body:not(.heading-h3-full-line) .setting-item[data-id=heading-h3-full-line-direction],
body:not(.heading-h3-block) .setting-item[data-id=heading-h3-block-contrast],
body:not(.heading-h4-full-line) .setting-item[data-id=heading-h4-full-line-direction],
body:not(.heading-h4-block) .setting-item[data-id=heading-h4-block-contrast],
body:not(.heading-h5-full-line) .setting-item[data-id=heading-h5-full-line-direction],
body:not(.heading-h5-block) .setting-item[data-id=heading-h5-block-contrast],
body:not(.heading-h6-full-line) .setting-item[data-id=heading-h6-full-line-direction],
body:not(.heading-h6-block) .setting-item[data-id=heading-h6-block-contrast],
body:not(.table-style-colorful) .setting-item[data-id^=setting-table],
body.table-style-minimal .setting-item[data-id=table-round],
body:not(.hr-enable) .setting-item[data-id^=setting-hr-icon],
body:not(.tag-outline) .setting-item:is([data-id=setting-tag-border],
[data-id=setting-tag-color]) {
  display: none;
}
body.is-mobile .setting-item:is([data-id=title-layout],
[data-id=modal-slider],
[data-id=modal-blur],
[data-id*=modal-header],
[data-id=image-zoom],
[data-id=scrollbar-enable],
[data-id=tab-slide-up]) + .style-settings-container,
body.is-phone .setting-item:is([data-id=enable-blur]) + .style-settings-container,
body:not(.is-mobile) div[data-id=maple-mobile] + .style-settings-container,
body:not(.line-active-enable) .setting-item[data-id=setting-line-active-color] + .style-settings-container,
body:not(.calendar-swap-year-month) .setting-item[data-id=setting-calendar-year-suffix] + .style-settings-container,
body:not(.app-layout-card) .setting-item:is([data-id=app-layout-card-bg],
[data-id=app-layout-card-border],
[data-id=setting-app-layout-spacing]) + .style-settings-container,
body:not(.app-layout-card.app-layout-card-custom) .setting-item:is([data-id=setting-layout-image-light],
[data-id=setting-layout-opacity-light],
[data-id=setting-layout-image-dark],
[data-id=setting-layout-opacity-dark]) + .style-settings-container,
body:not(.editor-bg-plain) .setting-item[data-id=setting-editor-bg] + .style-settings-container,
body.editor-bg-plain .setting-item[data-id=setting-editor-bg-grid-spacing] + .style-settings-container,
body:not(.editor-bg-grid-dots) .setting-item[data-id=setting-editor-bg-grid-dots] + .style-settings-container,
body:not(.editor-bg-grid-line) .setting-item[data-id=setting-editor-bg-grid-line] + .style-settings-container,
body:not(.scrollbar-enable) .setting-item:is([data-id=scrollbar-hover],
[data-id=scrollbar-movein-animation-enable]) + .style-settings-container,
body.bg-default .setting-item[data-id=setting-bg-color] + .style-settings-container,
body.scrollbar-hide .setting-item:is([data-id*=scrollbar-hover],
[data-id=scrollbar-movein-animation],
[data-id=scrollbar-gutter]) + .style-settings-container,
:is(body.status-bar-scroll, body:not(.status-bar-style-float)) .setting-item[data-id=status-bar-style-center] + .style-settings-container,
body:not(.loading-text) .setting-item[data-id=loading-text-content] + .style-settings-container,
body:not(.explorer-icon) .setting-item[data-id=setting-color-dirs] + .style-settings-container,
body:not(.search-internal-enable) .setting-item:is([data-id=search-internal-expand-on-focus],
[data-id=search-internal-disable-select-all]) + .style-settings-container,
body:not(.outline-enable) .setting-item:is([data-id=setting-outline-width],
[data-id=setting-outline-line-color],
[data-id=setting-outline-dot-color]) + .style-settings-container,
body.color-use-default .setting-item:is([data-id=title-light-mode], [data-id=title-dark-mode]) + .style-settings-container,
body.color-use-minimal .setting-item:is([data-id=setting-accent-h-light],
[data-id=setting-accent-h-dark],
[data-id=color-active-light],
[data-id=color-active-dark]) + .style-settings-container,
body:not(.editor-custom-bottom-spacing) .setting-item[data-id=setting-editor-bottom-spacing] + .style-settings-container,
body:not(.list-enable) .setting-item:is([data-id*=setting-list-],
[data-id=list-checkbox],
[data-id=list-bullet-thread-style]) + .style-settings-container,
body:not(.list-bullet-thread-style) .setting-item[data-id=setting-list-guide-color] + .style-settings-container,
body:not(.code-preview-bg) .setting-item[data-id=setting-code-bg-outer] + .style-settings-container,
body:not(.modal-header) .setting-item:is([data-id=modal-header-search],
[data-id=setting-modal-header-title]) + .style-settings-container,
body:not(.message-modify) .setting-item[data-id^=setting-message] + .style-settings-container,
body:not(.image-zoom) .setting-item[data-id^=image-zoom-out] + .style-settings-container,
body:not(.heading-level-enable) .setting-item[data-id^=heading-level-fix] + .style-settings-container,
body:not(.heading-color-colorful) .setting-item[data-id=heading-color-custom] + .style-settings-container,
body:not(.heading-h1-full-line) .setting-item[data-id=heading-h1-full-line-direction] + .style-settings-container,
body:not(.heading-h1-block) .setting-item[data-id=heading-h1-block-contrast] + .style-settings-container,
body:not(.heading-h2-full-line) .setting-item[data-id=heading-h2-full-line-direction] + .style-settings-container,
body:not(.heading-h2-block) .setting-item[data-id=heading-h2-block-contrast] + .style-settings-container,
body:not(.heading-h3-full-line) .setting-item[data-id=heading-h3-full-line-direction] + .style-settings-container,
body:not(.heading-h3-block) .setting-item[data-id=heading-h3-block-contrast] + .style-settings-container,
body:not(.heading-h4-full-line) .setting-item[data-id=heading-h4-full-line-direction] + .style-settings-container,
body:not(.heading-h4-block) .setting-item[data-id=heading-h4-block-contrast] + .style-settings-container,
body:not(.heading-h5-full-line) .setting-item[data-id=heading-h5-full-line-direction] + .style-settings-container,
body:not(.heading-h5-block) .setting-item[data-id=heading-h5-block-contrast] + .style-settings-container,
body:not(.heading-h6-full-line) .setting-item[data-id=heading-h6-full-line-direction] + .style-settings-container,
body:not(.heading-h6-block) .setting-item[data-id=heading-h6-block-contrast] + .style-settings-container,
body:not(.table-style-colorful) .setting-item[data-id^=setting-table] + .style-settings-container,
body.table-style-minimal .setting-item[data-id=table-round] + .style-settings-container,
body:not(.hr-enable) .setting-item[data-id^=setting-hr-icon] + .style-settings-container,
body:not(.tag-outline) .setting-item:is([data-id=setting-tag-border],
[data-id=setting-tag-color]) + .style-settings-container {
  display: none;
}

/* #endregion */
/* 参考 https://github.com/damiankorcz/Prism-Theme */
.workspace-leaf-content[data-type=style-settings] div.view-content {
  padding: var(--file-margins);
}
body.is-mobile .workspace-leaf-content[data-type=style-settings] div.view-content {
  padding: var(--size-4-8) var(--size-4-4);
}
body:not(.is-mobile) .workspace-leaf-content[data-type=style-settings] .view-content .style-settings-container .setting-item:not(.setting-item-heading) {
  flex-direction: row;
}

.setting-item.setting-item-heading.style-settings-heading {
  padding: var(--size-4-2);
  margin: var(--size-4-1) 0;
  border-radius: var(--radius-m);
  padding-left: var(--size-4-2);
}
.setting-item.setting-item-heading.style-settings-heading:hover {
  background-color: var(--background-modifier-hover);
}

.style-settings-container {
  padding-bottom: unset;
}
.style-settings-container .setting-item {
  padding: var(--size-4-2);
  padding-left: var(--size-4-6);
}
.is-phone .style-settings-container .setting-item {
  margin-top: unset;
}

.style-settings-heading[data-level="0"] + .style-settings-container .style-settings-collapse-indicator {
  margin-left: unset;
}

:is(.setting-item.setting-item-heading.style-settings-heading,
.style-settings-container .style-settings-heading) {
  border-bottom: unset;
}

.setting-item-heading .setting-item-description {
  padding-left: var(--size-4-4);
}

.setting-item.setting-item-heading.is-collapsed {
  margin-bottom: unset;
}

.style-settings-container > .setting-item:last-of-type {
  padding-bottom: unset;
  margin-bottom: var(--size-4-4);
}

:is(.style-settings-heading[data-level="0"] + .style-settings-container,
.style-settings-container) {
  padding-left: var(--size-2-1);
  margin-left: var(--size-4-4);
  border-left: var(--nav-indentation-guide-width) solid var(--nav-indentation-guide-color);
  transition: border-color var(--animation);
}
:is(.style-settings-heading[data-level="0"] + .style-settings-container,
.style-settings-container):hover {
  border-left-color: var(--accent-inactive);
}

.modal-style-settings .style-settings-download {
  margin-right: var(--size-4-8);
}
.modal-style-settings .setting-item {
  align-items: center;
}

.style-settings-markdown {
  --callout-padding: var(--size-4-3);
  --callout-content-padding: var(--size-4-2) 0 0 0;
}
.style-settings-markdown code {
  color: var(--inline-code);
  background-color: var(--code-background);
  border-radius: var(--code-radius);
  font-size: var(--code-size);
  padding: 0.15em 0.3em;
  border: var(--code-border-width) solid var(--code-border-color);
  -webkit-box-decoration-break: clone;
}
.style-settings-markdown :is(ol, ul) {
  padding-inline-start: var(--size-4-8);
}

/* #endregion style settings */
/* #region layout */
body {
  --bg-editor: var(--background-primary);
  --bg-surface: var(--background-secondary);
}

body.app-layout-card:not(.is-mobile) {
  --divider-color: transparent;
  --pdf-background: transparent;
  --tab-divider-color: var(--color-base-35);
  --tab-active-shadow: none !important;
  --app-layout-spacing: var(--setting-app-layout-spacing, var(--size-2-3));
}
body.app-layout-card:not(.is-mobile).theme-light {
  --background-primary-alt-hsl: var(--base-accent-h), 18%, 93.5%;
}
body.app-layout-card:not(.is-mobile).theme-light.color-use-minimal {
  --background-primary-alt-hsl: var(--base-accent-h), 2%, 94%;
}
body.app-layout-card:not(.is-mobile).theme-dark {
  --background-primary-alt-hsl: var(--base-accent-h), 8%, 13.5%;
}
body.app-layout-card:not(.is-mobile).theme-dark.color-use-minimal {
  --background-primary-alt-hsl: var(--base-accent-h), 4%, 13%;
}
body.app-layout-card:not(.is-mobile):is(.app-layout-card-plain, .color-use-minimal) {
  background-color: var(--bg-surface);
  --editor-min-opacity: 1;
}
body.app-layout-card:not(.is-mobile):not(.app-layout-card-plain, .color-use-minimal) {
  background-color: transparent;
  background-image: var(--app-bg-image);
  background-repeat: no-repeat;
  background-size: 100% 100%;
  --bg-opacity: var(--setting-layout-opacity, 0.4);
  --bg-editor: hsla(
    var(--background-primary-hsl),
    max(var(--bg-opacity), var(--editor-min-opacity))
  );
  --bg-surface: hsla(var(--background-secondary-hsl), var(--bg-opacity));
}
body.app-layout-card:not(.is-mobile):not(.app-layout-card-plain, .color-use-minimal) :is(.titlebar, .workspace) {
  --frame-bg: transparent !important;
}
body.app-layout-card:not(.is-mobile):not(.app-layout-card-plain, .color-use-minimal).theme-light {
  --editor-min-opacity: 0.8;
}
body.app-layout-card:not(.is-mobile):not(.app-layout-card-plain, .color-use-minimal).theme-dark {
  --editor-min-opacity: 0.85;
}
body.app-layout-card:not(.is-mobile) .workspace-split.mod-left-split > .workspace-leaf-resize-handle {
  translate: var(--size-4-1);
}
body.app-layout-card:not(.is-mobile) .workspace-split.mod-right-split > .workspace-leaf-resize-handle {
  translate: calc(-1 * var(--size-4-1));
}
body.app-layout-card:not(.is-mobile) .workspace-split:is(.mod-left-split, .mod-right-split) .workspace-tabs > .workspace-leaf-resize-handle {
  border-color: var(--setting-divider-color, transparent);
  inset-inline: var(--size-4-1);
  width: unset;
}
body.app-layout-card:not(.is-mobile).app-layout-card-gradient:not(.color-use-minimal) {
  --bg-opacity: 0.6;
}
body.app-layout-card:not(.is-mobile).app-layout-card-gradient:not(.color-use-minimal).theme-light {
  --app-bg-image: linear-gradient(
    320deg,
    hsl(calc(var(--base-accent-h) + 50), 50%, 92%),
    hsl(calc(var(--base-accent-h) - 30), 36%, 87%)
  );
}
body.app-layout-card:not(.is-mobile).app-layout-card-gradient:not(.color-use-minimal).theme-dark {
  --app-bg-image: linear-gradient(
    320deg,
    hsl(calc(var(--base-accent-h) + 60), 11%, 22%),
    hsl(calc(var(--base-accent-h) - 10), 24%, 28%)
  );
}
body.app-layout-card:not(.is-mobile).app-layout-card-custom.theme-light {
  --bg-opacity: var(--setting-layout-opacity-light, 0.6);
  --app-bg-image: var(
    --setting-layout-image-light,
    linear-gradient(to bottom, var(--color-base-25))
  );
}
body.app-layout-card:not(.is-mobile).app-layout-card-custom.theme-dark {
  --bg-opacity: var(--setting-layout-opacity-dark, 0.6);
  --app-bg-image: var(
    --setting-layout-image-dark,
    linear-gradient(to bottom, var(--color-base-20))
  );
}
body.app-layout-card:not(.is-mobile).app-layout-card-border .mod-root .workspace-leaf-content {
  border: 1px solid var(--background-modifier-border);
}
body.app-layout-card:not(.is-mobile).app-layout-card-border .workspace-tab-header {
  border: 1px solid transparent;
}
body.app-layout-card:not(.is-mobile).app-layout-card-border .workspace-tab-header.is-active {
  border-color: var(--background-modifier-border);
}
body.app-layout-card:not(.is-mobile) .mod-root .workspace-tab-header-container {
  padding-left: var(--app-layout-spacing);
}
body.app-layout-card:not(.is-mobile) .mod-root .workspace-tab-container {
  padding: var(--app-layout-spacing);
  padding-top: 0;
}
body.app-layout-card:not(.is-mobile) .mod-root .workspace-tab-container .workspace-leaf-content {
  border-radius: var(--radius-m);
}
body.app-layout-card:not(.is-mobile) .mod-root :is(.workspace-tabs + .workspace-tabs.mod-top,
.workspace-split.mod-vertical > .workspace-tabs + .workspace-tabs,
.workspace-tabs + .workspace-split > .workspace-tabs,
.workspace-split + .workspace-tabs,
.workspace-split + .workspace-split:not(.mod-root) > .workspace-tabs) > div {
  padding-left: 0;
}
body.app-layout-card:not(.is-mobile) .mod-root .workspace-tabs:not(.mod-top) {
  margin-top: -4px;
}
body.app-layout-card:not(.is-mobile) .workspace-tab-header {
  --background-modifier-hover: hsla(
    var(--background-primary-hsl),
    var(--bg-opacity)
  );
}
body.app-layout-card:not(.is-mobile) :is(.workspace-tab-header-container,
.workspace-tab-header-container-inner,
.titlebar-button-container,
.sidebar-toggle-button,
.workspace-fake-target-overlay:not(.is-in-sidebar) .workspace-tabs .workspace-leaf,
.workspace-split:not(.mod-root) .workspace-tabs .workspace-leaf,
.workspace-split.mod-root .workspace-tabs:not(.mod-stacked) .workspace-leaf,
.workspace-split.mod-root .workspace-split,
.pdf-toolbar,
.workspace-leaf-content[data-type=empty],
.workspace-leaf-content:not([data-type=empty]) :is(.view-content, .view-header)) {
  background-color: transparent;
}
body.app-layout-card:not(.is-mobile) .workspace-ribbon {
  --ribbon-background: var(--bg-surface);
  --ribbon-background-collapsed: var(--bg-surface);
}
body.app-layout-card:not(.is-mobile) .workspace-ribbon::before {
  background-color: var(--bg-surface);
}
body.app-layout-card:not(.is-mobile) .workspace-split {
  background-color: var(--bg-surface);
}
body.app-layout-card:not(.is-mobile) .workspace-split.mod-root .workspace-leaf-content {
  background-color: var(--bg-editor);
}
body.app-layout-card:not(.is-mobile) .workspace-split.mod-left-split .workspace-sidedock-vault-profile {
  background-color: hsla(var(--background-secondary-hsl), calc(var(--bg-opacity) / 4));
}
body.app-layout-card:not(.is-mobile).labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-header-container-inner {
  padding-top: 0;
}

/* #endregion layout */
/* #region animation */
@keyframes op {
  0% {
    opacity: 0;
  }
  20% {
    opacity: 0.5;
  }
  50% {
    opacity: 0.9;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-dock {
  0% {
    display: flex !important;
    opacity: 1;
  }
  10% {
    display: flex !important;
    opacity: 0.5;
  }
  99% {
    display: flex !important;
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}
@keyframes slide-up {
  from {
    transform: translateY(4px) translateZ(0);
  }
  20% {
    transform: translateY(1px) translateZ(0);
  }
  to {
    transform: translateY(0) translateZ(0);
  }
}
/* #endregion animation */
/* #region [editor] */
/* #region basic */
/* #region paragraph */
body {
  --p-spacing: var(--setting-editor-p-spacing, var(--size-4-2));
}

.p-indent {
  --indent: calc(var(--font-text-size) * var(--setting-editor-p-indent, 2));
}
.p-indent :is([class=cm-line], [class="cm-active cm-line"], p) {
  text-indent: var(--indent);
}
.p-indent p > br {
  content: "";
  white-space: pre;
}
.p-indent p > br::after {
  content: "\a​";
  margin-inline-end: var(--indent);
}

.editor-custom-bottom-spacing :is(.markdown-source-view.mod-cm6 .cm-contentContainer > .cm-content,
.markdown-reading-view > div > .markdown-preview-sizer) {
  padding-bottom: var(--setting-editor-bottom-spacing, 40vh) !important;
}

/* #endregion paragraph */
/* #region fix latex */
.font-latex-text mjx-container mjx-utext {
  font-family: var(--font-text) !important;
}

mjx-stretchy-h > mjx-ext > mjx-c::before {
  transform: scaleX(200) !important;
}

/* #endregion fix latex */
/* #region monospace */
body:is(:not(.css-settings-manager), :not(.is-mobile).font-maple) {
  --font-monospace-theme: "maplemono";
}

code,
code *,
.HyperMD-codeblock *,
.cm-inline-code {
  font-feature-settings: var(--setting-code-ligature, "calt");
}

/* #endregion monospace */
/* #region text */
body {
  --text-selection: hsla(var(--color-accent-hsl), 0.25);
}

.markdown-source-view,
.markdown-rendered,
.markdown-preview-view,
.community-modal-readme {
  color: var(--setting-text-normal, var(--text-normal));
}

body .markdown-source-view .cm-scroller .cm-line:not(.HyperMD-codeblock) {
  padding-inline: var(--size-4-1);
}

/* #endregion text */
/* #region line */
body {
  --file-line-width: var(--setting-file-line-width, clamp(600px, 72%, 820px));
}

.markdown-source-view.mod-cm6.is-readable-line-width :is(.cm-content, .cm-line) {
  max-width: 100%;
}

.workspace-split.mod-root,
.markdown-rendered {
  --line-height-normal: var(--setting-line-height, 1.8) !important;
}

/* #endregion line */
/* #region current line highlight */
.theme-light {
  --active-line: var(
    --setting-line-active-color,
    var(--base-accent-h),
    var(--theme-accent-inactive-s),
    92%
  );
}

.theme-dark {
  --active-line: var(
    --setting-line-active-color,
    var(--base-accent-h),
    var(--theme-accent-inactive-s),
    14%
  );
}

body:is(:not(.css-settings-manager), .line-active-enable) .workspace-leaf.mod-active .markdown-source-view .cm-scroller .cm-line.cm-active {
  background-color: hsl(var(--active-line));
}
body:is(:not(.css-settings-manager), .line-active-enable) .table-cell-wrapper .cm-line.cm-active {
  background-color: transparent !important;
}
body:is(:not(.css-settings-manager), .line-active-enable) .workspace-leaf .markdown-source-view .cm-scroller .cm-line:is(.cm-active, :hover):not(.HyperMD-quote) {
  border-radius: var(--radius-s);
}

body.line-active-left {
  --indicator-color: var(--accent-inactive) !important;
}
body.line-active-left .markdown-source-view .cm-line.cm-active:not(.HyperMD-header,
.HyperMD-quote,
.HyperMD-list-line-1:has(.collapse-indicator))::after {
  content: "";
  width: var(--size-4-1);
  position: absolute;
  inset-block: var(--size-4-1);
  left: calc(var(--size-4-3) * -1);
  background-color: var(--accent-active-bg) !important;
  border-radius: var(--size-2-1);
}

/* #endregion current line highlight */
/* #region line indicator */
/* reference from https://github.com/Akifyss/obsidian-border */
body.line-indicator-enable {
  --indicator-color: var(--accent-active);
}
body.line-indicator-enable .markdown-preview-sizer > div:not(.search-highlight) {
  position: relative;
}
body.line-indicator-enable :is(.markdown-reading-view .markdown-preview-sizer > div:not(:has(:is(.collapse-indicator,
hr,
pre,
blockquote,
table,
p img,
audio,
video))),
.markdown-source-view .cm-line:not(.HyperMD-header,
.HyperMD-quote,
.HyperMD-list-line-1:has(.collapse-indicator))):hover::after {
  content: "";
  width: var(--size-4-1);
  position: absolute;
  inset-block: var(--size-4-1);
  left: calc(var(--size-4-3) * -1);
  background-color: var(--indicator-color);
  border-radius: var(--radius-s);
}

body.line-indicator-full .cm-line:not(.HyperMD-codeblock):hover {
  background-color: hsl(var(--active-line), 50%);
}
body.line-indicator-full .cm-line.HyperMD-codeblock:hover {
  --code-background: hsl(var(--active-line), 70%);
}

/* #endregion line indicator */
/* #region keyboard */
.cm-hmd-html-begin,
.cm-hmd-html-begin ~ .cm-tag,
.cm-hmd-html-end,
.cm-line:has(.cm-hmd-html-begin) {
  font-family: var(--font-monospace);
}

:is(kbd, .setting-hotkey, .prompt-instruction-command) {
  user-select: none;
  text-transform: capitalize;
  font-family: -apple-system, BlinkMacSystemFont, var(--font-monospace);
  border-radius: 6px;
  background-color: var(--color-base-05);
  padding: 2px var(--size-2-3);
  border: 1px solid var(--color-base-35);
  box-shadow: 0 1px 1px var(--color-base-35);
}

.setting-hotkey.mod-empty {
  color: var(--text-faint);
}

/* #endregion keyboard */
audio,
video {
  border: var(--background-modifier-border) solid 1px;
  border-radius: var(--radius-m);
  transition: border var(--animation);
}
audio:hover,
video:hover {
  border-color: var(--background-modifier-border-hover);
}
audio:active,
video:active {
  border-color: var(--background-modifier-border-focus);
}

/* #region highlight */
mark {
  color: var(--text-normal);
}

.is-flashing {
  transition: background-color var(--animation);
}

.theme-dark .is-flashing {
  --text-faint: #aaa;
}

body {
  --text-highlight-bg: var(
    --setting-text-highlight-bg,
    rgba(var(--color-yellow-rgb), 0.3)
  );
}

.text-highlight-all-round :is(.markdown-source-view .cm-highlight, .markdown-rendered mark) {
  -webkit-box-decoration-break: clone;
}

.markdown-source-view span.cm-highlight,
.markdown-rendered mark {
  border-radius: var(--setting-text-highlight-radius, 4);
  color: var(--setting-text-highlight-color);
  background: var(--text-highlight-bg);
}

.markdown-source-view :is(:not(.cm-highlight) + .cm-formatting-highlight,
.cm-formatting-highlight:first-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  margin-right: 0;
  padding-right: 0;
}
.markdown-source-view .cm-formatting-highlight + .cm-highlight {
  border-radius: 0;
  padding-inline: 0;
  margin: 0;
}
.markdown-source-view .cm-highlight + .cm-formatting-highlight {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  margin-left: 0;
  padding-left: 0;
}

/* #endregion highlight */
/* #region bold & italic */
body {
  --bold-color: var(--setting-text-bold-color, inherit) !important;
  --italic-color: var(--setting-text-italic-color, inherit) !important;
}

body :is(.cm-highlight.cm-strong, mark > strong) {
  color: var(--setting-text-highlight-color, var(--bold-color));
}
body :is(.cm-highlight.cm-em, mark > em) {
  color: var(--setting-text-highlight-color, var(--bold-color));
}

i,
em,
.cm-em {
  --blockquote-color: var(--italic-color);
  text-decoration: var(--setting-text-italic-style, none);
  font-family: var(--setting-text-italic-font, inherit);
}

b,
strong,
.cm-strong {
  --blockquote-color: var(--bold-color);
  text-decoration: var(--setting-text-bold-style, none);
  font-family: var(--setting-text-bold-font, inherit);
  font-weight: var(--setting-text-bold-weight, 600);
}

.markdown-source-view *,
.markdown-rendered * {
  text-underline-offset: var(--setting-underline-offset, var(--size-2-1));
}

a :is(em, i, strong, b) {
  text-decoration: none;
}
a :is(em, i, strong, b):hover {
  --bold-color: var(--text-on-accent);
  --italic-color: var(--text-on-accent);
}

/* #endregion bold & italic */
/* #region others */
.workspace-leaf-content[data-type=markdown] .view-header .clickable-icon:hover {
  background-color: var(--background-modifier-hover);
}

.cm-hmd-frontmatter {
  font-size: var(--font-small);
}

.view-header-title-container:not(.mod-at-end):after {
  content: none;
}

input[type=checkbox] {
  transition: var(--animation);
}
.task-list-label input[type=checkbox]:checked::after {
  -webkit-mask-position: 40% 45%;
}

/* #endregion others */
/* #endregion basic */
/* #region background */
/* Reference from https://forum-zh.obsidian.md/t/topic/42053 */
body {
  --grid-line-color: var(--setting-editor-bg-grid-line, var(--color-base-25));
  --grid-dots-color: var(--setting-editor-bg-grid-dots, var(--color-base-35));
  --grid-spacing: var(--setting-editor-bg-grid-spacing, var(--size-4-5));
}

:is(.markdown-reading-view .markdown-rendered,
.markdown-source-view.mod-cm6 .cm-scroller) {
  background-size: var(--grid-spacing) var(--grid-spacing);
  background-position: center center;
}
.editor-bg-grid-dots :is(.markdown-reading-view .markdown-rendered,
.markdown-source-view.mod-cm6 .cm-scroller) {
  background-image: radial-gradient(circle, var(--grid-dots-color) 1px, var(--bg-editor) 1px);
}
.editor-bg-grid-line :is(.markdown-reading-view .markdown-rendered,
.markdown-source-view.mod-cm6 .cm-scroller) {
  background-image: linear-gradient(to right, var(--grid-line-color) 1px, transparent 1px), linear-gradient(to bottom, var(--grid-line-color) 1px, transparent 1px);
}

/* #endregion background */
/* #region code */
body {
  --inline-code: var(--setting-code-inline, var(--color-red));
  --code-background: var(--setting-code-bg, var(--background-primary-alt));
  --code-function: var(--color-blue);
  --code-important: var(--color-purple);
  --code-keyword: var(--color-purple);
  --code-property: var(--color-yellow);
  --code-punctuation: var(--color-base-60);
  --code-operator: var(--code-punctuation);
  --code-class: var(--color-orange);
  --code-string: var(--color-green);
  --code-tag: var(--color-red);
  --code-value: var(--color-cyan);
  --code-comment: var(--text-faint);
  --code-variable: var(--color-yellow);
  --code-normal: var(--text-muted);
  --code-radius: var(--radius-m);
  --code-border-color: var(--background-modifier-border);
  --code-border-width: 1px;
}

.cm-hmd-codeblock.cm-formatting,
.markdown-rendered code {
  color: var(--inline-code);
}

.markdown-preview-view pre code {
  color: var(--code-normal);
  border: none;
  border-radius: 0;
}

.cm-inline-code {
  --code-normal: var(--inline-code);
  --code-radius: var(--radius-s);
  color: var(--inline-code) !important;
}
.cm-inline-code * {
  color: var(--inline-code) !important;
}
.cm-inline-code:not(.cm-formatting) {
  padding-inline: var(--size-2-1);
}
.cm-formatting-code + .cm-inline-code {
  padding: 0;
}
.cm-inline-code.cm-header {
  color: var(--inline-code) !important;
}

code {
  --code-radius: var(--radius-s);
  --code-border-width: 1px;
}

.cm-formatting-code:has(+ .cm-inline-code) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  padding-left: var(--size-2-1);
}
.cm-formatting-code + .cm-inline-code {
  border-radius: 0;
  border-inline: 0;
}
.cm-inline-code + .cm-formatting-code {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  padding-right: var(--size-2-1);
}

.cm-s-obsidian .cm-line.HyperMD-codeblock {
  line-height: calc(var(--line-height-normal) - 0.2);
  color: var(--code-normal) !important;
  border-inline: var(--code-border-width) solid var(--code-border-color);
  border-radius: 0 !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock .cm-fold-indicator .collapse-indicator {
  padding-left: var(--size-4-3);
  padding-right: unset !important;
  left: calc(var(--size-4-6) * -1);
  right: unset !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock.HyperMD-codeblock-begin-bg {
  border-top: var(--code-border-width) solid var(--code-border-color);
  border-start-start-radius: var(--code-radius) !important;
  border-start-end-radius: var(--code-radius) !important;
  margin-top: var(--size-2-1) !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock.HyperMD-codeblock-end-bg {
  border-bottom: var(--code-border-width) solid var(--code-border-color);
  border-end-start-radius: var(--code-radius) !important;
  border-end-end-radius: var(--code-radius) !important;
  margin-bottom: var(--size-2-1) !important;
}

.cm-hmd-codeblock .cm-indent::before {
  transform: unset !important;
}

.markdown-source-view.mod-cm6 .code-block-flair {
  --cursor: pointer;
  padding-block: 0;
  color: var(--setting-code-language-color, var(--inline-code));
  transition: background-color var(--animation);
  font-family: var(--font-monospace);
  font-weight: 550;
  top: var(--size-4-1);
  right: var(--size-4-1);
  border-radius: var(--radius-s);
}
.markdown-source-view.mod-cm6 .code-block-flair:hover {
  background-color: var(--nav-item-background-hover);
}
.markdown-source-view.mod-cm6 .code-block-flair:has(svg) {
  width: var(--size-4-6);
  height: var(--size-4-6);
  padding: var(--size-4-1);
}
.markdown-source-view.mod-cm6 .code-block-flair:has(svg) svg {
  width: var(--size-4-4);
  height: var(--size-4-4);
}

code[class*=language-],
pre {
  line-height: calc(var(--line-height-normal) - 0.2);
}

body .markdown-rendered pre {
  transition: border-color var(--animation);
}
body .markdown-rendered pre:hover {
  border-color: var(--background-modifier-border-hover);
}
body .markdown-rendered pre:hover button.copy-code-button {
  opacity: 1;
}
body .markdown-rendered pre:active {
  border-color: var(--background-modifier-border-focus);
}
body .markdown-rendered pre .copy-code-button {
  --icon-size: var(--size-4-4);
  margin: var(--size-4-1);
  padding: var(--size-4-1);
  padding-bottom: 0;
  display: block !important;
  opacity: 0;
  transition: var(--animation-fast);
  transition-property: opacity, background-color;
  cursor: pointer;
}

.code-nowrap.scrollbar-gutter-overlay:not(.code-mac-style-header) .app-container div pre {
  padding-bottom: calc(var(--code-size) * var(--line-height-normal) * 0.8) !important;
}
.code-nowrap.scrollbar-gutter-overlay pre code {
  padding-bottom: var(--size-2-3);
}
.code-nowrap .el-pre {
  position: relative;
}
.code-nowrap .el-pre pre {
  position: unset;
}
.code-nowrap .el-pre pre code {
  word-break: normal;
  word-wrap: break-word;
  white-space: pre;
}

/* https://prismjs.com/#supported-languages */
body:is(:not(.css-settings-manager), .code-language) pre.language-markup {
  --code-lang: "Markup";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-html {
  --code-lang: "HTML";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-xml {
  --code-lang: "XML";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-svg {
  --code-lang: "SVG";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-mathml {
  --code-lang: "MathML";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-ssml {
  --code-lang: "SSML";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-atom {
  --code-lang: "Atom";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-rss {
  --code-lang: "RSS";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-css {
  --code-lang: "CSS";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-javascript, .language-js) {
  --code-lang: "JavaScript";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-typescript, .language-ts) {
  --code-lang: "Typescript";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-jsx {
  --code-lang: "JSX";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-typescript-jsx, .language-tsx) {
  --code-lang: "TypeScript-JSX";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-ada {
  --code-lang: "Ada";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-apex {
  --code-lang: "Apex";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-applescript {
  --code-lang: "AppleScript";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-aql {
  --code-lang: "AQL";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-arduino, .language-ino) {
  --code-lang: "Arduino";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-armasm, .language-arm-asm) {
  --code-lang: "ArmAsm";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-asciidoc, .language-adoc) {
  --code-lang: "AsciiDoc";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-aspnet {
  --code-lang: "AspNet";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-asm6502 {
  --code-lang: "Asm6502";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-autohotkey {
  --code-lang: "AutoHotKey";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-awk, .language-gawk) {
  --code-lang: "AWK";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-bash, .language-sh, .language-shell) {
  --code-lang: "bash";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-basic {
  --code-lang: "basic";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-batch {
  --code-lang: "batch";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-bison {
  --code-lang: "Bison";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-c {
  --code-lang: "C";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-c\#, .language-csharp, .language-cs, .language-dotnet) {
  --code-lang: "C#";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-c\+\+, .language-cpp) {
  --code-lang: "C++";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-clojure {
  --code-lang: "Clojure";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-cmake {
  --code-lang: "CMake";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-cobol {
  --code-lang: "COBOL";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-coffeescript, .language-coffee) {
  --code-lang: "CoffeeScript";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-csp {
  --code-lang: "CSP";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-crystal {
  --code-lang: "Crystal";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-csv {
  --code-lang: "CSV";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-cue {
  --code-lang: "CUE";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-d {
  --code-lang: "D";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-dart {
  --code-lang: "Dart";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-diff {
  --code-lang: "Diff";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-django {
  --code-lang: "Django";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-jinja2 {
  --code-lang: "Jinja2";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-docker {
  --code-lang: "Docker";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-dockerfile {
  --code-lang: "Dockerfile";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-ebnf {
  --code-lang: "EBNF";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-editorconfig {
  --code-lang: "EditorConfig";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-ejs {
  --code-lang: "EJS";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-elixir {
  --code-lang: "Elixir";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-elm {
  --code-lang: "Elm";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-erb {
  --code-lang: "ERB";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-excel-formula, .language-xlsx, .language-xls) {
  --code-lang: "Excel-Formula";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-f\#, .language-fsharp) {
  --code-lang: "F#";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-flow {
  --code-lang: "Flow";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-fortran {
  --code-lang: "Fortran";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-gdscript {
  --code-lang: "GDScript";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-git {
  --code-lang: "Git";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-glsl {
  --code-lang: "GLSL";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-go {
  --code-lang: "Go";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-go-module, .language-go-mod) {
  --code-lang: "Go-Module";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-gradle {
  --code-lang: "Gradle";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-graphql {
  --code-lang: "GraphQL";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-groovy {
  --code-lang: "Groovy";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-haml {
  --code-lang: "HAML";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-handlebars, .language-hbs, .language-mustache) {
  --code-lang: "Handlebars";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-haskell, .language-hs) {
  --code-lang: "Haskell";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-hcl {
  --code-lang: "HCL";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-hlsl {
  --code-lang: "HLSL";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-http {
  --code-lang: "HTTP";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-icon {
  --code-lang: "Icon";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-icu-message-format {
  --code-lang: "ICU-Message-Format";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-gitignore {
  --code-lang: "gitignore";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-ini {
  --code-lang: "Ini";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-java {
  --code-lang: "Java";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-javadoc {
  --code-lang: "JavaDoc";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-jq {
  --code-lang: "JQ";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-jsdoc {
  --code-lang: "JSDoc";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-json {
  --code-lang: "JSON";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-json5 {
  --code-lang: "JSON5";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-jsonp {
  --code-lang: "JSONP";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-julia {
  --code-lang: "Julia";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-kotlin, .language-kt, .language-kts) {
  --code-lang: "Kotlin";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-latex, .language-tex) {
  --code-lang: "Latex";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-less {
  --code-lang: "Less";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-liquid {
  --code-lang: "Liquid";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-lisp, .language-emacs, .language-elisp, .language-emacs-lisp) {
  --code-lang: "Lisp";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-llvm {
  --code-lang: "LLVM";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-log {
  --code-lang: "Log";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-lua {
  --code-lang: "Lua";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-makefile {
  --code-lang: "Makefile";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-markdown, .language-md) {
  --code-lang: "Markdown";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-matlab {
  --code-lang: "MATLAB";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-mermaid {
  --code-lang: "Mermaid";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-mongodb {
  --code-lang: "MongoDB";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-monkey {
  --code-lang: "Monkey";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-neon {
  --code-lang: "Neon";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-nginx {
  --code-lang: "Nginx";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-nim {
  --code-lang: "Nim";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-nix {
  --code-lang: "Nix";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-nsis {
  --code-lang: "NSIS";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-objectc, .language-objc) {
  --code-lang: "ObjectC";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-ocaml {
  --code-lang: "OCaml";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-odin {
  --code-lang: "odin";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-opencl {
  --code-lang: "OpenCL";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-pascal {
  --code-lang: "Pascal";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-perl {
  --code-lang: "Perl";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-php {
  --code-lang: "PHP";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-phpdoc {
  --code-lang: "PHPDoc";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-powershell {
  --code-lang: "PowerShell";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-properties {
  --code-lang: "Properties";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-protobuf {
  --code-lang: "ProtoBuf";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-pug {
  --code-lang: "Pug";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-python, .language-py) {
  --code-lang: "Python";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-qml {
  --code-lang: "QML";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-r {
  --code-lang: "R";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-regex {
  --code-lang: "Regex";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-rescript, .language-res) {
  --code-lang: "ReScript";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-rip {
  --code-lang: "Rip";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-ruby, .language-rb) {
  --code-lang: "Ruby";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-rust, .language-rs) {
  --code-lang: "Rust";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-sass {
  --code-lang: "Sass";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-scss {
  --code-lang: "Scss";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-scala {
  --code-lang: "Scala";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-solidity {
  --code-lang: "Solidity";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-sql {
  --code-lang: "SQL";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-stylus {
  --code-lang: "stylus";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-swift {
  --code-lang: "Swift";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-tcl {
  --code-lang: "TCL";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-toml {
  --code-lang: "TOML";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-uri, .language-url) {
  --code-lang: "URI";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-unrealscript, .language-uscript, .language-uc) {
  --code-lang: "UnrealScript";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-v {
  --code-lang: "V";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-vbnet {
  --code-lang: "VBNet";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-velocity {
  --code-lang: "Velocity";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-vhdl {
  --code-lang: "VHDL";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-vim {
  --code-lang: "Vim";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-visual-basic, .language-vb, .language-vba) {
  --code-lang: "Visual-Basic";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-wasm {
  --code-lang: "WASM";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-wgsl {
  --code-lang: "WGSL";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-wiki {
  --code-lang: "WIKI";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-wren {
  --code-lang: "Wren";
}
body:is(:not(.css-settings-manager), .code-language) pre:is(.language-yaml, .language-yml) {
  --code-lang: "YAML";
}
body:is(:not(.css-settings-manager), .code-language) pre.language-zig {
  --code-lang: "Zig";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered {
  --code-block-padding: calc(var(--line-height-tight) * var(--code-size))
    calc(var(--line-height-normal) * var(--code-size));
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre {
  padding: var(--code-block-padding);
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class*=language-] .copy-code-button {
  padding-block: var(--size-2-1);
  opacity: 1;
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class*=language-] .copy-code-button:not([style="color: var(--text-success); display: inline-flex;"]) svg {
  display: none;
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class*=language-] .copy-code-button:not([style="color: var(--text-success); display: inline-flex;"])::before {
  content: var(--code-lang, "Unkown");
  font-family: var(--font-monospace);
  color: var(--setting-code-language-color, var(--inline-code));
  font-weight: 550;
}

:is(.cm-tag, .cm-attribute, .cm-string:not(.cm-url)) {
  font-family: var(--font-monospace);
}

.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .token.script {
  color: var(--code-normal);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .token.imports {
  color: var(--code-variable);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .token:is(.builtin, .regex, .keyword) {
  font-style: italic;
  color: var(--code-important);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .token:is(.selector, .inserted, .char, .attr-value) {
  color: var(--color-green);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .token:is(.class-name, .maybe-class-name, .color) {
  color: var(--code-class);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .token:is(.property-access,
.attr-name,
.annotation,
.key,
.entity,
.parameter,
.url) {
  color: var(--code-variable);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .token:is(.comment, .prolog, .doctype, .cdata) {
  color: var(--code-comment);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .cm-tag {
  color: var(--code-tag);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-punctuation, .cm-bracket, .cm-hr, .cm-operator) {
  color: var(--code-punctuation);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .cm-number {
  color: var(--code-value);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-qualifier,
.cm-string:not(.cm-url),
.cm-string-2,
.cm-meta:not(.cm-hashtag)) {
  color: var(--code-string);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-def,
.cm-property,
.cm-number + .cm-variable,
.cm-attribute,
.cm-atom) {
  color: var(--code-property);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-type, .cm-builtin) {
  color: var(--code-keyword);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .cm-type {
  font-weight: 550;
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .cm-keyword {
  font-style: italic;
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .cm-variable {
  color: var(--code-function);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .cm-variable-2 {
  color: var(--code-value);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) .cm-variable-3 {
  filter: hue-rotate(40deg);
}

.theme-light {
  --code-mac-style-header-bg: #333;
  --code-mac-style-header-color: #ddd;
}

.theme-dark {
  --code-mac-style-header-bg: #111;
  --code-mac-style-header-color: #aaa;
}

@media screen {
  body.code-mac-style-header .markdown-rendered pre {
    border: none;
    padding-top: calc(var(--code-size) * var(--line-height-normal) * 1.5);
    padding-bottom: calc(var(--code-size) * 0.5);
  }
  body.code-mac-style-header .markdown-rendered pre::after {
    content: "";
    height: calc(var(--code-size) * var(--line-height-normal) * 1.2);
    background-color: var(--code-mac-style-header-bg);
    top: 0;
    inset-inline: 0;
    position: absolute;
    border-top-left-radius: var(--code-radius);
    border-top-right-radius: var(--code-radius);
  }
  body.code-mac-style-header .markdown-rendered pre::before {
    content: "";
    width: calc(var(--code-size) - var(--size-2-1));
    height: calc(var(--code-size) - var(--size-2-1));
    position: absolute;
    left: 0.6rem;
    top: calc((var(--code-size) - var(--size-2-1)) * var(--line-height-normal) * 0.6 - var(--code-size) / 4);
    border-radius: 50%;
    z-index: 9;
    background-color: rgba(255, 94, 92, var(--color-opacity));
    box-shadow: calc(var(--size-4-5) * 0.9) 0 0 0 rgba(255, 187, 78, var(--color-opacity)), calc(var(--size-4-5) * 1.8) 0 0 0 rgba(81, 188, 0, var(--color-opacity));
  }
  body.code-mac-style-header .markdown-rendered pre .copy-code-button {
    z-index: 10;
    color: var(--code-mac-style-header-color);
  }
  body.code-mac-style-header .markdown-rendered pre .copy-code-button::before {
    color: inherit !important;
  }
}
.code-line-number .cm-contentContainer {
  counter-reset: code-line;
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock {
  padding-left: var(--size-4-12) !important;
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock:not(.HyperMD-codeblock-begin):not(.HyperMD-codeblock-end)::before {
  counter-increment: code-line;
  content: counter(code-line);
  position: absolute;
  text-align: right;
  width: var(--size-4-8);
  left: 0;
  color: var(--accent-active);
  opacity: 0.6;
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock:not(.HyperMD-codeblock-begin):not(.HyperMD-codeblock-end).cm-active::before {
  opacity: 1;
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock-end {
  counter-set: code-line;
}

.code-preview-bg {
  --code-bg-s: 50%;
  --code-bg-l: 85%;
}
.code-preview-bg.theme-dark {
  --code-bg-s: 20%;
  --code-bg-l: 45%;
}
.code-preview-bg .markdown-preview-view .markdown-preview-section .el-pre {
  padding: var(--size-4-4) var(--size-4-8);
  margin-block: var(--size-4-4);
  border-radius: var(--code-radius);
  background-image: var(--setting-code-bg-outer, linear-gradient(-30deg, hsl(calc(var(--base-accent-h) + 145), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--base-accent-h) + 115), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--base-accent-h) + 90), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--base-accent-h) + 65), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--base-accent-h) + 35), var(--code-bg-s), var(--code-bg-l))));
}
.code-preview-bg .markdown-preview-view .markdown-preview-section .el-pre pre::before {
  translate: var(--size-4-8) var(--size-4-4);
}
.code-preview-bg .markdown-preview-view .markdown-preview-section .el-pre pre::after {
  top: var(--size-4-4);
  inset-inline: var(--size-4-8);
}
.code-preview-bg .markdown-preview-view .markdown-preview-section .el-pre button.copy-code-button {
  translate: calc(var(--size-4-8) * -1) var(--size-4-4);
}

/* #endregion code */
/* #region embed */
body {
  --block-outline-width: var(--size-2-1);
  --embed-background: var(--bg-editor);
  --embed-padding: var(--size-4-5) var(--size-4-4);
  --embed-block-shadow-hover: 0 0 0 1px var(--accent-inactive),
    inset 0 0 0 1px var(--accent-inactive);
  --embed-border-start: var(--size-2-1) solid var(--accent-inactive);
  --embed-border-end: var(--embed-border-start);
  --embed-border-top: var(--embed-border-start);
  --embed-border-bottom: var(--embed-border-start);
  --embed-radius: var(--radius-m);
  --bases-embed-border-radius: var(--embed-radius);
}
body .markdown-source-view.mod-cm6 .cm-embed-block {
  margin-block: var(--size-4-1) !important;
  border-radius: var(--embed-radius) !important;
  transition: box-shadow var(--animation);
}
body .markdown-source-view.mod-cm6 .cm-embed-block .edit-block-button {
  border-radius: var(--radius-s) !important;
  transition: var(--animation-fast);
  transition-property: background-color, opacity;
  height: fit-content;
}
body .internal-embed.is-loaded:not(.image-embed) {
  transition: var(--animation);
  transition-property: border-color, background-color;
  border-radius: var(--embed-radius);
  margin-block: var(--size-4-1) !important;
}
body .internal-embed.is-loaded:not(.image-embed):hover {
  border-color: var(--accent-active);
}
body .internal-embed.is-loaded:not(.image-embed):is(.mod-empty, .mod-empty-attachment) {
  border: var(--size-2-1) dotted var(--text-faint);
}
body .internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed-link, .file-embed-link) {
  border-radius: var(--radius-s);
  transition: var(--animation);
  transition-property: color, background-color;
}
body .internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed-link, .file-embed-link):hover {
  background-color: var(--nav-item-background-hover);
}
body .internal-embed.is-loaded:not(.image-embed) .markdown-embed-title {
  display: none;
}
body .cm-lang-query .internal-query-header {
  padding-inline: var(--size-4-2);
}
body.embed-border-hidden {
  --embed-border-start: none;
  --embed-background: hsl(var(--background-primary-alt-hsl), 0.4);
}
body.scrollbar-gutter-reserve.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-heading .markdown-preview-section > div:nth-child(2) {
  right: var(--size-4-3);
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .obsidian-metatable {
  display: none;
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) {
  position: absolute;
  right: var(--size-4-6);
  top: var(--size-4-2);
  z-index: 99;
  opacity: 0;
  transition: var(--animation);
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) * {
  font-size: 1rem;
  cursor: pointer;
  line-height: 1rem;
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) *::after {
  content: none;
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-title {
  opacity: 0;
  position: absolute;
  z-index: 99;
  width: fit-content;
  right: 28px;
  left: unset;
  font-size: 1rem;
  top: var(--size-4-1);
  line-height: 28px;
  height: 28px;
  padding: 0 var(--size-4-2);
  transition: var(--animation);
  cursor: pointer;
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):hover .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) {
  opacity: 1;
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):hover :is(.markdown-embed-title,
.markdown-embed-link,
.file-embed-link:hover svg) {
  opacity: 1;
  color: var(--text-normal);
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) :is(.markdown-embed, .file-embed) .markdown-preview-view {
  padding: calc(var(--font-text-size) * 1.5);
  padding-bottom: calc(var(--font-text-size) * 1.2);
}

/* #endregion embed */
/* #region hr */
.markdown-rendered hr {
  margin-block-start: 2.4rem !important;
  margin-block-end: 2.4rem !important;
}

.hr-enable :is(.markdown-source-view.mod-cm6, .markdown-rendered) hr {
  overflow: initial;
  border-width: 0;
  position: relative;
  height: var(--size-4-1);
  background-image: linear-gradient(to right, transparent 0%, hsla(var(--color-accent-hsl), 40%) 16%, hsla(var(--color-accent-hsl), 90%) 44%, transparent 44%, transparent 56%, hsla(var(--color-accent-hsl), 90%) 56%, hsla(var(--color-accent-hsl), 40%) 84%, transparent 100%);
}
.hr-enable :is(.markdown-source-view.mod-cm6, .markdown-rendered) hr::after {
  content: var(--setting-hr-icon, "⭐");
  display: inline-block;
  font-family: var(--font-monospace);
  font-size: var(--font-ui-small);
  position: absolute;
  text-align: center;
  width: var(--input-height);
  height: var(--input-height);
  line-height: var(--input-height);
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  color: var(--accent-active);
  background: var(--background-primary-alt);
  border-radius: 50%;
}

/* #endregion hr */
/* #region link */
.external-link {
  background-image: linear-gradient(transparent, transparent), url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='%23222222' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 7h10v10M7 17L17 7'/></svg>");
  background-size: var(--font-text-size);
  padding-inline-end: var(--size-4-4);
}

.theme-dark .external-link {
  background-image: linear-gradient(transparent, transparent), url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='%23DDDDDD' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 7h10v10M7 17L17 7'/></svg>");
}

body {
  --link-color-rgb: var(--setting-link-internal-color, var(--color-cyan-rgb));
  --link-external-color-rgb: var(
    --setting-link-external-color,
    var(--color-yellow-rgb)
  );
  --link-color: rgba(var(--link-color-rgb), var(--color-opacity));
  --link-color-hover: var(--link-color);
  --link-color-underline: var(
    --setting-link-internal-color-underline,
    var(--link-color)
  );
  --link-external-color: rgba(
    var(--link-external-color-rgb),
    var(--color-opacity)
  );
  --link-external-color-hover: var(--link-external-color);
  --link-external-color-underline: var(
    --setting-link-external-color-underline,
    var(--link-external-color)
  );
  --link-unresolved-color: rgba(
    var(--link-color-rgb),
    calc(var(--color-opacity) * 0.85)
  );
  --link-unresolved-decoration-color: var(--link-unresolved-color);
  --link-footnote: var(--color-purple);
  --link-text-size: var(--font-text-size);
}

.cm-hmd-footnote .cm-underline {
  color: var(--link-footnote) !important;
  font-size: var(--footnote-size);
  text-decoration-color: var(--link-footnote) !important;
  pointer-events: none;
}

.is-unresolved {
  transition: color var(--animation);
}
.is-unresolved:hover {
  --link-color-hover: rgba(var(--link-color-rgb), 0.6) !important;
}

body .cm-s-obsidian .cm-url {
  text-decoration: none;
}

.cm-s-obsidian .cm-formatting-link-string + span.cm-url {
  color: var(--link-color);
}

body span:is(.cm-formatting-link, .cm-formatting-link-string) {
  color: rgba(var(--color-green-rgb), 0.6) !important;
}

body:not(.link-hover-expand) :is(a.external-link,
.cm-link .cm-underline,
.cm-url:not(.cm-string) .cm-underline) {
  transition: background-color var(--animation);
  color: rgba(var(--link-external-color-rgb), var(--color-opacity));
  border-radius: var(--radius-s);
  text-decoration-color: var(--link-external-color-underline);
  -webkit-box-decoration-break: clone;
}
body:not(.link-hover-expand) :is(a.external-link,
.cm-link .cm-underline,
.cm-url:not(.cm-string) .cm-underline):hover {
  background-color: rgba(var(--link-external-color-rgb), 0.15);
}
body:not(.link-hover-expand) :is(a.external-link,
.cm-link .cm-underline,
.cm-url:not(.cm-string) .cm-underline):active {
  background-color: rgba(var(--link-external-color-rgb), 0.35);
}
body:not(.link-hover-expand) :is(a.external-link,
.cm-link .cm-underline,
.cm-url:not(.cm-string) .cm-underline) code {
  padding-inline-end: var(--size-4-1) !important;
  background-color: transparent;
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved),
.cm-hmd-internal-link > .cm-underline) {
  transition: background-color var(--animation);
  color: rgba(var(--link-color-rgb), var(--color-opacity));
  border-radius: var(--radius-s);
  text-decoration-color: var(--link-color-underline);
  -webkit-box-decoration-break: clone;
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved),
.cm-hmd-internal-link > .cm-underline):hover {
  background-color: rgba(var(--link-color-rgb), 0.15);
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved),
.cm-hmd-internal-link > .cm-underline):active {
  background-color: rgba(var(--link-color-rgb), 0.35);
}

span:is(.cm-url,
.cm-link,
.cm-hmd-internal-link,
.cm-formatting-link.cm-url):hover {
  text-decoration: none;
}

body.link-hover-expand .cm-url {
  --link-external-decoration: none;
  --link-external-decoration-hover: none;
}
body.link-hover-expand .cm-link {
  --link-external-decoration-hover: none;
}
body.link-hover-expand .cm-hmd-internal-link > .cm-underline {
  --link-decoration-hover: none;
}
body.link-hover-expand :is(a.external-link:not(.is-unresolved),
:is(.cm-link, .cm-url) > .cm-underline) {
  font-size: var(--link-text-size);
  box-shadow: inset 0 calc(-1 * var(--size-2-1)) 0 var(--link-external-color-underline);
  text-decoration: none !important;
  transition: var(--animation);
  transition-property: box-shadow, color;
  color: var(--link-external-color) !important;
}
body.link-hover-expand :is(a.external-link:not(.is-unresolved),
:is(.cm-link, .cm-url) > .cm-underline):hover, body.link-hover-expand :is(a.external-link:not(.is-unresolved),
:is(.cm-link, .cm-url) > .cm-underline):focus {
  box-shadow: inset 0 calc(-1 * var(--font-text-size) * var(--line-height-normal)) 0 var(--link-external-color-underline);
  --link-color: var(
    --setting-link-internal-color-hover,
    var(--text-on-accent)
  );
  --link-external-color: var(
    --setting-link-external-color-hover,
    var(--text-on-accent)
  );
}
body.link-hover-expand :is(a.external-link:not(.is-unresolved),
:is(.cm-link, .cm-url) > .cm-underline) code {
  padding-inline-end: var(--size-4-1) !important;
  background-color: transparent;
}
body.link-hover-expand :is(a.external-link:not(.is-unresolved),
:is(.cm-link, .cm-url) > .cm-underline):hover code {
  color: inherit;
}
body.link-hover-expand :is(a.internal-link:not(.is-unresolved),
.cm-hmd-internal-link > .cm-underline) {
  font-size: var(--link-text-size);
  box-shadow: inset 0 calc(-1 * var(--size-2-1)) 0 var(--link-color-underline);
  text-decoration: none !important;
  transition: var(--animation);
  transition-property: box-shadow, color;
  color: var(--link-color) !important;
}
body.link-hover-expand :is(a.internal-link:not(.is-unresolved),
.cm-hmd-internal-link > .cm-underline):hover, body.link-hover-expand :is(a.internal-link:not(.is-unresolved),
.cm-hmd-internal-link > .cm-underline):focus {
  box-shadow: inset 0 calc(-1 * var(--font-text-size) * var(--line-height-normal)) 0 var(--link-color-underline);
  --link-color: var(
    --setting-link-internal-color-hover,
    var(--text-on-accent)
  );
  --link-external-color: var(
    --setting-link-external-color-hover,
    var(--text-on-accent)
  );
}
body.link-hover-expand :is(.cm-hmd-internal-link, .cm-link) {
  transition: color var(--animation);
}

.link-icon :is(:is(.markdown-source-view, .markdown-preview-view) a.internal-link:not(.is-unresolved),
.cm-hmd-internal-link > .cm-underline) {
  padding-inline-end: var(--size-2-1);
}
.link-icon :is(:is(.markdown-source-view, .markdown-preview-view) a.internal-link:not(.is-unresolved),
.cm-hmd-internal-link > .cm-underline)::before {
  content: "";
  display: inline-block;
  transform: translateY(var(--size-2-1));
  margin-inline: var(--size-2-1);
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/><path d='M14 2v4a2 2 0 0 0 2 2h4M10 9H8m8 4H8m8 4H8'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: inherit;
  width: calc(var(--link-text-size) * 0.9);
  height: calc(var(--link-text-size) * 0.9);
}
.link-icon .markdown-preview-view :is(.el-pre a.internal-link:not(.is-unresolved),
a.external-link:has(> code))::before {
  content: none !important;
}
.link-icon:not(.link-click-to-edit-in-live-preview) :is(:is(.markdown-source-view, .markdown-preview-view) a.external-link:not(.is-resolved),
a.external-link:not(.is-resolved) code,
:is(.cm-link:not(.cm-hmd-footnote, .cm-escape), .cm-url) > .cm-underline):not(.cm-escape + .cm-link .cm-underline) {
  padding-inline-end: var(--size-2-1);
}
.link-icon:not(.link-click-to-edit-in-live-preview) :is(:is(.markdown-source-view, .markdown-preview-view) a.external-link:not(.is-resolved),
a.external-link:not(.is-resolved) code,
:is(.cm-link:not(.cm-hmd-footnote, .cm-escape), .cm-url) > .cm-underline):not(.cm-escape + .cm-link .cm-underline)::before {
  content: "";
  display: inline-block;
  transform: translateY(var(--size-2-1));
  margin-inline: var(--size-2-1);
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71'/><path d='M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: inherit;
  width: calc(var(--link-text-size) * 0.85);
  height: calc(var(--link-text-size) * 0.85);
}
.link-icon:not(.link-click-to-edit-in-live-preview) a.external-link {
  background-image: none;
  background-size: unset;
  padding-right: 0;
}
.link-icon:not(.link-click-to-edit-in-live-preview) span.external-link {
  display: none;
}

.link-click-to-edit-in-live-preview :is(.cm-url, .cm-link, .cm-hmd-internal-link) .cm-underline {
  pointer-events: none;
}

/* #endregion link */
/* #region list */
body:is(:not(.css-settings-manager), .list-enable) {
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
  --list-marker-color-alt: var(
    --setting-list-marker-alt,
    var(--list-marker-color)
  );
  --list-marker-color-alt-render: transparent;
  --checkbox-color: var(--accent-active);
  --checkbox-marker-color: var(--text-on-accent);
  --checkbox-border-color: var(
    --setting-list-checkbox-color,
    var(--accent-inactive)
  );
  --checkbox-border-color-hover: var(
    --setting-list-checkbox-color-hover,
    var(--accent-active)
  );
  --list-bullet-size: calc(var(--font-text-size) / 3 + var(--size-2-1));
}
body:is(:not(.css-settings-manager), .list-enable) .cm-formatting-list {
  padding-inline-start: var(--size-4-1);
}
body:is(:not(.css-settings-manager), .list-enable) .cm-formatting-list,
body:is(:not(.css-settings-manager), .list-enable) li::marker {
  font-family: var(--font-monospace);
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-nobullet > .cm-hmd-list-indent {
  margin-inline-end: var(--size-4-1);
}
body:is(:not(.css-settings-manager), .list-enable) :is(.markdown-source-view, .markdown-preview-view) .task-list-item-checkbox {
  border-width: var(--size-2-1);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view .task-list-item-checkbox {
  --checkbox-margin-inline-start: var(--size-4-2);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-preview-view .task-list-item-checkbox {
  margin-inline-start: calc(var(--checkbox-size) * -1.3);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view.mod-cm6 .cm-indent::before {
  transform: translateX(-0.4rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view.mod-cm6 .HyperMD-list-line .collapse-indicator {
  --cursor: pointer;
  transform: translateX(-0.15rem) !important;
}
body:is(:not(.css-settings-manager), .list-enable) li .list-collapse-indicator {
  margin-inline-start: 0 !important;
  padding-inline-end: 1.2rem !important;
  transform: translateX(-2.25rem);
}
body:is(:not(.css-settings-manager), .list-enable) ol li .list-collapse-indicator {
  transform: translateX(-3rem);
}
body:is(:not(.css-settings-manager), .list-enable) .contains-task-list .list-collapse-indicator {
  transform: translateX(-2.4rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ul > li {
  margin-inline-start: calc(var(--font-text-size) * 2 + 0.25rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered div > ul:is(.has-list-bullet, .contains-task-list) {
  margin-inline-start: calc(var(--size-4-3) * -1);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol {
  padding-left: calc(var(--font-text-size) - 0.1rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol > li {
  margin-inline-start: calc(var(--font-text-size) + 0.25rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol li > ol {
  padding-left: calc(var(--font-text-size));
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol li > ol::before {
  left: calc(var(--font-text-size) * -1.5);
}
body:is(:not(.css-settings-manager), .list-enable) :is(.markdown-rendered, div) > ul {
  --list-indent: 0;
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-2 .list-bullet {
  --list-marker-color: transparent;
  --list-bullet-border: var(--setting-list-marker, var(--accent-active)) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) - var(--size-2-1));
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-3 .list-bullet {
  --list-bullet-radius: 0;
  --list-marker-color: var(--list-marker-color-alt);
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.95);
  transform: rotate(45deg);
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-4 .list-bullet {
  --list-marker-color: transparent;
  --list-bullet-border: var(--list-marker-color-alt) var(--size-2-1) solid;
  --list-bullet-size: calc(
    calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.9 - var(--size-2-1)
  );
  --list-bullet-radius: 0;
  transform: rotate(45deg);
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li {
  --list-marker-color: var(--list-marker-color-alt-render);
  --list-bullet-border: var(--setting-list-marker, var(--accent-active)) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) - var(--size-2-1));
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li {
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.5);
  --list-bullet-radius: 0;
  --list-marker-color: var(--list-marker-color-alt);
  --deg: 45deg;
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li .list-bullet {
  transform: rotate(var(--deg));
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li > ul > li {
  --list-bullet-size: calc(
    calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.9 - var(--size-2-1)
  );
  --list-marker-color: var(--list-marker-color-alt-render);
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li > ul > li ul > li {
  --list-bullet-radius: var(--radius-s);
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view .callout ul > li > ul > li {
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view .callout .task-list-item-checkbox {
  vertical-align: middle;
  margin-inline-start: calc(var(--checkbox-size) * -1.3);
}

.list-checkbox-gray {
  --checklist-done-color: var(--text-faint);
}

.list-checkbox-decoration-underline {
  --checklist-done-decoration: underline;
}

.list-checkbox-decoration-none {
  --checklist-done-decoration: none;
}

/* #region list bullet */
/* Reference: https://gist.github.com/KillyMXI/cbef8edff6dd55d9e6ea4df66567e9b1 */
.list-enable.list-bullet-thread-style {
  --list-threading-width: max(0.1rem, var(--size-2-1));
  --list-threading-color: var(
    --setting-list-guide-color,
    var(--accent-inactive)
  );
}
.list-enable.list-bullet-thread-style .list-bullet {
  transform: none !important;
}
.list-enable.list-bullet-thread-style .list-bullet::after {
  --list-bullet-radius: 50%;
  --list-bullet-border: 0;
  --list-bullet-size: calc(var(--font-text-size) / 3 + var(--size-2-1));
  --list-marker-color: var(--setting-list-marker, var(--accent-active-bg));
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-1:not(:has(~ .HyperMD-list-line-1 ~ .HyperMD-list-line.cm-active)):has(~ :is(.HyperMD-list-line-2, .HyperMD-list-line-3, .HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-1:not(:has(~ .HyperMD-list-line-1 ~ .HyperMD-list-line.cm-active)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-2.cm-active, ~ .HyperMD-list-line-2 ~ :is(.HyperMD-list-line-3, .HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-2:not(:has(~ .HyperMD-list-line-2 ~ .HyperMD-list-line.cm-active)):is(.cm-active, :has(~ :is(.HyperMD-list-line-3, .HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  --list-threading-offset: calc(
    0.4rem +
      0 *
      var(--list-indent) +
      var(--list-threading-width) /
      2
  );
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-2:not(:has(~ .HyperMD-list-line-2 ~ .HyperMD-list-line.cm-active)):has(~ :is(.HyperMD-list-line-3, .HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-2:not(:has(~ .HyperMD-list-line-2 ~ .HyperMD-list-line.cm-active)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-3.cm-active, ~ .HyperMD-list-line-3 ~ :is(.HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-3:not(:has(~ .HyperMD-list-line-3 ~ .HyperMD-list-line.cm-active)):is(.cm-active, :has(~ :is(.HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  --list-threading-offset: calc(
    0.4rem +
      1 *
      var(--list-indent) +
      var(--list-threading-width) /
      2
  );
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-3:not(:has(~ .HyperMD-list-line-3 ~ .HyperMD-list-line.cm-active)):has(~ :is(.HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-3:not(:has(~ .HyperMD-list-line-3 ~ .HyperMD-list-line.cm-active)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-4.cm-active, ~ .HyperMD-list-line-4 ~ :is(.HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-4:not(:has(~ .HyperMD-list-line-4 ~ .HyperMD-list-line.cm-active)):is(.cm-active, :has(~ :is(.HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  --list-threading-offset: calc(
    0.4rem +
      2 *
      var(--list-indent) +
      var(--list-threading-width) /
      2
  );
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-4:not(:has(~ .HyperMD-list-line-4 ~ .HyperMD-list-line.cm-active)):has(~ :is(.HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-4:not(:has(~ .HyperMD-list-line-4 ~ .HyperMD-list-line.cm-active)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-5.cm-active, ~ .HyperMD-list-line-5 ~ :is(.HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-5:not(:has(~ .HyperMD-list-line-5 ~ .HyperMD-list-line.cm-active)):is(.cm-active, :has(~ :is(.HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  --list-threading-offset: calc(
    0.4rem +
      3 *
      var(--list-indent) +
      var(--list-threading-width) /
      2
  );
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-5:not(:has(~ .HyperMD-list-line-5 ~ .HyperMD-list-line.cm-active)):has(~ :is(.HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-5:not(:has(~ .HyperMD-list-line-5 ~ .HyperMD-list-line.cm-active)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-6.cm-active, ~ .HyperMD-list-line-6 ~ :is(.HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-6:not(:has(~ .HyperMD-list-line-6 ~ .HyperMD-list-line.cm-active)):is(.cm-active, :has(~ :is(.HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  --list-threading-offset: calc(
    0.4rem +
      4 *
      var(--list-indent) +
      var(--list-threading-width) /
      2
  );
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-6:not(:has(~ .HyperMD-list-line-6 ~ .HyperMD-list-line.cm-active)):has(~ :is(.HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-6:not(:has(~ .HyperMD-list-line-6 ~ .HyperMD-list-line.cm-active)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-7.cm-active, ~ .HyperMD-list-line-7 ~ :is(.HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-7:not(:has(~ .HyperMD-list-line-7 ~ .HyperMD-list-line.cm-active)):is(.cm-active, :has(~ :is(.HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  --list-threading-offset: calc(
    0.4rem +
      5 *
      var(--list-indent) +
      var(--list-threading-width) /
      2
  );
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-7:not(:has(~ .HyperMD-list-line-7 ~ .HyperMD-list-line.cm-active)):has(~ :is(.HyperMD-list-line-8).cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-7:not(:has(~ .HyperMD-list-line-7 ~ .HyperMD-list-line.cm-active)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-8.cm-active)::after,
.list-enable.list-bullet-thread-style .HyperMD-list-line-8:not(:has(~ .HyperMD-list-line-8 ~ .HyperMD-list-line.cm-active)):is(.cm-active) > .cm-hmd-list-indent::after {
  --list-threading-offset: calc(
    0.4rem +
      6 *
      var(--list-indent) +
      var(--list-threading-width) /
      2
  );
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-1:not(:has(~ .HyperMD-list-line-1 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-2, .HyperMD-list-line-3, .HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  bottom: 0;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
  top: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 1.5);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-1:not(:has(~ .HyperMD-list-line-1 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-2, .HyperMD-list-line-3, .HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after:is(.HyperMD-task-line) {
  max-height: calc(100% - 1.3em);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-2:not(:has(~ .HyperMD-list-line-2 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-3, .HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  bottom: 0;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
  top: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 1.5);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-2:not(:has(~ .HyperMD-list-line-2 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-3, .HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after:is(.HyperMD-task-line) {
  max-height: calc(100% - 1.3em);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-3:not(:has(~ .HyperMD-list-line-3 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  bottom: 0;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
  top: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 1.5);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-3:not(:has(~ .HyperMD-list-line-3 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after:is(.HyperMD-task-line) {
  max-height: calc(100% - 1.3em);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-4:not(:has(~ .HyperMD-list-line-4 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  bottom: 0;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
  top: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 1.5);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-4:not(:has(~ .HyperMD-list-line-4 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after:is(.HyperMD-task-line) {
  max-height: calc(100% - 1.3em);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-5:not(:has(~ .HyperMD-list-line-5 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  bottom: 0;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
  top: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 1.5);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-5:not(:has(~ .HyperMD-list-line-5 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after:is(.HyperMD-task-line) {
  max-height: calc(100% - 1.3em);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-6:not(:has(~ .HyperMD-list-line-6 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  bottom: 0;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
  top: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 1.5);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-6:not(:has(~ .HyperMD-list-line-6 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after:is(.HyperMD-task-line) {
  max-height: calc(100% - 1.3em);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-7:not(:has(~ .HyperMD-list-line-7 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  bottom: 0;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
  top: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 1.5);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-7:not(:has(~ .HyperMD-list-line-7 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):has(~ :is(.HyperMD-list-line-8).cm-active)::after:is(.HyperMD-task-line) {
  max-height: calc(100% - 1.3em);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-1:not(:has(~ .HyperMD-list-line-1 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-2.cm-active, ~ .HyperMD-list-line-2 ~ :is(.HyperMD-list-line-3, .HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  top: 0;
  height: 100%;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-2:not(:has(~ .HyperMD-list-line-2 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-3.cm-active, ~ .HyperMD-list-line-3 ~ :is(.HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  top: 0;
  height: 100%;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-3:not(:has(~ .HyperMD-list-line-3 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-4.cm-active, ~ .HyperMD-list-line-4 ~ :is(.HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  top: 0;
  height: 100%;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-4:not(:has(~ .HyperMD-list-line-4 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-5.cm-active, ~ .HyperMD-list-line-5 ~ :is(.HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  top: 0;
  height: 100%;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-5:not(:has(~ .HyperMD-list-line-5 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-6.cm-active, ~ .HyperMD-list-line-6 ~ :is(.HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  top: 0;
  height: 100%;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-6:not(:has(~ .HyperMD-list-line-6 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-7.cm-active, ~ .HyperMD-list-line-7 ~ :is(.HyperMD-list-line-8).cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  top: 0;
  height: 100%;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-7:not(:has(~ .HyperMD-list-line-7 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)) ~ .HyperMD-list-line:has(~ .HyperMD-list-line-8.cm-active)::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  top: 0;
  height: 100%;
  width: var(--list-threading-width);
  background-color: var(--list-threading-color);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-2:not(:has(~ .HyperMD-list-line-2 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):is(.cm-active, :has(~ :is(.HyperMD-list-line-3, .HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  width: calc(var(--list-indent) - var(--list-threading-width));
  top: 0;
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--list-threading-width) solid var(--list-threading-color);
  border-left: var(--list-threading-width) solid var(--list-threading-color);
  height: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 8);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-3:not(:has(~ .HyperMD-list-line-3 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):is(.cm-active, :has(~ :is(.HyperMD-list-line-4, .HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  width: calc(var(--list-indent) - var(--list-threading-width));
  top: 0;
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--list-threading-width) solid var(--list-threading-color);
  border-left: var(--list-threading-width) solid var(--list-threading-color);
  height: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 8);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-4:not(:has(~ .HyperMD-list-line-4 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):is(.cm-active, :has(~ :is(.HyperMD-list-line-5, .HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  width: calc(var(--list-indent) - var(--list-threading-width));
  top: 0;
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--list-threading-width) solid var(--list-threading-color);
  border-left: var(--list-threading-width) solid var(--list-threading-color);
  height: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 8);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-5:not(:has(~ .HyperMD-list-line-5 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):is(.cm-active, :has(~ :is(.HyperMD-list-line-6, .HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  width: calc(var(--list-indent) - var(--list-threading-width));
  top: 0;
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--list-threading-width) solid var(--list-threading-color);
  border-left: var(--list-threading-width) solid var(--list-threading-color);
  height: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 8);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-6:not(:has(~ .HyperMD-list-line-6 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):is(.cm-active, :has(~ :is(.HyperMD-list-line-7, .HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  width: calc(var(--list-indent) - var(--list-threading-width));
  top: 0;
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--list-threading-width) solid var(--list-threading-color);
  border-left: var(--list-threading-width) solid var(--list-threading-color);
  height: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 8);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-7:not(:has(~ .HyperMD-list-line-7 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):is(.cm-active, :has(~ :is(.HyperMD-list-line-8).cm-active)) > .cm-hmd-list-indent::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  width: calc(var(--list-indent) - var(--list-threading-width));
  top: 0;
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--list-threading-width) solid var(--list-threading-color);
  border-left: var(--list-threading-width) solid var(--list-threading-color);
  height: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 8);
}
.list-enable.list-bullet-thread-style .HyperMD-list-line-8:not(:has(~ .HyperMD-list-line-8 ~ .HyperMD-list-line.cm-active)):not(.HyperMD-task-line):not(:has(.cm-formatting-list-ol)):is(.cm-active) > .cm-hmd-list-indent::after {
  content: "";
  position: absolute;
  left: var(--list-threading-offset);
  width: calc(var(--list-indent) - var(--list-threading-width));
  top: 0;
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--list-threading-width) solid var(--list-threading-color);
  border-left: var(--list-threading-width) solid var(--list-threading-color);
  height: calc(var(--line-height-normal) * var(--font-text-size) / 2 + var(--list-bullet-size) / 8);
}

/* #endregion list bullet */
/* #region checkbox */
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="!"], li[data-task="!"] > input, li[data-task="!"] > p > input):checked {
  --checkbox-color: var(--color-orange);
  border: none;
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="!"], li[data-task="!"] > input, li[data-task="!"] > p > input):checked::after {
  inset: 0 !important;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='M7.005 3.1a1 1 0 1 1 1.99 0l-.388 6.35a.61.61 0 0 1-1.214 0zM7 12a1 1 0 1 1 2 0a1 1 0 0 1-2 0'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--background-primary);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="?"], li[data-task="?"] > input, li[data-task="?"] > p > input):checked {
  --checkbox-color: var(--color-purple);
  border: none;
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="?"], li[data-task="?"] > input, li[data-task="?"] > p > input):checked::after {
  inset: 0 !important;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' fill-rule='evenodd' d='M4.475 5.458c-.284 0-.514-.237-.47-.517C4.28 3.24 5.576 2 7.825 2c2.25 0 3.767 1.36 3.767 3.215c0 1.344-.665 2.288-1.79 2.973c-1.1.659-1.414 1.118-1.414 2.01v.03a.5.5 0 0 1-.5.5h-.77a.5.5 0 0 1-.5-.495l-.003-.2c-.043-1.221.477-2.001 1.645-2.712c1.03-.632 1.397-1.135 1.397-2.028c0-.979-.758-1.698-1.926-1.698c-1.009 0-1.71.529-1.938 1.402c-.066.254-.278.461-.54.461h-.777ZM7.496 14c.622 0 1.095-.474 1.095-1.09c0-.618-.473-1.092-1.095-1.092c-.606 0-1.087.474-1.087 1.091S6.89 14 7.496 14'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--background-primary);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="+"], li[data-task="+"] > input, li[data-task="+"] > p > input):checked {
  --checkbox-color: var(--color-red);
  border: none;
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="+"], li[data-task="+"] > input, li[data-task="+"] > p > input):checked::after {
  inset: 0 !important;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' fill-rule='evenodd' d='M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--background-primary);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="*"], li[data-task="*"] > input, li[data-task="*"] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327l4.898.696c.441.062.612.636.282.95l-3.522 3.356l.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-yellow);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=i], li[data-task=i] > input, li[data-task=i] > p > input):checked {
  --checkbox-color: var(--color-blue);
  border: none;
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=i], li[data-task=i] > input, li[data-task=i] > p > input):checked::after {
  inset: 0 !important;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='m9.708 6.075l-3.024.379l-.108.502l.595.108c.387.093.464.232.38.619l-.975 4.577c-.255 1.183.14 1.74 1.067 1.74c.72 0 1.554-.332 1.933-.789l.116-.549c-.263.232-.65.325-.905.325c-.363 0-.494-.255-.402-.704zm.091-2.755a1.32 1.32 0 1 1-2.64 0a1.32 1.32 0 0 1 2.64 0'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--background-primary);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="/"], li[data-task="/"] > input, li[data-task="/"] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='M8 15A7 7 0 1 0 8 1zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-yellow);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=a], li[data-task=a] > input, li[data-task=a] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='M6 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1H9v1.07a7.001 7.001 0 0 1 3.274 12.474l.601.602a.5.5 0 0 1-.707.708l-.746-.746A6.97 6.97 0 0 1 8 16a6.97 6.97 0 0 1-3.422-.892l-.746.746a.5.5 0 0 1-.707-.708l.602-.602A7.001 7.001 0 0 1 7 2.07V1h-.5A.5.5 0 0 1 6 .5m2.5 5a.5.5 0 0 0-1 0v3.362l-1.429 2.38a.5.5 0 1 0 .858.515l1.5-2.5A.5.5 0 0 0 8.5 9zM.86 5.387A2.5 2.5 0 1 1 4.387 1.86A8.04 8.04 0 0 0 .86 5.387M11.613 1.86a2.5 2.5 0 1 1 3.527 3.527a8.04 8.04 0 0 0-3.527-3.527'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-orange);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=B], li[data-task=B] > input, li[data-task=B] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><g fill='currentColor'><path d='M4.978.855a.5.5 0 1 0-.956.29l.41 1.352A5 5 0 0 0 3 6h10a5 5 0 0 0-1.432-3.503l.41-1.352a.5.5 0 1 0-.956-.29l-.291.956A5 5 0 0 0 8 1a5 5 0 0 0-2.731.811l-.29-.956z'/><path d='M13 6v1H8.5v8.975A5 5 0 0 0 13 11h.5a.5.5 0 0 1 .5.5v.5a.5.5 0 1 0 1 0v-.5a1.5 1.5 0 0 0-1.5-1.5H13V9h1.5a.5.5 0 0 0 0-1H13V7h.5A1.5 1.5 0 0 0 15 5.5V5a.5.5 0 0 0-1 0v.5a.5.5 0 0 1-.5.5zm-5.5 9.975V7H3V6h-.5a.5.5 0 0 1-.5-.5V5a.5.5 0 0 0-1 0v.5A1.5 1.5 0 0 0 2.5 7H3v1H1.5a.5.5 0 0 0 0 1H3v1h-.5A1.5 1.5 0 0 0 1 11.5v.5a.5.5 0 1 0 1 0v-.5a.5.5 0 0 1 .5-.5H3a5 5 0 0 0 4.5 4.975'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-purple);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="<"], li[data-task="<"] > input, li[data-task="<"] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='M4 .5a.5.5 0 0 0-1 0V1H2a2 2 0 0 0-2 2v1h16V3a2 2 0 0 0-2-2h-1V.5a.5.5 0 0 0-1 0V1H4zM16 14V5H0v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2M8.5 8.5V10H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V11H6a.5.5 0 0 1 0-1h1.5V8.5a.5.5 0 0 1 1 0'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-base-60);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=">"], li[data-task=">"] > input, li[data-task=">"] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='currentColor' d='M12.089 3.634A2 2 0 0 0 11 5.414L10.999 8H4a2 2 0 0 0-2 2v4l.005.15A2 2 0 0 0 4 16l6.999-.001l.001 2.587A2 2 0 0 0 14.414 20L21 13.414a2 2 0 0 0 0-2.828L14.414 4a2 2 0 0 0-2.18-.434z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-cyan);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=R], li[data-task=R] > input, li[data-task=R] > p > input):checked {
  --checkbox-color: var(--color-blue);
  border: none;
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=R], li[data-task=R] > input, li[data-task=R] > p > input):checked::after {
  inset: 0 !important;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 20V4h5.5a4 4 0 0 1 0 9H7m5 0l5 7'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--background-primary);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="-"], li[data-task="-"] > input, li[data-task="-"] > p > input):checked {
  --checkbox-color: var(--color-base-60);
  border: none;
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task="-"], li[data-task="-"] > input, li[data-task="-"] > p > input):checked::after {
  inset: 0 !important;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--background-primary);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) [data-task="-"] {
  color: var(--text-faint);
  text-decoration: line-through solid var(--text-faint) 1px;
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=I], li[data-task=I] > input, li[data-task=I] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='currentColor' d='M4 11a1 1 0 0 1 .117 1.993L4 13H3a1 1 0 0 1-.117-1.993L3 11zm8-9a1 1 0 0 1 .993.883L13 3v1a1 1 0 0 1-1.993.117L11 4V3a1 1 0 0 1 1-1m9 9a1 1 0 0 1 .117 1.993L21 13h-1a1 1 0 0 1-.117-1.993L20 11zM4.893 4.893a1 1 0 0 1 1.32-.083l.094.083l.7.7a1 1 0 0 1-1.32 1.497l-.094-.083l-.7-.7a1 1 0 0 1 0-1.414m12.8 0a1 1 0 0 1 1.497 1.32l-.083.094l-.7.7a1 1 0 0 1-1.497-1.32l.083-.094zM14 18a1 1 0 0 1 1 1a3 3 0 0 1-6 0a1 1 0 0 1 .883-.993L10 18zM12 6a6 6 0 0 1 3.6 10.8a1 1 0 0 1-.471.192L15 17H9a1 1 0 0 1-.6-.2A6 6 0 0 1 12 6'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-yellow);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=l], li[data-task=l] > input, li[data-task=l] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='currentColor' d='M18.364 4.636a9 9 0 0 1 .203 12.519l-.203.21l-4.243 4.242a3 3 0 0 1-4.097.135l-.144-.135l-4.244-4.243A9 9 0 0 1 18.364 4.636M12 8a3 3 0 1 0 0 6a3 3 0 0 0 0-6'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-red);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=b], li[data-task=b] > input, li[data-task=b] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-blue);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=n], li[data-task=n] > input, li[data-task=n] > p > input, input[data-task=N], li[data-task=N] > input, li[data-task=N] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='M9.293 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.707A1 1 0 0 0 13.707 4L10 .293A1 1 0 0 0 9.293 0M9.5 3.5v-2l3 3h-2a1 1 0 0 1-1-1M4.5 9a.5.5 0 0 1 0-1h7a.5.5 0 0 1 0 1zM4 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m.5 2.5a.5.5 0 0 1 0-1h4a.5.5 0 0 1 0 1z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-cyan);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=P], li[data-task=P] > input, li[data-task=P] > p > input, input[data-task=p], li[data-task=p] > input, li[data-task=p] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='currentColor' d='M13 3a3 3 0 0 1 2.995 2.824L16 6v4h2a3 3 0 0 1 2.98 2.65l.015.174L21 13l-.02.196l-1.006 5.032c-.381 1.626-1.502 2.796-2.81 2.78L17 21H9a1 1 0 0 1-.993-.883L8 20l.001-9.536a1 1 0 0 1 .5-.865a3 3 0 0 0 1.492-2.397L10 7V6a3 3 0 0 1 3-3m-8 7a1 1 0 0 1 .993.883L6 11v9a1 1 0 0 1-.883.993L5 21H4a2 2 0 0 1-1.995-1.85L2 19v-7a2 2 0 0 1 1.85-1.995L4 10z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-green);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=C], li[data-task=C] > input, li[data-task=C] > p > input, input[data-task=c], li[data-task=c] > input, li[data-task=c] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='currentColor' d='M13 21.008a3 3 0 0 0 2.995-2.823l.005-.177v-4h2a3 3 0 0 0 2.98-2.65l.015-.173l.005-.177l-.02-.196l-1.006-5.032c-.381-1.625-1.502-2.796-2.81-2.78L17 3.008H9a1 1 0 0 0-.993.884L8 4.008l.001 9.536a1 1 0 0 0 .5.866a3 3 0 0 1 1.492 2.396l.007.202v1a3 3 0 0 0 3 3m-8-7a1 1 0 0 0 .993-.883L6 13.008v-9a1 1 0 0 0-.883-.993L5 3.008H4A2 2 0 0 0 2.005 4.86L2 5.01v7a2 2 0 0 0 1.85 1.994l.15.005h1z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-red);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=“], li[data-task=“] > input, li[data-task=“] > p > input, input[data-task='"'], li[data-task='"'] > input, li[data-task='"'] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='M12 12a1 1 0 0 0 1-1V8.558a1 1 0 0 0-1-1h-1.388q0-.527.062-1.054q.093-.558.31-.992t.559-.683q.34-.279.868-.279V3q-.868 0-1.52.372a3.3 3.3 0 0 0-1.085.992a4.9 4.9 0 0 0-.62 1.458A7.7 7.7 0 0 0 9 7.558V11a1 1 0 0 0 1 1zm-6 0a1 1 0 0 0 1-1V8.558a1 1 0 0 0-1-1H4.612q0-.527.062-1.054q.094-.558.31-.992q.217-.434.559-.683q.34-.279.868-.279V3q-.868 0-1.52.372a3.3 3.3 0 0 0-1.085.992a4.9 4.9 0 0 0-.62 1.458A7.7 7.7 0 0 0 3 7.558V11a1 1 0 0 0 1 1z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-purple);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=W], li[data-task=W] > input, li[data-task=W] > p > input, input[data-task=w], li[data-task=w] > input, li[data-task=w] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='currentColor' d='M17 3a1 1 0 0 1 .993.883L18 4v2.17a3 3 0 1 1 0 5.659V12a6 6 0 0 1-5 5.917V20h3a1 1 0 0 1 .117 1.993L16 22H8a1 1 0 0 1-.117-1.993L8 20h3v-2.083a6 6 0 0 1-4.996-5.692L6 12v-.171a3 3 0 0 1-3.996-2.653L2.001 9l.005-.176A3 3 0 0 1 6.001 6.17L6 4a1 1 0 0 1 1-1zM5 8a1 1 0 1 0 0 2a1 1 0 0 0 0-2m14 0a1 1 0 1 0 0 2a1 1 0 0 0 0-2'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-yellow);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=S], li[data-task=S] > input, li[data-task=S] > p > input):checked {
  --checkbox-color: var(--color-green);
  border: none;
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=S], li[data-task=S] > input, li[data-task=S] > p > input):checked::after {
  inset: 0 !important;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='1em' height='1em'><path fill='currentColor' d='M4 10.781c.148 1.667 1.513 2.85 3.591 3.003V15h1.043v-1.216c2.27-.179 3.678-1.438 3.678-3.3c0-1.59-.947-2.51-2.956-3.028l-.722-.187V3.467c1.122.11 1.879.714 2.07 1.616h1.47c-.166-1.6-1.54-2.748-3.54-2.875V1H7.591v1.233c-1.939.23-3.27 1.472-3.27 3.156c0 1.454.966 2.483 2.661 2.917l.61.162v4.031c-1.149-.17-1.94-.8-2.131-1.718zm3.391-3.836c-1.043-.263-1.6-.825-1.6-1.616c0-.944.704-1.641 1.8-1.828v3.495l-.2-.05zm1.591 1.872c1.287.323 1.852.859 1.852 1.769c0 1.097-.826 1.828-2.2 1.939V8.73z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--background-primary);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=u], li[data-task=u] > input, li[data-task=u] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='m3 17l6-6l4 4l8-8'/><path d='M14 7h7v7'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-green);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=d], li[data-task=d] > input, li[data-task=d] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='m3 7l6 6l4-4l8 8'/><path d='M21 10v7h-7'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-red);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}
body:is(:not(.css-settings-manager), .list-checkbox-alternative) :is(input[data-task=L], li[data-task=L] > input, li[data-task=L] > p > input):checked {
  --checkbox-marker-color: transparent;
  border: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='currentColor' d='M6.979 3.074a6 6 0 0 1 4.988 1.425l.037.033l.034-.03a6 6 0 0 1 4.733-1.44l.246.036a6 6 0 0 1 3.364 10.008l-.18.185l-.048.041l-7.45 7.379a1 1 0 0 1-1.313.082l-.094-.082l-7.493-7.422A6 6 0 0 1 6.979 3.074'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--color-red);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
}

/* #endregion checkbox */
/* #endregion list */
/* #region quote */
body {
  --blockquote-background-color: var(--background-primary-alt);
  --callout-radius: var(--radius-m);
  --blockquote-border-color: var(--accent-active);
  --blockquote-border-thickness: var(--size-4-1);
  --blockquote-radius: var(--size-2-3);
}
body .markdown-rendered blockquote {
  --h1-size: var(--font-text-size);
  --h2-size: var(--font-text-size);
  --h3-size: var(--font-text-size);
  --h4-size: var(--font-text-size);
  --h5-size: var(--font-text-size);
  --h6-size: var(--font-text-size);
  --h1-line-height: var(--setting-line-height, var(--line-height-normal));
  --h2-line-height: var(--setting-line-height, var(--line-height-normal));
  --h3-line-height: var(--setting-line-height, var(--line-height-normal));
  --h4-line-height: var(--setting-line-height, var(--line-height-normal));
  --h5-line-height: var(--setting-line-height, var(--line-height-normal));
  --h6-line-height: var(--setting-line-height, var(--line-height-normal));
  border: none;
  border-radius: var(--blockquote-radius);
  position: relative;
  margin-block: var(--size-4-3);
  padding-block: var(--size-2-3);
}
body .markdown-rendered blockquote :is(p, h1, h2, h3, h4, h5, h6) {
  padding-left: var(--blockquote-border-thickness);
  padding-right: var(--size-4-3);
}
body .markdown-rendered blockquote::after {
  content: "";
  position: absolute;
  left: var(--size-4-2);
  inset-block: var(--size-4-2);
  border-radius: var(--blockquote-radius);
  width: var(--blockquote-border-thickness);
  background-color: var(--accent-active-bg);
}
body .markdown-rendered blockquote blockquote {
  box-shadow: none;
  margin-inline-end: var(--size-4-3) !important;
}
body .HyperMD-quote {
  border: solid var(--blockquote-background-color);
  border-width: 0 var(--size-4-2) 0 var(--size-4-2);
}
body .HyperMD-quote::before {
  width: 0 !important;
}
body :is(.HyperMD-quote:first-child,
.cm-sizer > div > div > *:not(.HyperMD-quote) + .HyperMD-quote) {
  border-top-width: var(--size-4-2);
  border-start-start-radius: var(--blockquote-border-thickness);
  border-start-end-radius: var(--blockquote-border-thickness);
}
body :is(.HyperMD-quote:first-child,
.cm-sizer > div > div > *:not(.HyperMD-quote) + .HyperMD-quote)::before {
  border-start-start-radius: var(--blockquote-border-thickness);
  border-start-end-radius: var(--blockquote-border-thickness);
}
body :is(.HyperMD-quote:last-child,
.cm-sizer > div > div > .HyperMD-quote:has(+ *:not(.HyperMD-quote))) {
  border-bottom-width: var(--size-4-2);
  border-end-start-radius: var(--blockquote-border-thickness);
  border-end-end-radius: var(--blockquote-border-thickness);
}
body :is(.HyperMD-quote:last-child,
.cm-sizer > div > div > .HyperMD-quote:has(+ *:not(.HyperMD-quote)))::before {
  border-end-start-radius: var(--blockquote-border-thickness);
  border-end-end-radius: var(--blockquote-border-thickness);
}

.quote-shadow .markdown-rendered blockquote {
  box-shadow: var(--shadow-s);
}

.quote-border .markdown-rendered blockquote {
  border: 1px solid var(--background-modifier-border);
  transition: border-color var(--animation);
  box-shadow: none;
}
.quote-border .markdown-rendered blockquote:hover {
  border-color: var(--background-modifier-border-hover);
}
.quote-border .markdown-rendered blockquote:active {
  border-color: var(--background-modifier-border-focus);
}
.quote-border .markdown-rendered blockquote blockquote {
  margin: var(--block-outline-width);
}

.quote-mark blockquote {
  padding-inline-start: calc(var(--indent-unit) * var(--indent-size));
  padding-block: calc(var(--indent-unit) * var(--indent-size) / 4) !important;
}
.quote-mark blockquote::before {
  content: "“";
  position: absolute;
  font-family: Source Code Pro;
  font-size: calc(var(--font-text-size) * 3);
  line-height: 0.9;
  color: var(--text-muted);
  left: calc(var(--indent-unit) * 0.3);
}
.quote-mark blockquote::after {
  content: none !important;
}

.quote-italic {
  --blockquote-font-style: italic;
}

/* #endregion quote */
/* #region table */
body:is(:not(.css-settings-manager), .table-full) :is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper,
.markdown-rendered table) {
  --table-white-space: break-all;
  width: 100%;
}
body:is(:not(.css-settings-manager), .table-full) :is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper,
.markdown-rendered table) .table-editor {
  width: 100%;
}

body {
  --table-header-background: var(--background-primary-alt);
  --table-header-background-hover: var(--table-header-background);
  --table-cell-vertical-alignment: middle;
  --table-add-button-border-width: 0;
  --table-add-button-background: var(--background-modifier-hover);
  --table-drag-handle-background: var(--background-modifier-hover);
  --table-selection-border-radius: var(--radius-m);
  --table-selection-border-color: var(--accent-inactive);
}
body .table-drag-target::after {
  background-color: var(--accent-active-bg);
}

.table-style-minimal {
  --table-header-background: transparent;
  --table-border-color: transparent;
  --table-header-border-color: var(--color-base-100);
  --table-header-border-width: 3px;
  --table-selection-border-radius: 0;
  --table-row-last-border-width: var(--table-header-border-width);
}
.table-style-minimal table th {
  border-bottom: var(--color-base-100) solid 2px;
  border-inline: 0;
}
.table-style-minimal table tr:last-child > td {
  border-bottom-color: var(--table-header-border-color);
}

.table-style-colorful {
  --table-background: var(--background-primary-alt);
  --table-header-background: var(
    --setting-table-header-text,
    var(--accent-active-bg)
  );
  --table-row-alt-background: var(--bg-editor);
  --table-row-alt-background-hover: var(--bg-editor);
  --table-column-alt-background: inherit;
  --table-column-alt-background-hover: inherit;
}
.table-style-colorful :is(.is-live-preview, .markdown-rendered) {
  --table-header-color: var(--setting-table-header-bg, var(--text-on-accent));
}
.table-style-colorful th .cm-s-obsidian {
  color: var(--text-normal);
}
.table-style-colorful .cm-html-embed .edit-block-button {
  --background-modifier-hover: var(--background-secondary);
}

/* table radius */
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) table {
  border-collapse: initial;
  border-spacing: 0;
}
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) :is(th, td):not(:first-child) {
  border-left: 0;
}
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) tbody td {
  border-top: 0;
}
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) thead tr {
  background-color: transparent;
}
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) thead tr th {
  background-color: var(--table-header-background) !important;
}
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) :is(th:first-child:not(:has(:is(.table-col-drag-handle, .table-row-drag-handle):hover)),
th:first-child:not(:has(:is(.table-col-drag-handle, .table-row-drag-handle):hover)) .table-cell-wrapper) {
  border-start-start-radius: var(--radius-m);
}
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) :is(th:last-child:not(:has(.table-col-drag-handle:hover)),
th:last-child:not(:has(.table-col-drag-handle:hover)) .table-cell-wrapper) {
  border-start-end-radius: var(--radius-m);
}
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) tr:last-child :is(td:first-child:not(:has(.table-row-drag-handle:hover)),
td:first-child .table-cell-wrapper) {
  border-end-start-radius: var(--radius-m);
}
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) tr:last-child :is(td:last-child, td:last-child .table-cell-wrapper) {
  border-end-end-radius: var(--radius-m);
}
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) .table-wrapper:has(.table-row-btn:hover) tr:last-child td {
  border-radius: 0 !important;
}
body:is(:not(.css-settings-manager), .table-round:not(.table-style-minimal)) .table-wrapper:has(.table-col-btn:hover) :is(tr:last-child td:last-child,
th:last-child,
th:last-child .table-cell-wrapper) {
  border-radius: 0;
}

.table-cell-wrapper[data-ignore-swipe] {
  background-color: hsl(var(--active-line));
}

.markdown-source-view.mod-cm6 .cm-table-widget {
  /* centered image */
}
.markdown-source-view.mod-cm6 .cm-table-widget .table-cell-wrapper:has(> .cm-s-obsidian):not(:has(.image-embed)) {
  padding-inline: var(--size-4-1);
}
.markdown-source-view.mod-cm6 .cm-table-widget .table-cell-wrapper:has(> .image-embed) {
  display: table-cell;
}
.markdown-source-view.mod-cm6 .cm-table-widget .table-cell-wrapper .image-embed {
  padding-block: 0;
}
.markdown-source-view.mod-cm6 .cm-table-widget .table-cell-wrapper:has(.is-live-preview .image-embed) {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.markdown-source-view.mod-cm6 .cm-table-widget .table-cell-wrapper:has(.is-live-preview .image-embed) [class=cm-line] {
  display: none;
}
.markdown-source-view.mod-cm6 .cm-table-widget :is(.table-row-btn,
.table-col-btn,
.table-row-drag-handle,
.table-col-drag-handle) {
  transition: opacity var(--animation-fast);
}
.markdown-source-view.mod-cm6 .cm-table-widget .table-row-btn {
  border-end-start-radius: var(--radius-s);
  border-end-end-radius: var(--radius-s);
}
.markdown-source-view.mod-cm6 .cm-table-widget .table-col-btn {
  border-start-end-radius: var(--radius-s);
  border-end-end-radius: var(--radius-s);
}

/* #endregion table */
/* #region tag */
body {
  --tag-color: var(--text-accent);
  --tag-padding-x: var(--size-4-2);
  --tag-padding-y: 0;
}

.HyperMD-header .cm-hashtag {
  font-size: var(--tag-size) !important;
}

.cm-line span.cm-hashtag {
  vertical-align: baseline;
}

.tag-click-to-edit .cm-line span.cm-hashtag:not(.cm-formatting) {
  pointer-events: none;
}

.tag-plain {
  --tag-background: transparent;
}

.tag-outline {
  --tag-border-color: var(--setting-tag-outline, var(--text-accent)) !important;
  --tag-border-width: 1px !important;
  --tag-color: var(--setting-tag-color, var(--text-accent)) !important;
}
.tag-outline :is(.cm-tag-obsidian, .tag[href="#obsidian"]) {
  --tag-border-color: var(--color-purple) !important;
  --tag-color: var(--tag-border-color);
}
.tag-outline :is(.cm-tag-todo, .tag[href="#todo"]) {
  --tag-border-color: var(--color-green) !important;
  --tag-color: var(--tag-border-color);
}
.tag-outline :is(.cm-tag-important, .tag[href="#important"]) {
  --tag-border-color: var(--color-red) !important;
  --tag-color: var(--tag-border-color);
}
.tag-outline :is(.cm-tag-progress, .tag[href="#progress"]) {
  --tag-border-color: var(--color-blue) !important;
  --tag-color: var(--tag-border-color);
}
.tag-outline :is(.cm-tag-complete, .tag[href="#complete"]) {
  --tag-border-color: var(--color-orange) !important;
  --tag-color: var(--tag-border-color);
}

.tag-fill {
  --tag-background: var(--setting-tag-bg, var(--text-accent)) !important;
  --tag-background-hover: var(--tag-background);
  --tag-color: var(--text-on-accent);
  --tag-color-hover: var(--tag-color);
}
.tag-fill :is(.cm-tag-obsidian, .tag[href="#obsidian"]) {
  --tag-background: var(--color-purple) !important;
}
.tag-fill :is(.cm-tag-todo, .tag[href="#todo"]) {
  --tag-background: var(--color-green) !important;
}
.tag-fill :is(.cm-tag-important, .tag[href="#important"]) {
  --tag-background: var(--color-red) !important;
}
.tag-fill :is(.cm-tag-progress, .tag[href="#progress"]) {
  --tag-background: var(--color-blue) !important;
}
.tag-fill :is(.cm-tag-complete, .tag[href="#complete"]) {
  --tag-background: var(--color-orange) !important;
}

/* #endregion tag */
/* #region heading */
body {
  --h1-size: calc(
    var(--font-text-size) * var(--setting-h1-size, 1.6)
  );
  --h1-weight: var(--setting-h1-weight, 750);
  --h1-font: var(--setting-h1-font, var(--font-text));
  --h1-line-height: calc(var(--line-height-normal) * var(--h1-size));
  --h2-size: calc(
    var(--font-text-size) * var(--setting-h2-size, 1.5)
  );
  --h2-weight: var(--setting-h2-weight, 700);
  --h2-font: var(--setting-h2-font, var(--font-text));
  --h2-line-height: calc(var(--line-height-normal) * var(--h2-size));
  --h3-size: calc(
    var(--font-text-size) * var(--setting-h3-size, 1.4)
  );
  --h3-weight: var(--setting-h3-weight, 600);
  --h3-font: var(--setting-h3-font, var(--font-text));
  --h3-line-height: calc(var(--line-height-normal) * var(--h3-size));
  --h4-size: calc(
    var(--font-text-size) * var(--setting-h4-size, 1.3)
  );
  --h4-weight: var(--setting-h4-weight, 550);
  --h4-font: var(--setting-h4-font, var(--font-text));
  --h4-line-height: calc(var(--line-height-normal) * var(--h4-size));
  --h5-size: calc(
    var(--font-text-size) * var(--setting-h5-size, 1.2)
  );
  --h5-weight: var(--setting-h5-weight, 550);
  --h5-font: var(--setting-h5-font, var(--font-text));
  --h5-line-height: calc(var(--line-height-normal) * var(--h5-size));
  --h6-size: calc(
    var(--font-text-size) * var(--setting-h6-size, 1.1)
  );
  --h6-weight: var(--setting-h6-weight, 500);
  --h6-font: var(--setting-h6-font, var(--font-text));
  --h6-line-height: calc(var(--line-height-normal) * var(--h6-size));
}
body.heading-color-base {
  --h1-color: var(--text-normal);
  --h2-color: var(--text-normal);
  --h3-color: var(--text-normal);
  --h4-color: var(--text-normal);
  --h5-color: var(--text-normal);
  --h6-color: var(--text-normal);
}
body.heading-color-accent {
  --h1-color: var(--accent-active);
  --h2-color: var(--accent-active);
  --h3-color: var(--accent-active);
  --h4-color: var(--accent-active);
  --h5-color: var(--accent-active);
  --h6-color: var(--accent-active);
}
body.heading-h1-caps {
  --h1-variant: small-caps;
}
body.heading-h1-italic {
  --h1-style: italic;
}
body.heading-h1-center :is(.HyperMD-header-1, h1) {
  text-align: center;
}
body.heading-h2-caps {
  --h2-variant: small-caps;
}
body.heading-h2-italic {
  --h2-style: italic;
}
body.heading-h2-center :is(.HyperMD-header-2, h2) {
  text-align: center;
}
body.heading-h3-caps {
  --h3-variant: small-caps;
}
body.heading-h3-italic {
  --h3-style: italic;
}
body.heading-h3-center :is(.HyperMD-header-3, h3) {
  text-align: center;
}
body.heading-h4-caps {
  --h4-variant: small-caps;
}
body.heading-h4-italic {
  --h4-style: italic;
}
body.heading-h4-center :is(.HyperMD-header-4, h4) {
  text-align: center;
}
body.heading-h5-caps {
  --h5-variant: small-caps;
}
body.heading-h5-italic {
  --h5-style: italic;
}
body.heading-h5-center :is(.HyperMD-header-5, h5) {
  text-align: center;
}
body.heading-h6-caps {
  --h6-variant: small-caps;
}
body.heading-h6-italic {
  --h6-style: italic;
}
body.heading-h6-center :is(.HyperMD-header-6, h6) {
  text-align: center;
}

body:is(:not(.css-settings-manager), .heading-color-colorful) {
  --h1-color-rgb: var(
    --setting-h1-color,
    var(--color-red-rgb)
  );
  --h1-color: rgb(var(--h1-color-rgb));
  --h2-color-rgb: var(
    --setting-h2-color,
    var(--color-orange-rgb)
  );
  --h2-color: rgb(var(--h2-color-rgb));
  --h3-color-rgb: var(
    --setting-h3-color,
    var(--color-green-rgb)
  );
  --h3-color: rgb(var(--h3-color-rgb));
  --h4-color-rgb: var(
    --setting-h4-color,
    var(--color-blue-rgb)
  );
  --h4-color: rgb(var(--h4-color-rgb));
  --h5-color-rgb: var(
    --setting-h5-color,
    var(--color-purple-rgb)
  );
  --h5-color: rgb(var(--h5-color-rgb));
  --h6-color-rgb: var(
    --setting-h6-color,
    var(--color-cyan-rgb)
  );
  --h6-color: rgb(var(--h6-color-rgb));
}

body .cm-contentContainer :first-child .cm-formatting.cm-formatting-header {
  color: var(--color-base-50);
  font-weight: 400;
  font-size: var(--font-text-size) !important;
  line-height: var(--line-height-normal);
}

:is(.HyperMD-header-1, .markdown-rendered h1) {
  --h-indicator-content: "H1";
}

.link-heading :is(.HyperMD-header-1, .markdown-rendered h1) {
  --link-color: var(--h1-color);
  --link-color-underline: var(--h1-color);
  --link-external-color: var(--h1-color);
  --link-external-color-underline: var(--h1-color);
  --link-text-size: var(--h1-size);
}

:is(.HyperMD-header-2, .markdown-rendered h2) {
  --h-indicator-content: "H2";
}

.link-heading :is(.HyperMD-header-2, .markdown-rendered h2) {
  --link-color: var(--h2-color);
  --link-color-underline: var(--h2-color);
  --link-external-color: var(--h2-color);
  --link-external-color-underline: var(--h2-color);
  --link-text-size: var(--h2-size);
}

:is(.HyperMD-header-3, .markdown-rendered h3) {
  --h-indicator-content: "H3";
}

.link-heading :is(.HyperMD-header-3, .markdown-rendered h3) {
  --link-color: var(--h3-color);
  --link-color-underline: var(--h3-color);
  --link-external-color: var(--h3-color);
  --link-external-color-underline: var(--h3-color);
  --link-text-size: var(--h3-size);
}

:is(.HyperMD-header-4, .markdown-rendered h4) {
  --h-indicator-content: "H4";
}

.link-heading :is(.HyperMD-header-4, .markdown-rendered h4) {
  --link-color: var(--h4-color);
  --link-color-underline: var(--h4-color);
  --link-external-color: var(--h4-color);
  --link-external-color-underline: var(--h4-color);
  --link-text-size: var(--h4-size);
}

:is(.HyperMD-header-5, .markdown-rendered h5) {
  --h-indicator-content: "H5";
}

.link-heading :is(.HyperMD-header-5, .markdown-rendered h5) {
  --link-color: var(--h5-color);
  --link-color-underline: var(--h5-color);
  --link-external-color: var(--h5-color);
  --link-external-color-underline: var(--h5-color);
  --link-text-size: var(--h5-size);
}

:is(.HyperMD-header-6, .markdown-rendered h6) {
  --h-indicator-content: "H6";
}

.link-heading :is(.HyperMD-header-6, .markdown-rendered h6) {
  --link-color: var(--h6-color);
  --link-color-underline: var(--h6-color);
  --link-external-color: var(--h6-color);
  --link-external-color-underline: var(--h6-color);
  --link-text-size: var(--h6-size);
}

.markdown-source-view.mod-cm6 .HyperMD-header .cm-fold-indicator {
  position: unset;
}
.markdown-source-view.mod-cm6 .HyperMD-header .cm-fold-indicator .collapse-indicator {
  inset-inline-start: -1.4rem;
  inset-inline-end: unset;
}

:is(h1, h2, h3, h4, h5, h6) {
  position: relative;
}

.markdown-preview-view .heading-collapse-indicator {
  margin: 0;
  inset-inline-start: -1.4rem;
}

body:is(:not(.css-settings-manager), :not(.heading-indicator-disable)) :is(.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header, div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)) {
  --h-indicator-color: transparent;
  position: relative;
}
body:is(:not(.css-settings-manager), :not(.heading-indicator-disable)) :is(.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header, div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6))::before {
  content: var(--h-indicator-content, "");
  position: absolute;
  font-size: calc(var(--font-text-size) * 0.7);
  left: -1.2rem;
  color: var(--h-indicator-color, inherit);
  text-decoration: var(--h-indicator-decoration, none);
  pointer-events: none;
}
body:is(:not(.css-settings-manager), :not(.heading-indicator-disable)) :is(.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header, div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)):hover {
  --h-indicator-color: inherit;
}
body:is(:not(.css-settings-manager), :not(.heading-indicator-disable)) :is(.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header, div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)) :is(.collapse-indicator, .header-collapse-indicator) {
  opacity: 0 !important;
  padding-inline-start: var(--size-4-2);
}
body:is(:not(.css-settings-manager), :not(.heading-indicator-disable)) :is(.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:has(> .is-collapsed), div.markdown-reading-view > div > div > div.is-collpased > :is(h1, h2, h3, h4, h5, h6)) {
  --h-indicator-color: inherit;
}
body:is(:not(.css-settings-manager), :not(.heading-indicator-disable)).heading-indicator-fixed :is(.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header, div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)) {
  --h-indicator-color: var(--text-faint);
}
body:is(:not(.css-settings-manager), :not(.heading-indicator-disable)).heading-indicator-fixed :is(.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header, div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)):hover {
  --h-indicator-color: inherit;
}
body:is(:not(.css-settings-manager), :not(.heading-indicator-disable)).heading-indicator-fixed :is(.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:has(> .is-collapsed), div.markdown-reading-view > div > div > div.is-collpased > :is(h1, h2, h3, h4, h5, h6)) {
  --h-indicator-color: inherit;
  --h-indicator-decoration: underline;
}

body.line-active-left .cm-active.HyperMD-header::before {
  opacity: 1 !important;
}
body.line-active-left .cm-active.HyperMD-header-1::before {
  color: var(--h1-color) !important;
}
body.line-active-left .cm-active.HyperMD-header-2::before {
  color: var(--h2-color) !important;
}
body.line-active-left .cm-active.HyperMD-header-3::before {
  color: var(--h3-color) !important;
}
body.line-active-left .cm-active.HyperMD-header-4::before {
  color: var(--h4-color) !important;
}
body.line-active-left .cm-active.HyperMD-header-5::before {
  color: var(--h5-color) !important;
}
body.line-active-left .cm-active.HyperMD-header-6::before {
  color: var(--h6-color) !important;
}

.heading-h1-underline :is(.HyperMD-header-1 .cm-header:not(.cm-formatting),
.markdown-rendered h1) {
  text-decoration: underline var(--size-2-1);
}

.heading-h2-underline :is(.HyperMD-header-2 .cm-header:not(.cm-formatting),
.markdown-rendered h2) {
  text-decoration: underline var(--size-2-1);
}

.heading-h3-underline :is(.HyperMD-header-3 .cm-header:not(.cm-formatting),
.markdown-rendered h3) {
  text-decoration: underline var(--size-2-1);
}

.heading-h4-underline :is(.HyperMD-header-4 .cm-header:not(.cm-formatting),
.markdown-rendered h4) {
  text-decoration: underline var(--size-2-1);
}

.heading-h5-underline :is(.HyperMD-header-5 .cm-header:not(.cm-formatting),
.markdown-rendered h5) {
  text-decoration: underline var(--size-2-1);
}

.heading-h6-underline :is(.HyperMD-header-6 .cm-header:not(.cm-formatting),
.markdown-rendered h6) {
  text-decoration: underline var(--size-2-1);
}

.heading-h1-full-line :is(.HyperMD-header-1, .markdown-rendered h1) {
  position: relative;
}
.heading-h1-full-line :is(.HyperMD-header-1, .markdown-rendered h1)::after {
  content: "";
  position: absolute;
  bottom: var(--size-2-1);
  height: var(--size-2-1);
  inset-inline: 0;
  background: var(--heading-h1-full-line-bg, currentColor);
  border-radius: var(--size-2-1);
}
.heading-h1-full-line.heading-h1-full-line-left {
  --heading-h1-full-line-bg: linear-gradient(
    to right,
    currentColor 10%,
    transparent 90%
  );
}
.heading-h1-full-line.heading-h1-full-line-right {
  --heading-h1-full-line-bg: linear-gradient(
    to left,
    currentColor 10%,
    transparent 90%
  );
}

.heading-h2-full-line :is(.HyperMD-header-2, .markdown-rendered h2) {
  position: relative;
}
.heading-h2-full-line :is(.HyperMD-header-2, .markdown-rendered h2)::after {
  content: "";
  position: absolute;
  bottom: var(--size-2-1);
  height: var(--size-2-1);
  inset-inline: 0;
  background: var(--heading-h2-full-line-bg, currentColor);
  border-radius: var(--size-2-1);
}
.heading-h2-full-line.heading-h2-full-line-left {
  --heading-h2-full-line-bg: linear-gradient(
    to right,
    currentColor 10%,
    transparent 90%
  );
}
.heading-h2-full-line.heading-h2-full-line-right {
  --heading-h2-full-line-bg: linear-gradient(
    to left,
    currentColor 10%,
    transparent 90%
  );
}

.heading-h3-full-line :is(.HyperMD-header-3, .markdown-rendered h3) {
  position: relative;
}
.heading-h3-full-line :is(.HyperMD-header-3, .markdown-rendered h3)::after {
  content: "";
  position: absolute;
  bottom: var(--size-2-1);
  height: var(--size-2-1);
  inset-inline: 0;
  background: var(--heading-h3-full-line-bg, currentColor);
  border-radius: var(--size-2-1);
}
.heading-h3-full-line.heading-h3-full-line-left {
  --heading-h3-full-line-bg: linear-gradient(
    to right,
    currentColor 10%,
    transparent 90%
  );
}
.heading-h3-full-line.heading-h3-full-line-right {
  --heading-h3-full-line-bg: linear-gradient(
    to left,
    currentColor 10%,
    transparent 90%
  );
}

.heading-h4-full-line :is(.HyperMD-header-4, .markdown-rendered h4) {
  position: relative;
}
.heading-h4-full-line :is(.HyperMD-header-4, .markdown-rendered h4)::after {
  content: "";
  position: absolute;
  bottom: var(--size-2-1);
  height: var(--size-2-1);
  inset-inline: 0;
  background: var(--heading-h4-full-line-bg, currentColor);
  border-radius: var(--size-2-1);
}
.heading-h4-full-line.heading-h4-full-line-left {
  --heading-h4-full-line-bg: linear-gradient(
    to right,
    currentColor 10%,
    transparent 90%
  );
}
.heading-h4-full-line.heading-h4-full-line-right {
  --heading-h4-full-line-bg: linear-gradient(
    to left,
    currentColor 10%,
    transparent 90%
  );
}

.heading-h5-full-line :is(.HyperMD-header-5, .markdown-rendered h5) {
  position: relative;
}
.heading-h5-full-line :is(.HyperMD-header-5, .markdown-rendered h5)::after {
  content: "";
  position: absolute;
  bottom: var(--size-2-1);
  height: var(--size-2-1);
  inset-inline: 0;
  background: var(--heading-h5-full-line-bg, currentColor);
  border-radius: var(--size-2-1);
}
.heading-h5-full-line.heading-h5-full-line-left {
  --heading-h5-full-line-bg: linear-gradient(
    to right,
    currentColor 10%,
    transparent 90%
  );
}
.heading-h5-full-line.heading-h5-full-line-right {
  --heading-h5-full-line-bg: linear-gradient(
    to left,
    currentColor 10%,
    transparent 90%
  );
}

.heading-h6-full-line :is(.HyperMD-header-6, .markdown-rendered h6) {
  position: relative;
}
.heading-h6-full-line :is(.HyperMD-header-6, .markdown-rendered h6)::after {
  content: "";
  position: absolute;
  bottom: var(--size-2-1);
  height: var(--size-2-1);
  inset-inline: 0;
  background: var(--heading-h6-full-line-bg, currentColor);
  border-radius: var(--size-2-1);
}
.heading-h6-full-line.heading-h6-full-line-left {
  --heading-h6-full-line-bg: linear-gradient(
    to right,
    currentColor 10%,
    transparent 90%
  );
}
.heading-h6-full-line.heading-h6-full-line-right {
  --heading-h6-full-line-bg: linear-gradient(
    to left,
    currentColor 10%,
    transparent 90%
  );
}

.heading-h1-block.heading-color-base {
  --h1-color-bg: var(--color-base-30);
}
.heading-h1-block.heading-color-accent {
  --h1-color-bg: hsla(
    var(--theme-accent-active-h),
    var(--theme-accent-active-s),
    var(--theme-accent-active-l),
    0.15
  );
}
.heading-h1-block.heading-color-colorful {
  --h1-color-bg: rgba(var(--h1-color-rgb), 0.15);
}
.heading-h1-block.heading-h1-block-contrast {
  --h1-color-bg: rgba(var(--h1-color-rgb));
}
.heading-h1-block.heading-h1-block-contrast :is(.HyperMD-header-1 .cm-header:not(.cm-formatting-header),
.markdown-rendered h1) {
  color: var(--text-on-accent);
  caret-color: currentColor;
}
.heading-h1-block :is(.HyperMD-header-1 .cm-header:not(.cm-formatting-header),
.markdown-rendered h1) {
  background-color: var(--h1-color-bg);
  padding: var(--size-4-1) 0.6rem;
  border-radius: var(--size-2-3);
  -webkit-box-decoration-break: clone;
}
.heading-h1-block :is(.HyperMD-header-1 .cm-header:not(.cm-formatting-header),
.markdown-rendered h1)::selection {
  color: var(--h1-color);
  background-color: var(--background-secondary);
}
.heading-h1-block .markdown-rendered h1 {
  width: fit-content;
  line-height: 1.2;
  --heading-spacing: calc(var(--h2-line-height) - 1.2 * var(--h1-size));
}
.heading-h1-block:not(.heading-indicator-disable) .markdown-rendered h1::before {
  top: -0.3rem;
  line-height: var(--h1-line-height);
}

.heading-h2-block.heading-color-base {
  --h2-color-bg: var(--color-base-30);
}
.heading-h2-block.heading-color-accent {
  --h2-color-bg: hsla(
    var(--theme-accent-active-h),
    var(--theme-accent-active-s),
    var(--theme-accent-active-l),
    0.15
  );
}
.heading-h2-block.heading-color-colorful {
  --h2-color-bg: rgba(var(--h2-color-rgb), 0.15);
}
.heading-h2-block.heading-h2-block-contrast {
  --h2-color-bg: rgba(var(--h2-color-rgb));
}
.heading-h2-block.heading-h2-block-contrast :is(.HyperMD-header-2 .cm-header:not(.cm-formatting-header),
.markdown-rendered h2) {
  color: var(--text-on-accent);
  caret-color: currentColor;
}
.heading-h2-block :is(.HyperMD-header-2 .cm-header:not(.cm-formatting-header),
.markdown-rendered h2) {
  background-color: var(--h2-color-bg);
  padding: var(--size-4-1) 0.6rem;
  border-radius: var(--size-2-3);
  -webkit-box-decoration-break: clone;
}
.heading-h2-block :is(.HyperMD-header-2 .cm-header:not(.cm-formatting-header),
.markdown-rendered h2)::selection {
  color: var(--h2-color);
  background-color: var(--background-secondary);
}
.heading-h2-block .markdown-rendered h2 {
  width: fit-content;
  line-height: 1.2;
  --heading-spacing: calc(var(--h2-line-height) - 1.2 * var(--h2-size));
}
.heading-h2-block:not(.heading-indicator-disable) .markdown-rendered h2::before {
  top: -0.3rem;
  line-height: var(--h2-line-height);
}

.heading-h3-block.heading-color-base {
  --h3-color-bg: var(--color-base-30);
}
.heading-h3-block.heading-color-accent {
  --h3-color-bg: hsla(
    var(--theme-accent-active-h),
    var(--theme-accent-active-s),
    var(--theme-accent-active-l),
    0.15
  );
}
.heading-h3-block.heading-color-colorful {
  --h3-color-bg: rgba(var(--h3-color-rgb), 0.15);
}
.heading-h3-block.heading-h3-block-contrast {
  --h3-color-bg: rgba(var(--h3-color-rgb));
}
.heading-h3-block.heading-h3-block-contrast :is(.HyperMD-header-3 .cm-header:not(.cm-formatting-header),
.markdown-rendered h3) {
  color: var(--text-on-accent);
  caret-color: currentColor;
}
.heading-h3-block :is(.HyperMD-header-3 .cm-header:not(.cm-formatting-header),
.markdown-rendered h3) {
  background-color: var(--h3-color-bg);
  padding: var(--size-4-1) 0.6rem;
  border-radius: var(--size-2-3);
  -webkit-box-decoration-break: clone;
}
.heading-h3-block :is(.HyperMD-header-3 .cm-header:not(.cm-formatting-header),
.markdown-rendered h3)::selection {
  color: var(--h3-color);
  background-color: var(--background-secondary);
}
.heading-h3-block .markdown-rendered h3 {
  width: fit-content;
  line-height: 1.2;
  --heading-spacing: calc(var(--h2-line-height) - 1.2 * var(--h3-size));
}
.heading-h3-block:not(.heading-indicator-disable) .markdown-rendered h3::before {
  top: -0.3rem;
  line-height: var(--h3-line-height);
}

.heading-h4-block.heading-color-base {
  --h4-color-bg: var(--color-base-30);
}
.heading-h4-block.heading-color-accent {
  --h4-color-bg: hsla(
    var(--theme-accent-active-h),
    var(--theme-accent-active-s),
    var(--theme-accent-active-l),
    0.15
  );
}
.heading-h4-block.heading-color-colorful {
  --h4-color-bg: rgba(var(--h4-color-rgb), 0.15);
}
.heading-h4-block.heading-h4-block-contrast {
  --h4-color-bg: rgba(var(--h4-color-rgb));
}
.heading-h4-block.heading-h4-block-contrast :is(.HyperMD-header-4 .cm-header:not(.cm-formatting-header),
.markdown-rendered h4) {
  color: var(--text-on-accent);
  caret-color: currentColor;
}
.heading-h4-block :is(.HyperMD-header-4 .cm-header:not(.cm-formatting-header),
.markdown-rendered h4) {
  background-color: var(--h4-color-bg);
  padding: var(--size-4-1) 0.6rem;
  border-radius: var(--size-2-3);
  -webkit-box-decoration-break: clone;
}
.heading-h4-block :is(.HyperMD-header-4 .cm-header:not(.cm-formatting-header),
.markdown-rendered h4)::selection {
  color: var(--h4-color);
  background-color: var(--background-secondary);
}
.heading-h4-block .markdown-rendered h4 {
  width: fit-content;
  line-height: 1.2;
  --heading-spacing: calc(var(--h2-line-height) - 1.2 * var(--h4-size));
}
.heading-h4-block:not(.heading-indicator-disable) .markdown-rendered h4::before {
  top: -0.3rem;
  line-height: var(--h4-line-height);
}

.heading-h5-block.heading-color-base {
  --h5-color-bg: var(--color-base-30);
}
.heading-h5-block.heading-color-accent {
  --h5-color-bg: hsla(
    var(--theme-accent-active-h),
    var(--theme-accent-active-s),
    var(--theme-accent-active-l),
    0.15
  );
}
.heading-h5-block.heading-color-colorful {
  --h5-color-bg: rgba(var(--h5-color-rgb), 0.15);
}
.heading-h5-block.heading-h5-block-contrast {
  --h5-color-bg: rgba(var(--h5-color-rgb));
}
.heading-h5-block.heading-h5-block-contrast :is(.HyperMD-header-5 .cm-header:not(.cm-formatting-header),
.markdown-rendered h5) {
  color: var(--text-on-accent);
  caret-color: currentColor;
}
.heading-h5-block :is(.HyperMD-header-5 .cm-header:not(.cm-formatting-header),
.markdown-rendered h5) {
  background-color: var(--h5-color-bg);
  padding: var(--size-4-1) 0.6rem;
  border-radius: var(--size-2-3);
  -webkit-box-decoration-break: clone;
}
.heading-h5-block :is(.HyperMD-header-5 .cm-header:not(.cm-formatting-header),
.markdown-rendered h5)::selection {
  color: var(--h5-color);
  background-color: var(--background-secondary);
}
.heading-h5-block .markdown-rendered h5 {
  width: fit-content;
  line-height: 1.2;
  --heading-spacing: calc(var(--h2-line-height) - 1.2 * var(--h5-size));
}
.heading-h5-block:not(.heading-indicator-disable) .markdown-rendered h5::before {
  top: -0.3rem;
  line-height: var(--h5-line-height);
}

.heading-h6-block.heading-color-base {
  --h6-color-bg: var(--color-base-30);
}
.heading-h6-block.heading-color-accent {
  --h6-color-bg: hsla(
    var(--theme-accent-active-h),
    var(--theme-accent-active-s),
    var(--theme-accent-active-l),
    0.15
  );
}
.heading-h6-block.heading-color-colorful {
  --h6-color-bg: rgba(var(--h6-color-rgb), 0.15);
}
.heading-h6-block.heading-h6-block-contrast {
  --h6-color-bg: rgba(var(--h6-color-rgb));
}
.heading-h6-block.heading-h6-block-contrast :is(.HyperMD-header-6 .cm-header:not(.cm-formatting-header),
.markdown-rendered h6) {
  color: var(--text-on-accent);
  caret-color: currentColor;
}
.heading-h6-block :is(.HyperMD-header-6 .cm-header:not(.cm-formatting-header),
.markdown-rendered h6) {
  background-color: var(--h6-color-bg);
  padding: var(--size-4-1) 0.6rem;
  border-radius: var(--size-2-3);
  -webkit-box-decoration-break: clone;
}
.heading-h6-block :is(.HyperMD-header-6 .cm-header:not(.cm-formatting-header),
.markdown-rendered h6)::selection {
  color: var(--h6-color);
  background-color: var(--background-secondary);
}
.heading-h6-block .markdown-rendered h6 {
  width: fit-content;
  line-height: 1.2;
  --heading-spacing: calc(var(--h2-line-height) - 1.2 * var(--h6-size));
}
.heading-h6-block:not(.heading-indicator-disable) .markdown-rendered h6::before {
  top: -0.3rem;
  line-height: var(--h6-line-height);
}

/* #endregion heading */
/* #region image */
body.theme-dark.image-dark-hover img {
  filter: brightness(0.7);
  transition: filter var(--animation);
}
body.theme-dark.image-dark-hover img:hover {
  filter: brightness(0.85);
}

img {
  cursor: pointer;
}

:is(div, span) > img {
  border-radius: var(--radius-m);
}

/* hint text, reference from https://github.com/chrisgrieser/shimmering-focus */
.image-alt .image-embed[alt] {
  padding: var(--size-4-1) 0;
}
.image-alt .image-embed[alt]::after {
  display: block;
  text-align: center;
}
.image-alt .image-embed[alt]:not([alt$=".png"],
[alt$=".jpg"],
[alt$=".jpeg"],
[alt$=".svg"],
[alt$=".webp"],
[alt$=".gif"],
[alt$=".tiff"],
[alt$=".bmp"],
[alt$=".tiff"])::after {
  content: attr(alt);
  font-size: var(--font-smaller);
  color: var(--text-faint);
}
.image-alt .view-content img:not(.emoji) {
  display: block;
  margin-right: auto;
  margin-left: auto;
}

/* Reference: https://github.com/aaaaalexis/obsidian-cupertino/blob/a7b045b1267728f6535fc8ed1b0925f8b49bc05d/src/features/image-zoom.scss#L1-L53 */
body.image-zoom:not(.is-mobile) .workspace-leaf-content[data-type=markdown] :is(.image-embed:not(.canvas-node-content),
img[referrerpolicy=no-referrer],
.cm-content > img) {
  cursor: zoom-in;
}
body.image-zoom:not(.is-mobile) .markdown-preview-view .image-embed:not(.canvas-node-content):active img,
body.image-zoom:not(.is-mobile) .markdown-preview-view img[referrerpolicy=no-referrer]:active {
  position: fixed;
  z-index: 1000;
  cursor: zoom-out;
  inset: 0;
  background-color: var(--background-primary);
  width: 100%;
  height: 100%;
  max-height: unset;
  object-fit: contain;
}
body.image-zoom:not(.is-mobile) .markdown-source-view .image-embed:not(.canvas-node-content):active,
body.image-zoom:not(.is-mobile) .markdown-source-view .cm-content > img:active {
  position: fixed;
  z-index: 1000;
  cursor: zoom-out;
  inset: var(--header-height) 0 0;
  background-color: var(--background-primary);
}
body.image-zoom:not(.is-mobile) .markdown-source-view .image-embed:not(.canvas-node-content):active {
  display: flex;
  justify-content: center;
}
body.image-zoom:not(.is-mobile) .markdown-source-view .image-embed:not(.canvas-node-content):active img {
  background-color: transparent;
  width: 100%;
  height: auto;
  max-height: unset;
  object-fit: contain;
}
body.image-zoom:not(.is-mobile) .markdown-source-view .cm-content > img:active {
  width: 100%;
  height: calc(100% - var(--header-height));
  max-height: unset;
  object-fit: contain;
}

/* #endregion image */
/* #region canvas */
.canvas-wrapper .canvas-node-container {
  border-radius: var(--radius-m);
  background-color: hsl(var(--background-primary-hsl));
}
.canvas-wrapper .canvas-node:is(.is-selected, .is-focused) .canvas-node-container {
  --shadow-border-accent: 0 0 0 2px var(--accent-active);
}
.canvas-wrapper .canvas-card-menu {
  padding: var(--size-2-1);
  border-radius: var(--radius-m);
  bottom: var(--size-4-6);
}
.canvas-wrapper .canvas-card-menu .canvas-card-menu-button {
  --icon-size: var(--icon-l);
}
.canvas-wrapper :is(.canvas-menu, .canvas-controls-group) {
  border-radius: var(--radius-m);
}
.canvas-wrapper .canvas-menu {
  padding: var(--size-4-1);
}
.canvas-wrapper .canvas-menu .clickable-icon {
  padding: var(--size-2-3);
}
.canvas-wrapper .canvas-control-group {
  box-shadow: none;
  border-radius: var(--radius-m);
  background-color: hsl(var(--background-secondary-hsl));
}
.canvas-wrapper .canvas-control button {
  transition: none;
  margin: var(--size-2-1);
  padding: var(--size-2-3);
  border-radius: var(--radius-s);
  border-bottom: none;
}
.canvas-wrapper .canvas-control button:not([disabled]):hover {
  background-color: var(--background-modifier-hover) !important;
}

body.canvas-control-hide .canvas-control-group {
  opacity: 0;
  transition: var(--animation);
  transition-delay: var(--animation-delay);
}
body.canvas-control-hide .canvas-control-group:hover {
  transition-delay: 0s;
  opacity: 1;
}

body.canvas-center .canvas-node-content.markdown-embed > .markdown-embed-content > .markdown-preview-view > .markdown-preview-sizer {
  text-align: center;
}

/* #endregion canvas */
/* #region pdf */
.theme-dark.pdf-dark-hover .pdfViewer {
  opacity: 0.7;
  transition: opacity var(--animation);
}
.theme-dark.pdf-dark-hover .pdfViewer:hover {
  opacity: 0.85;
}
.theme-dark.pdf-dark-invert .pdfViewer .page {
  filter: invert(1) contrast(0.8);
}

@media print {
  body.pdf-export-transparent {
    --background-primary: transparent;
  }
  body.pdf-export-page-break :is(h1, h2, h3, h4, h5, h6) {
    page-break-after: avoid;
  }
  body.pdf-export-page-break :is(table, figure, pre, .callout p) {
    page-break-inside: avoid;
  }
  body.pdf-export-page-break h1 {
    page-break-before: always;
  }
  body.pdf-export-standard p {
    margin: 0 0 12pt 0 !important;
    orphans: 3;
    widows: 3;
  }
  body.pdf-export-standard :is(ul, ol) {
    margin: 12pt 0 12pt 1.5cm !important;
    padding: 0 !important;
  }
  body.pdf-export-standard li {
    margin: 3pt 0 !important;
    padding: 0 !important;
  }
  pre::before {
    right: var(--size-4-2) !important;
  }
  pre code {
    white-space: pre-wrap !important;
    tab-size: 4;
  }
  body.pdf-export-default-hr hr {
    background-image: none !important;
    border-width: var(--size-2-1) !important;
  }
  body.pdf-export-default-hr hr::after {
    content: none !important;
  }
  body.list-enable {
    --list-marker-color-alt-render: var(--list-marker-color-alt);
  }
}
/* #endregion pdf */
/* #region property */
.metadata-container {
  margin-block-end: var(--size-4-2);
  transition: var(--animation);
  --metadata-property-background-hover: var(--background-primary-alt);
  --metadata-label-background-active: var(--background-primary);
  --metadata-input-background-active: var(--background-primary);
  --pill-radius: var(--size-4-1);
  --pill-focus-width: calc(100% + var(--size-4-2));
}
.prop-outline .metadata-container {
  transform: none;
  --metadata-padding: var(--radius-m);
  --metadata-background: var(--background-primary-alt);
  --metadata-border-width: 1px;
  --metadata-border-radius: var(--radius-m);
}
.prop-hide-preview .metadata-container {
  --metadata-display-reading: none;
}
.metadata-container .metadata-add-button {
  padding: var(--size-4-1);
  margin-top: var(--size-4-2);
  gap: var(--size-2-3);
  transition: background-color var(--animation-fast);
}
.metadata-container [data-property-key=tag] .lucide-list {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M13.172 2a2 2 0 0 1 1.414.586l6.71 6.71a2.4 2.4 0 0 1 0 3.408l-4.592 4.592a2.4 2.4 0 0 1-3.408 0l-6.71-6.71A2 2 0 0 1 6 9.172V3a1 1 0 0 1 1-1zM2 7v6.172a2 2 0 0 0 .586 1.414l6.71 6.71a2.4 2.4 0 0 0 3.191.193'/><circle cx='10.5' cy='6.5' r='.5' fill='currentColor'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.metadata-container [data-property-key=tag] .lucide-list path {
  display: none;
}
.metadata-container [data-property-key=alias] .lucide-text {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='m15 17l5-5l-5-5'/><path d='M4 18v-2a4 4 0 0 1 4-4h12'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.metadata-container [data-property-key=alias] .lucide-text path {
  display: none;
}
.metadata-container [data-property-key=cssclasses] .lucide-list {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><circle cx='9' cy='12' r='3'/><rect width='20' height='14' x='2' y='5' rx='7'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.metadata-container [data-property-key=cssclasses] .lucide-list path {
  display: none;
}
.metadata-container [data-property-key=markmap] .lucide-file-question {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><circle cx='12' cy='18' r='3'/><circle cx='6' cy='6' r='3'/><circle cx='18' cy='6' r='3'/><path d='M18 9v2c0 .6-.4 1-1 1H7c-.6 0-1-.4-1-1V9m6 3v3'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.metadata-container [data-property-key=markmap] .lucide-file-question path {
  display: none;
}
.metadata-container [data-property-key=title] .lucide-text {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 12h12M6 20V4m12 16V4'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.metadata-container [data-property-key=title] .lucide-text path {
  display: none;
}
.metadata-container [data-property-key=author] .lucide-text {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><circle cx='12' cy='8' r='5'/><path d='M20 21a8 8 0 0 0-16 0'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.metadata-container [data-property-key=author] .lucide-text path {
  display: none;
}
.metadata-container [data-property-key=source] .lucide-text {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71'/><path d='M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.metadata-container [data-property-key=source] .lucide-text path {
  display: none;
}
.metadata-container :is([data-property-key=published], [data-property-key*=date]) .lucide-text {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M8 2v4m8-4v4'/><rect width='18' height='18' x='3' y='4' rx='2'/><path d='M3 10h18'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.metadata-container :is([data-property-key=published], [data-property-key*=date]) .lucide-text path {
  display: none;
}

.metadata-property-icon,
input.metadata-property-key-input,
.multi-select-pill,
.multi-select-input {
  line-height: calc(var(--line-height-normal) / 1.5);
  height: calc(var(--line-height-normal) / 1.5);
}

.metadata-property-key {
  padding-block: var(--size-2-1);
}

.metadata-property:not([data-property-key=tags]) .metadata-property-key-input {
  padding-block: var(--size-2-3);
}

.multi-select-pill {
  transition: var(--animation);
}

.metadata-property[data-property-key=cssclasses] {
  --pill-padding-x: 0.4em;
}
.metadata-property[data-property-key=cssclasses] .multi-select-pill {
  line-height: 1;
}

.multi-select-pill-remove-button {
  cursor: pointer;
}

.multi-select-pill-content {
  line-height: 1.6;
}

/* #endregion property */
/* #endregion [editor] */
/* #region [plugins] */
/* #region better-command-palette */
.better-command-palette {
  --prompt-text: "Better Command Palette";
}
.better-command-palette .prompt-instruction {
  display: none;
}
.better-command-palette .prompt-instruction-command {
  font-family: -apple-system, BlinkMacSystemFont, var(--font-monospace);
}
.better-command-palette .prompt-instructions::before {
  content: var(var(--prompt-text));
  position: absolute;
  left: var(--size-4-5);
  color: var(--text-faint);
}
.better-command-palette .prompt-instructions:hover {
  --prompt-text: none;
}
.better-command-palette .prompt-instructions:hover .prompt-instruction {
  display: inline-block;
}
.better-command-palette .suggestion-item .suggestion-hotkey {
  padding: 0 var(--size-4-2);
  font-family: -apple-system, BlinkMacSystemFont, var(--font-monospace);
}
.better-command-palette[palette-mode=commands] {
  --action: var(--action-text-command, "Command");
}
.better-command-palette[palette-mode=commands] .prompt-instructions :first-child {
  display: inline-block;
}
.better-command-palette[palette-mode=files] {
  --action: var(--action-text-file, "File");
}
.better-command-palette[palette-mode=files] .prompt-instructions :first-child,
.better-command-palette[palette-mode=files] .prompt-instructions :nth-child(2),
.better-command-palette[palette-mode=files] .prompt-instructions :nth-child(3) {
  display: inline-block;
}
.better-command-palette[palette-mode=tags] {
  --action: var(--action-text-tag, "Tag");
}
.better-command-palette[palette-mode=tags] .prompt-instructions :first-child {
  display: inline-block;
}
.better-command-palette .better-command-palette-title {
  visibility: hidden;
}
.better-command-palette .better-command-palette-title::before {
  visibility: visible;
  content: var(--action);
  position: absolute;
  font-size: var(--font-ui-small);
  left: var(--size-4-5);
  top: var(--size-4-4);
  background-color: var(--background-secondary);
  color: var(--text-accent);
  border: var(--text-accent) 1px solid;
  border-radius: var(--radius-s);
  padding: 0 var(--size-4-1);
}
.better-command-palette .search-input-clear-button {
  display: none;
}
.better-command-palette .hidden-items-header {
  display: none;
}
.better-command-palette input.prompt-input {
  padding: var(--size-4-6) var(--size-4-5) !important;
}

html[lang=zh] {
  --action-text-command: "命令";
  --action-text-file: "文件";
  --action-text-tag: "标签";
}

/* #endregion better-command-palette */
/* #region calender */
body.calendar-swap-year-month #calendar-container .nav {
  padding-left: var(--size-4-1);
}
body.calendar-swap-year-month #calendar-container .nav .title {
  display: flex;
  flex-direction: row-reverse;
  font-weight: normal;
  font-size: 1.2rem;
}
body.calendar-swap-year-month #calendar-container .nav .title .year {
  color: var(--text-normal);
  letter-spacing: 0.1rem;
  display: flex;
  align-items: center;
}
body.calendar-swap-year-month #calendar-container .nav .title .year::after {
  content: var(--setting-calendar-year-suffix, "年");
  margin-right: var(--size-2-1);
  margin-left: var(--size-2-1);
}
body.calendar-swap-year-month #calendar-container .nav .title .month {
  height: var(--size-4-6);
  line-height: var(--size-4-6);
  letter-spacing: 0.1rem;
  font-weight: 550;
  color: var(--accent-active);
}

#calendar-container {
  --color-text-today: var(--text-on-accent);
  --color-text-weeknum: var(--accent-active);
}
#calendar-container thead {
  border-bottom: var(--size-2-1) solid var(--accent-active);
}
#calendar-container th {
  padding: 2px 0 4px;
  font-weight: 550;
  letter-spacing: 0.1em;
}
#calendar-container .nav {
  padding: 0;
  margin-bottom: var(--size-4-3);
  padding-left: var(--size-4-1);
  justify-content: space-around;
}
#calendar-container .nav .right-nav {
  margin-left: unset;
}
#calendar-container .day {
  border: 1px solid transparent;
}
#calendar-container .day:hover {
  border-color: var(--accent-inactive);
}
#calendar-container .day.today:hover {
  border-color: var(--text-on-accent);
}
#calendar-container .day:active {
  background-color: var(--accent-inactive);
}
#calendar-container .active {
  background-color: var(--accent-inactive);
  color: var(--text-normal);
}
#calendar-container .today {
  --color-dot: var(--text-on-accent);
  color: var(--text-on-accent);
  background-color: var(--accent-active-bg);
}
#calendar-container .reset-button {
  white-space: nowrap;
}
#calendar-container .title {
  line-height: 1;
  font-size: 1.4rem;
  white-space: nowrap;
}
#calendar-container .dot-container {
  translate: 0 calc(-1 * var(--size-2-1));
}

.calendar-end-1-2 #calendar-container tbody tr td:is(:nth-child(1), :nth-child(2)) {
  background-color: hsla(var(--color-accent-hsl), 0.1);
}

.calendar-end-2-3 #calendar-container tbody tr td:is(:nth-child(2), :nth-child(3)) {
  background-color: hsla(var(--color-accent-hsl), 0.1);
}

.calendar-end-3-4 #calendar-container tbody tr td:is(:nth-child(3), :nth-child(4)) {
  background-color: hsla(var(--color-accent-hsl), 0.1);
}

.calendar-end-4-5 #calendar-container tbody tr td:is(:nth-child(4), :nth-child(5)) {
  background-color: hsla(var(--color-accent-hsl), 0.1);
}

.calendar-end-5-6 #calendar-container tbody tr td:is(:nth-child(5), :nth-child(6)) {
  background-color: hsla(var(--color-accent-hsl), 0.1);
}

.calendar-end-6-7 #calendar-container tbody tr td:is(:nth-child(6), :nth-child(7)) {
  background-color: hsla(var(--color-accent-hsl), 0.1);
}

.calendar-end-7-1 #calendar-container tbody tr td:is(:nth-child(7), :nth-child(1)) {
  background-color: hsla(var(--color-accent-hsl), 0.1);
}

.workspace-leaf-content[data-type=calendar] .view-content {
  padding-inline: var(--size-4-1);
  padding-block: 0;
}

body #calendar-container {
  max-width: var(--setting-calendar-max-width, 500px);
  margin-inline: auto;
}
body #calendar-container .day {
  padding: var(--size-2-1) var(--size-4-1) !important;
  border: none;
}

/* #endregion calender */
/* #region git */
.workspace-leaf-content[data-type=diff-view] .d2h-diff-table {
  font-family: var(--font-monospace);
}

.d2h-ins {
  background-color: rgba(var(--color-green-rgb), 0.15) !important;
}

.d2h-del {
  background-color: rgba(var(--color-red-rgb), 0.15) !important;
}

.git-tools .type[data-type=D] {
  color: var(--color-red);
}
.git-tools .type[data-type=M] {
  color: var(--color-yellow);
}
.git-tools .type[data-type=U] {
  color: var(--color-blue);
}
.git-tools .type[data-type=A] {
  color: var(--color-green);
}
.git-tools .type[data-type=R] {
  color: var(--color-cyan);
}

/* #endregion git */
/* #region my-snippets */
.MySnippets-statusbar-menu .ms-reload {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M3 12a9 9 0 0 1 9-9a9.75 9.75 0 0 1 6.74 2.74L21 8'/><path d='M21 3v5h-5m5 4a9 9 0 0 1-9 9a9.75 9.75 0 0 1-6.74-2.74L3 16'/><path d='M8 16H3v5'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.MySnippets-statusbar-menu .ms-reload path {
  display: none;
}
.MySnippets-statusbar-menu .ms-folder {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2ZM2 10h20'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.MySnippets-statusbar-menu .ms-folder path {
  display: none;
}
.MySnippets-statusbar-menu .ms-snippet {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m18 16l4-4l-4-4M6 8l-4 4l4 4m8.5-12l-5 16'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.MySnippets-statusbar-menu .ms-snippet path {
  display: none;
}
.MySnippets-statusbar-menu .ms-add {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/><path d='M14 2v4a2 2 0 0 0 2 2h4M9 15h6m-3 3v-6'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
.MySnippets-statusbar-menu .ms-add path {
  display: none;
}
.MySnippets-statusbar-menu :is(.MySnippetsButton, .MS-OpenSnippet) {
  font-size: 12px;
  background-color: var(--interactive-normal);
  padding: var(--size-4-1) var(--size-4-3);
}
.MySnippets-statusbar-menu :is(.MySnippetsButton, .MS-OpenSnippet):hover {
  background-color: var(--interactive-hover);
}
.MySnippets-statusbar-menu :is(.MySnippetsButton, .MS-OpenSnippet) path {
  fill: currentColor;
}

/* #endregion my-snippets */
/* #region recent-files */
.workspace-leaf-content[data-type=recent-files] .recent-files-file-delete {
  margin-inline-end: var(--size-4-1);
}
.workspace-leaf-content[data-type=recent-files] .is-active .recent-files-file-delete {
  color: var(--text-on-accent);
}

/* #endregion recent-files */
/* #region shiki */
.code-mac-style-header .cm-preview-code-block[class*=cm-lang]:not(.cm-lang-query):not(.cm-lang-base) .edit-block-button {
  color: #ddd;
}

/* #endregion shiki */
/* #region settings-search */
body:not(.is-mobile).modal-header.modal-header-search .settings-search-container {
  padding: 0;
}
body:not(.is-mobile).modal-header.modal-header-search .settings-search-container .settings-search-input {
  position: absolute;
  top: var(--size-2-3);
  width: calc(clamp(180px, var(--modal-width) / 4, 250px) - var(--size-4-5));
}

.is-mobile .settings-search-container .settings-search-input input {
  background-color: var(--bg-editor);
}

/* #endregion settings-search */
/* #region quiet-outline */
.quiet-outline .n-tree.n-tree--block-line .n-tree-node:not(.n-tree-node--disabled) {
  border-radius: var(--radius-s);
}
.quiet-outline .n-tree.n-tree--block-line .n-tree-node:not(.n-tree-node--disabled):hover {
  background-color: var(--nav-item-background-hover);
}
.quiet-outline .n-tree.n-tree--block-line .n-tree-node.located p {
  color: var(--accent-active);
}
.quiet-outline .n-input {
  --input-border-width-focus: 0;
}

/* #endregion quiet-outline */
/* #endregion [plugins] */
/* #region [workspace] */
/* #region document-search */
.obsidian-search-match-highlight {
  background-color: var(--background-secondary);
}

.search-suggest-item.mod-group {
  color: var(--text-accent);
}
.search-suggest-item.mod-group:not(:first-child) {
  padding-inline-start: var(--size-4-2);
}

.mod-active .document-search-container {
  background-color: transparent;
}

body.search-internal-enable .document-search-container {
  background-color: var(--background-secondary);
  position: absolute;
  top: var(--size-4-10);
  right: var(--size-4-4);
  border-radius: var(--radius-m);
  height: fit-content;
  border: 1px solid var(--background-modifier-border);
  box-shadow: var(--shadow-s);
  padding: var(--size-4-2) 0;
  margin: 0;
}
body.search-internal-enable .document-search-container :is(.document-replace, .document-search) {
  gap: var(--size-4-1);
}
body.search-internal-enable .document-search-container .search-input-container input:hover + .document-search-count {
  opacity: 0;
  pointer-events: none;
  cursor: none;
  transition: opacity var(--animation-fast);
}
body.search-internal-enable .document-search-container .search-input-container .document-search-count {
  letter-spacing: -0.5px;
  background-color: var(--background-secondary);
  height: calc(var(--input-height) - var(--size-2-3));
  line-height: calc(var(--input-height) - var(--size-2-3));
  padding-inline: var(--size-4-1);
  right: var(--size-4-1);
  border-radius: var(--radius-s);
  opacity: 1;
  transition: var(--animation-fast);
  transition-delay: 0.5s;
}
body.search-internal-enable .document-search-container .document-search-buttons .document-search-button {
  font-size: 0;
  background-color: transparent !important;
  color: var(--text-muted);
  cursor: var(--cursor);
  height: var(--input-height);
  width: var(--input-height);
  padding: var(--size-4-1);
  box-shadow: unset !important;
}
body.search-internal-enable .document-search-container .document-search-buttons .document-search-button:hover {
  background-color: var(--background-modifier-hover) !important;
  color: var(--text-normal);
}

.markdown-source-view,
.markdown-reading-view {
  container-type: inline-size;
}

body.search-remove-button .document-search-buttons > :last-child {
  display: none;
}

@container (max-width: 400px) {
  body.search-internal-enable .document-search-container {
    width: calc(100% - 2 * var(--size-4-3));
  }
  body.search-internal-enable .document-search-container :is(.document-search-input, .document-replace-input) {
    min-width: unset;
  }
}
/* #endregion document-search */
/* #region modal */
body {
  --modal-width: min(90vw, var(--modal-max-width));
  --modal-height: min(85vh, var(--modal-max-height));
  --menu-border-color: var(--background-modifier-border);
}

body:not(.is-phone) :is(.horizontal-tab-nav-item, .vertical-tab-nav-item).is-active {
  background-color: var(--nav-item-background-active) !important;
}

.clickable-icon {
  transition: var(--animation-fast);
  transition-property: opacity, background-color;
}

body:is(:not(.css-settings-manager), .modal-control-gradient) button.mod-cta {
  transition: box-shadow var(--animation);
  background: linear-gradient(to bottom, transparent -240%, var(--color-accent) 100%);
}
body:is(:not(.css-settings-manager), .modal-control-gradient) button.mod-cta:hover {
  background: linear-gradient(to bottom, transparent -240%, var(--color-accent-1) 100%);
}
body:is(:not(.css-settings-manager), .modal-control-gradient) button.mod-warning {
  transition: box-shadow var(--animation);
  background: linear-gradient(to bottom, transparent -240%, var(--background-modifier-error) 100%);
}
body:is(:not(.css-settings-manager), .modal-control-gradient) button.mod-warning:hover {
  background: linear-gradient(to bottom, transparent -240%, var(--background-modifier-error-hover) 100%);
}
body:is(:not(.css-settings-manager), .modal-control-gradient) .checkbox-container.is-enabled {
  background: linear-gradient(to bottom, transparent -200%, var(--accent-active) 100%);
}

.search-input-container input {
  padding-inline: var(--size-4-8) var(--size-4-1);
}

.checkbox-container {
  background-color: var(--color-base-25);
  --interactive-accent: var(--accent-active);
}
.theme-light .checkbox-container {
  --toggle-thumb-color: #fafafa;
}
.theme-dark .checkbox-container {
  --toggle-thumb-color: #e0e0e0;
}

.modal-toggle-square .checkbox-container {
  --toggle-border-width: var(--size-4-1);
  --toggle-thumb-width: calc(var(--input-height) / 2);
  --toggle-thumb-height: var(--toggle-thumb-width);
  --toggle-thumb-radius: calc(var(--toggle-thumb-width) / 3);
  --toggle-radius: calc(
    var(--toggle-s-thumb-radius) + var(--toggle-border-width) / 2
  );
  --toggle-s-border-width: var(--toggle-border-width);
  --toggle-s-thumb-radius: var(--toggle-thumb-radius);
  --toggle-s-thumb-width: var(--toggle-thumb-width);
  --toggle-s-thumb-height: var(--toggle-thumb-height);
}

body:not(.is-mobile) {
  --slider-track-background: var(--accent-inactive);
}
body:not(.is-mobile).modal-slider input[type=range]:focus {
  --slider-thumb-ring-factor: 5.2;
}
body:not(.is-mobile).modal-slider input[type=range]::-webkit-slider-thumb {
  box-shadow: inset 0 0 0 calc(var(--slider-thumb-width) / var(--slider-thumb-ring-factor, 4) * 0.9) var(--color-base-20), inset 0 0 0 calc(var(--slider-thumb-width) / 2) var(--accent-active), var(--input-shadow);
  transition: box-shadow var(--animation);
  border-width: 0;
}
body:not(.is-mobile).modal-slider input[type=range]::-webkit-slider-thumb:is(:hover, :active, :focus) {
  --slider-thumb-ring-factor: 5.2;
}
body:not(.is-mobile):is(.modal-toggle-floating, .modal-toggle-thin) .checkbox-container {
  --toggle-target-width: var(--toggle-width);
  --toggle-radius: var(--radius-m);
  height: var(--size-4-4);
  transition: var(--animation);
  border: var(--toggle-border-width) solid var(--text-faint);
}
body:not(.is-mobile):is(.modal-toggle-floating, .modal-toggle-thin) .checkbox-container.mod-small {
  --toggle-target-width: var(--toggle-s-width);
}
body:not(.is-mobile):is(.modal-toggle-floating, .modal-toggle-thin) .checkbox-container:focus-within {
  outline: none;
  box-shadow: inset 0 6px 20px rgba(0, 0, 0, 0.14), inset 0 0 1px rgba(0, 0, 0, 0.28);
}
body:not(.is-mobile):is(.modal-toggle-floating, .modal-toggle-thin) .checkbox-container input[type=checkbox] {
  opacity: 0;
}
body:not(.is-mobile).modal-toggle-floating .checkbox-container::after {
  left: 0;
  height: calc(var(--toggle-target-width) / 3);
  width: calc(var(--toggle-target-width) / 3);
  bottom: 30%;
  border-radius: calc(var(--toggle-target-width) / 2);
  border: var(--toggle-border-width) solid var(--text-faint);
  margin: 0;
  transition: var(--animation);
}
:is(body:not(.is-mobile).modal-toggle-floating .checkbox-container:hover, body:not(.is-mobile).modal-toggle-floating .checkbox-container:focus-within)::after {
  bottom: 10%;
}
body:not(.is-mobile).modal-toggle-floating .checkbox-container.is-enabled {
  border-color: var(--accent-active);
  background: var(--accent-inactive);
}
body:not(.is-mobile).modal-toggle-floating .checkbox-container.is-enabled::after {
  border-color: var(--accent-active);
  transform: none;
  left: calc(100% - var(--toggle-target-width) / 3 - 3 * var(--toggle-border-width));
}
body:not(.is-mobile).modal-toggle-thin .checkbox-container::after {
  left: var(--toggle-border-width);
  height: calc(var(--toggle-target-width) / 4 + var(--toggle-border-width));
  bottom: 50%;
  border-radius: calc(var(--toggle-target-width) / 8 + var(--toggle-border-width)) calc(var(--toggle-target-width) / 8 + var(--toggle-border-width)) 0 0;
  border: var(--toggle-border-width) solid var(--text-faint);
  width: calc(var(--toggle-target-width) / 8 + var(--toggle-border-width));
  margin: 0;
  transition: var(--animation);
}
:is(body:not(.is-mobile).modal-toggle-thin .checkbox-container:hover, body:not(.is-mobile).modal-toggle-thin .checkbox-container:focus-within)::after {
  height: calc(var(--toggle-target-width) / 6 + var(--toggle-border-width));
}
body:not(.is-mobile).modal-toggle-thin .checkbox-container:active::after {
  width: calc(100% - var(--toggle-border-width) * 6);
}
body:not(.is-mobile).modal-toggle-thin .checkbox-container.is-enabled {
  border-color: var(--accent-active);
  background: var(--accent-inactive);
}
body:not(.is-mobile).modal-toggle-thin .checkbox-container.is-enabled::before {
  background-color: var(--accent-active-bg);
}
body:not(.is-mobile).modal-toggle-thin .checkbox-container.is-enabled::after {
  border-color: var(--accent-active);
  transform: none;
  left: calc(80% - var(--toggle-border-width) * 4);
}
body:not(.is-mobile).modal-toggle-thin .checkbox-container.is-enabled:active::after {
  left: calc(2 * var(--toggle-border-width));
}

body.modal-header:not(.is-mobile) .modal-close-button {
  transition: background-color var(--animation);
  z-index: calc(var(--layer-modal) + 1);
  top: var(--size-4-3);
  inset-inline-end: var(--size-4-3);
}
body.modal-header:not(.is-mobile) .modal-container {
  --modal-header-height: var(--size-4-12);
  --top-search-right: var(--size-4-12);
}
body.modal-header:not(.is-mobile) .modal-container .mod-settings {
  container-type: inline-size;
}
body.modal-header:not(.is-mobile) .modal-container .mod-settings::before {
  content: var(--setting-modal-header-title, "Maple 1.1.6");
  position: absolute;
  left: 50%;
  top: var(--size-4-6);
  transform: translate(-50%, -50%);
  font-size: calc(1.4 * var(--size-4-4));
  font-weight: 550;
  color: var(--setting-color-logo, var(--text-accent));
}
@container (max-width:750px) {
  body.modal-header:not(.is-mobile) .modal-container .mod-settings::before {
    opacity: 0;
  }
}
body.modal-header:not(.is-mobile) .mod-settings .modal-content {
  background-color: var(--titlebar-background);
}
body.modal-header:not(.is-mobile) .mod-settings .modal-content .vertical-tab-header {
  background-color: hsl(var(--background-secondary-hsl));
  border-top: 1px solid var(--divider-color);
  margin-top: var(--modal-header-height);
  padding-top: 0;
}
body.modal-header:not(.is-mobile) .mod-settings .modal-content .vertical-tab-content-container {
  padding-top: var(--modal-header-height);
  position: relative;
}
body.modal-header:not(.is-mobile) .mod-settings .modal-content .vertical-tab-content-container .vertical-tab-content {
  position: unset !important;
  background-color: var(--background-primary);
  border-top: 1px solid var(--divider-color);
  padding-top: var(--size-4-6);
  padding-right: var(--size-4-8);
}
body.modal-header:not(.is-mobile) .mod-settings .modal-content .vertical-tab-content-container .vertical-tab-content h2 {
  font-size: var(--h2-size);
  font-weight: var(--h2-weight);
}
body.modal-header:not(.is-mobile).modal-header-search .mod-settings .modal-content :is(.plugin-list-plugins,
.vertical-tab-content:is(:has(> .installed-plugins-container),
:has(> .hotkey-list-container))) > .setting-item:has(input) {
  position: absolute;
  padding: 0;
  top: 0;
  right: var(--top-search-right);
  border: none;
}
body.modal-header:not(.is-mobile).modal-header-search .mod-settings .modal-content :is(.plugin-list-plugins,
.vertical-tab-content:is(:has(> .installed-plugins-container),
:has(> .hotkey-list-container))) > .setting-item:has(input) .setting-item-info {
  visibility: hidden;
}
body.modal-header:not(.is-mobile).modal-header-search .mod-settings .modal-content .plugin-list-plugins .setting-item-heading {
  margin: 0;
}
body.modal-header:not(.is-mobile).modal-header-search .mod-settings .modal-content .setting-filter-container {
  margin-bottom: var(--size-4-1);
}
body.modal-header:not(.is-mobile).modal-header-search .mod-settings .modal-content .setting-filter-container .hotkey-filter {
  margin-bottom: var(--size-4-3);
}

select,
.dropdown,
button {
  transition: var(--animation);
  transition-property: background-color, box-shadow;
}

:is(select, .combobox-button, .dropdown):focus-visible {
  outline: 0;
  box-shadow: 0 0 0 3px var(--background-modifier-border-focus);
}

button[disabled],
button[aria-disabled=true],
button[disabled=true] {
  color: var(--text-faint);
}

.theme-light {
  --select-bg-img: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='%23222222' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
}

.theme-dark {
  /* current color seems to be invalid for SVG in background-image */
  --select-bg-img: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='%23DDDDDD' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
}

:is(select, .dropdown) {
  background-size: calc(1.2 * var(--size-4-4));
  background-position: right calc(0.4 * var(--size-4-4)) top 56%, 0 0;
  background-image: var(--select-bg-img) !important;
}

.flair.mod-pop {
  --flair-background: var(--background-modifier-hover);
  --flair-color: var(--text-accent);
}

body:not(.is-phone) .modal-container .is-loading {
  position: initial;
}
body:not(.is-phone) .modal-container :is(.mod-community-plugin, .mod-community-theme) .modal-sidebar .setting-item:first-child {
  max-width: var(--modal-community-sidebar-width);
  margin-bottom: var(--size-4-1);
}
body:not(.is-phone) .modal-container :is(.mod-community-plugin, .mod-community-theme) .modal-header {
  display: inline-block;
  position: absolute;
  top: var(--size-4-3);
  inset-inline-start: var(--size-4-4);
}
body:not(.is-phone) .modal-container .community-item {
  --interactive-accent: var(--accent-active-bg);
  transition: border-color var(--animation);
}
body:not(.is-phone) .modal-container .modal-sidebar:not(:has(+ .community-modal-details)) .community-modal-controls {
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  justify-content: flex-start;
  height: calc(var(--font-ui-small) + var(--size-4-3) * 2);
  padding-inline-end: var(--size-4-9);
}
body:not(.is-phone) .modal-container .community-modal-search-summary {
  display: none;
}
body:not(.is-phone) .modal-container .community-modal-controls button.clickable-icon {
  padding: var(--size-2-1) var(--size-2-2);
  position: absolute;
  margin-inline-end: var(--size-4-1);
}
body:not(.is-phone) .modal-container .community-modal-controls .search-input-container .search-input-clear-button {
  right: calc(var(--size-4-6) + var(--size-2-1));
}
body:not(.is-phone) .modal-container .community-modal-controls .search-input-container input {
  padding-inline-end: var(--size-4-8);
  transition: var(--animation);
  transition-property: border-color, background-color, box-shadow;
}
body:not(.is-phone) .modal-container .mod-settings .modal-content .setting-item-heading .setting-item-name {
  font-weight: 550;
  font-size: var(--font-ui-medium);
}

body.enable-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group {
  padding-bottom: 0;
}
body.enable-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group-title {
  color: var(--text-accent);
  font-size: var(--size-4-4);
}
body.enable-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group-title::before {
  content: "";
  display: inline-block;
  translate: 0 var(--size-2-1);
  margin-right: var(--size-4-1);
  -webkit-mask: var(--settings-icon) no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: inherit;
  width: var(--size-4-4);
  height: var(--size-4-4);
}
body.enable-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group:nth-last-of-type(3) > .vertical-tab-header-group-title::before {
  --settings-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M9.671 4.136a2.34 2.34 0 0 1 4.659 0a2.34 2.34 0 0 0 3.319 1.915a2.34 2.34 0 0 1 2.33 4.033a2.34 2.34 0 0 0 0 3.831a2.34 2.34 0 0 1-2.33 4.033a2.34 2.34 0 0 0-3.319 1.915a2.34 2.34 0 0 1-4.659 0a2.34 2.34 0 0 0-3.32-1.915a2.34 2.34 0 0 1-2.33-4.033a2.34 2.34 0 0 0 0-3.831A2.34 2.34 0 0 1 6.35 6.051a2.34 2.34 0 0 0 3.319-1.915'/><circle cx='12' cy='12' r='3'/></g></svg>");
}
body.enable-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group:nth-last-of-type(2) > .vertical-tab-header-group-title::before {
  --settings-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z'/><path d='m3.3 7l8.7 5l8.7-5M12 22V12'/></g></svg>");
}
body.enable-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group:nth-last-of-type(1) > .vertical-tab-header-group-title::before {
  --settings-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M18 21a8 8 0 0 0-16 0'/><circle cx='10' cy='8' r='5'/><path d='M22 20c0-3.37-2-6.5-4-8a5 5 0 0 0-.45-8.3'/></g></svg>");
}

:is(.menu, .modal-bg, .document-search-container, .suggestion-container) {
  animation: op var(--animation-slow);
}

:is(.prompt, .popover, .modal) {
  animation: op var(--animation-slow), slide-up var(--animation-slow);
  will-change: transform, opacity;
}

body:not(.is-phone) .modal-bg {
  opacity: 1 !important;
  background-color: hsla(var(--background-secondary-hsl), 0.6) !important;
}
body:not(.is-phone).enable-blur :is(.menu, .suggestion-container, .graph-control-section) {
  background-color: hsla(var(--background-secondary-hsl), 0.7) !important;
  backdrop-filter: blur(20px);
  will-change: backdrop-filter;
}
body:not(.is-phone).enable-blur .modal-bg {
  backdrop-filter: blur(6px);
  transform: translateZ(0);
}

.mod-search-suggestion .suggestion {
  background-color: transparent;
}

.prompt-input-container {
  border-bottom: var(--divider-width) solid var(--divider-color);
  margin-top: var(--size-4-2);
}
.prompt-input-container input {
  border: none !important;
  outline: none !important;
  background-color: transparent !important;
}

.prompt-results {
  padding: var(--size-4-2);
}

.prompt-instructions {
  padding-inline: var(--size-4-5);
  justify-content: flex-end;
  gap: var(--size-2-3) var(--size-4-3);
}

/* #endregion modal */
/* #region scrollbar */
@property --scrollbar-color {
  syntax: "<color>";
  inherits: true;
  initial-value: rgba(0, 0, 0, 0);
}
/* ! `overflow: overlay` is deprecated, Chrome >= 114 (Obsidian 1.4) is equal to `overflow: auto` */
/* !Chrome >= 121 no longer support `-webkit-scrollbar-*`, no effect currently */
/* usage of `@property`: https://stackoverflow.com/a/74050413/20058211 */
/* usage of `-webkit-text-fill-color`: https://stackoverflow.com/a/46304690/20058211 */
body.scrollbar-enable:not(.is-mobile) .mod-settings :is(.vertical-tab-content, .vertical-tab-header) {
  scrollbar-gutter: stable;
}
body.scrollbar-enable:not(.is-mobile).scrollbar-hover-accent {
  --setting-scrollbar-hover: hsla(var(--color-accent-hsl), 40%);
}
body.scrollbar-enable:not(.is-mobile).scrollbar-hover-expand ::-webkit-scrollbar-thumb:hover, body.scrollbar-enable:not(.is-mobile).scrollbar-hover-expand ::-webkit-scrollbar-thumb:active {
  border-width: var(--size-2-1) !important;
}
body.scrollbar-enable:not(.is-mobile) ::-webkit-scrollbar {
  width: 0.8rem !important;
  height: 0.8rem !important;
  background-color: transparent !important;
}
body.scrollbar-enable:not(.is-mobile) ::-webkit-scrollbar-track {
  background-color: transparent !important;
  box-shadow: none !important;
}
body.scrollbar-enable:not(.is-mobile) ::-webkit-scrollbar-thumb {
  background-clip: padding-box;
  border-radius: 0.4rem !important;
  border: 0.2rem solid transparent !important;
  background-color: var(--scrollbar-color) !important;
}
body.scrollbar-enable:not(.is-mobile) ::-webkit-scrollbar-thumb:hover {
  --scrollbar-color: var(--setting-scrollbar-hover);
}
body.scrollbar-enable:not(.is-mobile) ::-webkit-scrollbar-thumb:active {
  --scrollbar-color: hsla(var(--color-accent-hsl), 64%);
}
body.scrollbar-enable:not(.is-mobile):not(.scrollbar-movein-animation-enable) {
  --scrollbar-color: hsla(var(--color-accent-hsl), 24%);
}
body.scrollbar-enable:not(.is-mobile).scrollbar-movein-animation-enable :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .workspace-leaf-content .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .markdown-source-view .cm-scroller, .markdown-preview-view, .pdf-thumbnail-view, .pdf-viewer-container, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .markdown-embed-content .markdown-rendered, pre code) {
  transition: --scrollbar-color var(--animation);
}
body.scrollbar-enable:not(.is-mobile).scrollbar-movein-animation-enable :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .workspace-leaf-content .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .markdown-source-view .cm-scroller, .markdown-preview-view, .pdf-thumbnail-view, .pdf-viewer-container, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .markdown-embed-content .markdown-rendered, pre code):hover {
  --scrollbar-color: hsla(var(--color-accent-hsl), 24%);
}
body.scrollbar-enable:not(.is-mobile).scrollbar-movein-animation-enable :is(textarea, pre) {
  color: transparent;
  transition: var(--animation);
  transition-property: color, border-color;
  -webkit-text-fill-color: var(--text-normal);
}
body.scrollbar-enable:not(.is-mobile).scrollbar-movein-animation-enable :is(textarea, pre):hover {
  color: hsla(var(--color-accent-hsl), 24%);
}
body.scrollbar-enable:not(.is-mobile).scrollbar-movein-animation-enable :is(textarea, pre) * {
  -webkit-text-fill-color: initial;
}
body.scrollbar-enable:not(.is-mobile).scrollbar-movein-animation-enable :is(textarea, pre)::-webkit-scrollbar-thumb {
  box-shadow: 0 0 0 10px inset;
  border-width: 3.2px;
  background-clip: content-box;
  background-color: transparent !important;
}

body.scrollbar-hide :not([style="overflow-x: auto;"])::-webkit-scrollbar {
  display: none !important;
}

/* #endregion scrollbar */
/* #region tab */
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-tab-header-inner-icon .lucide-file-audio {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M9 18V5l12-2v13M9 9l12-2'/><circle cx='6' cy='18' r='3'/><circle cx='18' cy='16' r='3'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-tab-header-inner-icon .lucide-file-audio path {
  display: none;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-tab-header-inner-icon .lucide-file {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><rect width='18' height='18' x='3' y='3' rx='2'/><path d='M7 3v18M3 7.5h4M3 12h18M3 16.5h4M17 3v18m0-13.5h4m-4 9h4'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-tab-header-inner-icon .lucide-file path {
  display: none;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-tab-header-inner-icon .lucide-file-text {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 7v14m-9-3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4a4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3a3 3 0 0 0-3-3z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-tab-header-inner-icon .lucide-file-text path {
  display: none;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-tab-header-inner-icon .lucide-table {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><ellipse cx='12' cy='5' rx='9' ry='3'/><path d='M3 5v14a9 3 0 0 0 18 0V5'/><path d='M3 12a9 3 0 0 0 18 0'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-tab-header-inner-icon .lucide-table path {
  display: none;
}

@media (hover: hover) {
  .workspace-tab-header-inner,
  .workspace-drawer-vault-switcher {
    transition: background-color var(--animation-fast);
  }
}
body:is(:not(.css-settings-manager), .tab-float) {
  --tab-radius: var(--size-2-3);
}
body:is(:not(.css-settings-manager), .tab-float).theme-light {
  --tab-active-shadow: var(--shadow-s);
}
body:is(:not(.css-settings-manager), .tab-float) .is-sidedock-collapsed + .mod-root .sidebar-toggle-button.mod-left {
  margin-right: var(--size-4-2);
}
body:is(:not(.css-settings-manager), .tab-float) .mod-root .workspace-tab-header {
  padding-block: 0 !important;
  transition: var(--animation);
  transition-property: color, width;
  --tab-curve: 0;
  --tab-radius-active: var(--radius-m);
}
body:is(:not(.css-settings-manager), .tab-float) .mod-root .workspace-tab-header.is-active {
  box-shadow: var(--tab-active-shadow);
}
body:is(:not(.css-settings-manager), .tab-float) .mod-root .workspace-tab-header-container {
  padding-left: var(--size-4-1);
}
body:is(:not(.css-settings-manager), .tab-float) .mod-root .workspace-tab-header-container-inner {
  margin-top: var(--size-4-1);
  padding-bottom: var(--size-4-1);
  padding-left: 5px;
}
body:is(:not(.css-settings-manager), .tab-float) .mod-root .workspace-tab-header-container-inner-close-button {
  padding: var(--size-2-1);
}
body:is(:not(.css-settings-manager), .tab-float) .mod-root .workspace-tab-header-container-inner-close-button:hover {
  background-color: var(--frame-background-color);
}
body:is(:not(.css-settings-manager), .tab-float) .mod-root .workspace-tabs:not(.mod-stacked):not(.mod-active) .workspace-tab-header.is-active {
  --tab-background-active: hsla(var(--background-primary-hsl), 0.5);
}
body:is(:not(.css-settings-manager), .tab-float) .workspace-tab-header-new-tab {
  padding-top: var(--size-4-1);
}

.view-header-title-parent:empty + .view-header-title {
  max-width: 70%;
  text-align: center;
  cursor: text;
}
.view-header-title-parent:not(:empty) + .view-header-title:after {
  content: "";
  width: 20%;
  inset-block: 0;
  position: absolute;
  cursor: text;
}

body.tab-show-close-all .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button,
body.tab-show-close-part .mod-root .workspace-tab-header:not(.is-active) .workspace-tab-header-inner-close-button {
  display: none;
}
body.tab-show-close-all .mod-root .workspace-tab-header:hover .workspace-tab-header-inner-close-button,
body.tab-show-close-part .mod-root .workspace-tab-header:not(.is-active):hover .workspace-tab-header-inner-close-button {
  display: inherit;
}

body.tab-title-bar-text-small .view-header {
  --file-header-font-size: calc(var(--font-ui-smaller) - var(--size-2-1));
}

body.tab-title-bar-text-hidden .workspace-leaf-content .view-header-title-container {
  opacity: 0;
  transition: var(--animation);
  transition-delay: var(--animation-delay);
}
body.tab-title-bar-text-hidden .workspace-leaf-content .view-header-title-container:hover {
  opacity: 1;
  transition-delay: 0s;
}

/* tab switch animation, reference from https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow */
body.tab-slide-up:not(.is-mobile) .workspace-split:not(.is-sidedock-collapsed) .workspace-tabs:not(.mod-stacked) .workspace-leaf-content:not([data-type=undefined]):not([data-type=empty]) :is(.view-content, .nav-files-container, .tag-container) {
  animation: op var(--animation-slow), slide-up var(--animation-slow);
}

.workspace-split.mod-sidedock.is-sidedock-collapsed {
  animation: fade-dock var(--animation-slow);
}
.workspace-split.mod-sidedock:not(.is-sidedock-collapsed) {
  animation: op var(--animation-slow);
}

.search-result-file-matches {
  border-radius: var(--radius-m);
}

/* #endregion tab */
/* #region titlebar */
body .workspace-tabs:not(.mod-top) .workspace-tab-header-container {
  background-color: var(--bg-surface);
  border-bottom: none;
}
body.is-maximized .mod-maximize svg {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none'><g stroke='currentColor' stroke-width='1.8' stroke-linecap='round'><path d='M14.5 7A2.5 2.5 0 0 1 17 9.5v9a2.5 2.5 0 0 1-2.5 2.5h-9A2.5 2.5 0 0 1 3 18.5v-9A2.5 2.5 0 0 1 5.5 7h9Z' /><path d='M7 3h8c4 0 6 2 6 6v8' /></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
body.is-maximized .mod-maximize svg path {
  display: none;
}
body.is-hidden-frameless:is(.mod-windows, .mod-linux) .titlebar-button {
  padding: 0 15px;
}
body.is-hidden-frameless:is(.mod-windows, .mod-linux) .titlebar-button svg {
  width: 100%;
  height: 32%;
}
body.is-hidden-frameless:is(.mod-windows, .mod-linux) .titlebar-button svg:not([class*=logo]) {
  width: 100%;
  height: 35%;
}
body.mod-maximize svg rect {
  rx: 1.8;
}
body .titlebar-button.mod-close:hover {
  background-color: hsl(1, 75%, 62%) !important;
  color: var(--text-on-accent);
}
body .workspace-tab-header-new-tab {
  padding-bottom: var(--size-2-1);
}

/* #endregion titlebar */
/* #region statusbar */
body {
  --status-bar-background: var(--background-secondary);
  --status-bar-border-color: var(--background-modifier-border);
}

.status-bar-hidden .status-bar {
  opacity: 0;
  transition-delay: var(--animation-delay);
}
.status-bar-hidden .status-bar:hover {
  transition-delay: 0s;
  opacity: 1;
}

body.status-bar-style-float {
  --status-bar-radius: var(--size-2-3);
  --status-bar-border-width: 1px;
}
body.status-bar-style-float .status-bar {
  padding: var(--size-4-1);
  bottom: var(--size-4-1);
  right: var(--size-4-1);
  box-shadow: var(--shadow-s);
}
body.status-bar-style-float.status-bar-style-center:is(.status-bar-default, .status-bar-hidden) .status-bar {
  left: 50%;
  transform: translateX(-50%);
}
body.status-bar-style-float.status-bar-scroll .status-bar {
  transform: translateX(calc(100% - var(--size-4-2)));
  transition-delay: var(--animation-delay);
  right: 0;
  padding: var(--size-4-1);
}
body.status-bar-style-float.status-bar-scroll .status-bar:hover {
  transform: translateX(0);
  transition-delay: 0s;
}

/* #endregion statusbar */
/* #region notice, tooltips */
.tooltip {
  animation: op var(--animation-slow) !important;
}

body.message-tooltip-hide .tooltip {
  display: none;
}

body.message-tooltip-hide-arrow .tooltip-arrow {
  display: none;
}

body.message-modify {
  --background-modifier-message: var(
    --setting-message-bg,
    var(--accent-active-bg)
  ) !important;
}
body.message-modify :is(.tooltip, .notice) {
  color: var(--setting-message-fg, var(--text-on-accent));
}
body.message-modify .notice-cta {
  color: var(--text-on-accent);
  text-decoration: underline;
}
body.message-modify .notice.is-loading::before {
  background-color: var(--accent-inactive);
}

/* #endregion message */
/* #region labeled-navigator */
/* Reference from https://github.com/kepano/obsidian-minimal/blob/master/src/scss/features/labeled-nav.scss, support his work: https://github.com/sponsors/kepano */
.labeled-nav.mod-windows,
.labeled-nav.is-fullscreen:not(.colorful-frame) {
  --labeled-nav-top-margin: 0;
}

.labeled-nav {
  --labeled-nav-top-margin: var(--header-height);
  /* refactor this using a new variable for border above labeled nav
  in different conditions e.g. OSes and colorful frame */
}
.labeled-nav.is-translucent .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-header-container-inner {
  background-color: transparent;
}
.labeled-nav.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .workspace-tabs.mod-top-left-space .workspace-tab-header-container {
  padding-left: 0;
}
.labeled-nav.mod-macos .mod-left-split .mod-top .workspace-tab-header-container:before, .labeled-nav.mod-macos.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .mod-top .workspace-tab-header-container:before {
  -webkit-app-region: drag;
  position: absolute;
  width: calc(100% - var(--divider-width));
  height: calc(var(--header-height) - var(--tab-outline-width));
  border-bottom: 0 solid var(--tab-outline-color);
}
.labeled-nav.mod-macos.is-hidden-frameless:not(.is-fullscreen) .workspace-ribbon.mod-left:not(.is-collapsed) {
  border: none;
  --tab-outline-width: 0px;
}
.labeled-nav:is(:not(.is-hidden-frameless),
.mod-macos:not(.hider-ribbon),
.colorful-frame.is-hidden-frameless:not(.is-fullscreen)) .mod-left-split .mod-top .workspace-tab-header-container:before {
  border-bottom: var(--tab-outline-width) solid var(--tab-outline-color);
}
.labeled-nav:is(:not(.is-hidden-frameless),
.mod-macos:not(.hider-ribbon),
.colorful-frame.is-hidden-frameless:not(.is-fullscreen)) .workspace-ribbon.mod-left:not(.is-collapsed) {
  --tab-outline-width: 1px;
}
.labeled-nav:not(.is-hidden-frameless) .mod-left-split .mod-top .workspace-tab-header-container:before {
  position: absolute;
  top: 0;
  content: " ";
}
.labeled-nav.hider-ribbon.mod-macos.is-hidden-frameless:not(.is-fullscreen):not(.is-popout-window) .mod-left-split:not(.is-sidedock-collapsed) .workspace-tabs.mod-top-left-space .workspace-tab-header-container {
  padding-left: 0;
}
.labeled-nav:not(.is-grabbing):not(.is-fullscreen).is-hidden-frameless .mod-top .workspace-tab-header-container {
  -webkit-app-region: no-drag;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-spacer {
  display: none;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-inner-title {
  display: inline-block;
  font-weight: 550;
  font-size: var(--font-ui-smaller);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container {
  position: relative;
  flex-direction: column-reverse !important;
  height: auto;
  width: 100%;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .sidebar-toggle-button.mod-left {
  position: absolute;
  justify-content: flex-end;
  padding-right: var(--size-4-2);
  top: 0;
  right: 0;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-header-container-inner {
  padding-top: var(--size-4-2);
  margin-top: var(--labeled-nav-top-margin);
  flex-direction: column !important;
  background-color: hsl(var(--background-secondary-hsl));
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-container-inner {
  flex-grow: 1;
  gap: 0;
  padding: var(--size-4-2) var(--size-4-3);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header {
  --icon-color: var(--text-faint);
  --tab-text-color: var(--text-faint);
  --tab-text-color-focused: var(--text-faint);
  padding: 0;
  margin-bottom: 2px;
  border: none;
  height: auto;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active:not(:hover) {
  background-color: transparent;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header:hover {
  opacity: 1;
  --tab-text-color-active: var(--text-muted);
  --tab-text-color-focused: var(--text-muted);
  --tab-text-color-focused-active: var(--text-muted);
  --tab-text-color-focused-active-current: var(--text-muted);
  --icon-color: var(--text-muted);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active {
  opacity: 1;
  --tab-text-color-active: var(--text-normal);
  --tab-text-color-focused: var(--text-normal);
  --tab-text-color-focused-active: var(--text-normal);
  --tab-text-color-focused-active-current: var(--text-normal);
  --icon-color: var(--text-normal);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header .workspace-tab-header-inner {
  gap: var(--size-2-3);
  padding: var(--size-4-1) var(--size-4-2);
  margin: 0 var(--size-4-2);
  box-shadow: none;
  border: none;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header:is(.has-active-menu, .is-active):hover {
  background-color: transparent;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header:hover .workspace-tab-header-inner {
  background-color: var(--nav-item-background-hover);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container {
  border: none;
  padding: 0;
}
.labeled-nav .nav-buttons-container {
  justify-self: flex-start;
}

/* #endregion labeled-navigator */
/* #region [[panel]] */
/* #region base*/
.query-toolbar-item .text-icon-button {
  transition: background-color var(--animation-fast);
}

/* #endregion base */
/* #region tag */
.workspace-leaf-content[data-type=tag] .tree-item-self::before {
  line-height: var(--line-height-tight);
  margin-left: calc(-1 * var(--size-4-4));
  margin-right: var(--size-4-3);
  transform: translateY(var(--size-4-1));
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z'/><circle cx='7.5' cy='7.5' r='.5' fill='currentColor'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--accent-active);
  width: var(--size-4-4);
  height: var(--size-4-4);
}
.workspace-leaf-content[data-type=tag] .tree-item-self:has(.tree-item-icon)::before {
  background-color: var(--folder-color);
}
.workspace-leaf-content[data-type=tag] .tree-item-icon.collapse-icon svg {
  color: transparent;
}

/* #endregion tag */
/* #region bookmark */
.workspace-leaf-content[data-type=bookmarks] {
  --nav-item-color-active: var(--text-on-accent);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self.mod-collapsible .tree-item-icon {
  margin-right: var(--size-4-1);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self:not(.mod-collapsible) {
  padding-left: var(--size-2-3);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self:not(.mod-collapsible) .tree-item-icon {
  transform: translateY(var(--size-2-1));
  color: var(--accent-active);
  width: calc(1.3 * var(--size-4-4));
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self.is-active .tree-item-icon {
  color: var(--nav-item-color-active);
}

/* #endregion bookmark */
/* #region graph */
body {
  --graph-node: var(--setting-graph-node, var(--text-muted));
  --graph-node-unresolved: var(
    --setting-graph-node-unresolved,
    var(--text-faint)
  );
  --graph-node-focused: var(--setting-graph-node-focus, var(--accent-active));
}

.graph-controls {
  top: var(--size-4-1);
  right: var(--size-4-1);
}

/* #endregion graph */
/* #region outline */
body {
  --outline-guideline-width: var(--setting-outline-width, 2px);
  --outline-guideline-color: var(
    --settingoutline-line-color,
    var(--accent-inactive)
  );
  --outline-guideline-color-alt: var(--outline-dot-color, var(--accent-active));
  --outline-item-height: calc(var(--nav-item-size) * 1.8);
}

.workspace-leaf-content[data-type=outline] .tree-item-inner {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  height: var(--outline-item-height);
  line-height: var(--outline-item-height);
}
.workspace-leaf-content[data-type=outline] .tree-item-self.is-active > .tree-item-inner {
  color: var(--text-on-accent);
}

body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item {
  position: relative;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self {
  position: relative;
  margin-bottom: 0;
  white-space: nowrap;
  margin-top: -1px;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-inner {
  padding-left: var(--size-4-1);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-inner::before {
  content: "";
  width: calc(var(--size-4-1) * 1.2);
  height: calc(var(--size-4-1) * 1.2);
  border: var(--size-2-1) solid var(--outline-guideline-color-alt);
  border-radius: 50%;
  position: absolute;
  top: 50%;
  transform: translate(calc(-1 * var(--size-4-5) - var(--size-4-1) * 1.2 * 0.5 + 1px), -50%);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self.is-active .tree-item-inner::before {
  border-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-icon ~ .tree-item-inner {
  padding-left: var(--size-4-1);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-icon ~ .tree-item-inner::before {
  content: none;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item.is-collapsed .tree-item-icon::before {
  box-shadow: 0 0 0 var(--size-4-1) var(--background-modifier-hover);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item::after {
  content: "";
  width: var(--outline-guideline-width);
  position: absolute;
  background-color: transparent;
  top: calc(var(--outline-item-height) / 2 * -1);
  left: -14px;
  height: calc(100% - var(--outline-item-height) + var(--size-4-8));
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon {
  cursor: pointer;
  transform: translateY(8px);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon::before {
  width: var(--size-4-2);
  height: var(--size-4-2);
  background-color: var(--outline-guideline-color-alt);
  border-radius: 50%;
  position: absolute;
  left: 3px;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon svg path {
  display: none;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self.is-active .tree-item-icon::before {
  background-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item::after {
  background-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-self:hover + .tree-item-children .tree-item::after {
  background-color: transparent;
}
:is(body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover, body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover ~ .tree-item)::after {
  background-color: transparent;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover::before {
  content: "";
  position: absolute;
  top: calc(var(--outline-item-height) / 2 * -1);
  left: -14px;
  bottom: calc(100% - (var(--outline-item-height) + var(--size-4-2)) / 2 - 1px);
  width: var(--size-4-6);
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--outline-guideline-width) solid var(--outline-guideline-color);
  border-left: var(--outline-guideline-width) solid var(--outline-guideline-color);
  z-index: 9;
}
body.outline-enable .workspace-leaf-content[data-type=outline] :is(.tree-item-children, .tree-item-self) {
  padding-left: 28px !important;
  margin-left: 0 !important;
  border-left: none;
}

/* #endregion outline */
/* #region file-explorer */
.nav-buttons-container {
  justify-content: flex-start;
  padding-left: var(--size-4-1);
}

body {
  --nav-item-children-padding-left: var(--size-4-2);
}

svg.lucide-layout-dashboard rect {
  rx: 2;
}

body {
  --file-folding-offset: 28px;
  --folder-color: var(--setting-color-dirs, hsl(46, 81%, 45%));
  --nav-item-size: calc(var(--size-4-4) * 0.9);
  --nav-indentation-guide-color: var(--color-base-30);
  --nav-indentation-guide-width: 1.8px;
}

.theme-light {
  --folder-inactive: 85%;
}

.theme-dark {
  --folder-inactive: 70%;
}

:is(.nav-file-title, .nav-folder-title).is-being-dragged {
  background-color: var(--accent-inactive);
  color: var(--text-normal);
}
:is(.nav-file-title, .nav-folder-title).is-being-renamed {
  background-color: var(--nav-item-background-selected) !important;
  --nav-item-color-active: var(--text-normal) !important;
}

body.theme-dark.explorer-icon .is-active .nav-file-tag {
  --nav-item-background-active: var(--text-on-accent);
}

:is(.nav-file-title, .nav-folder-title) {
  --nav-item-color-active: var(--text-on-accent);
}
:is(.nav-file-title, .nav-folder-title) .is-selected {
  font-weight: 550 !important;
}
:is(.nav-file-title, .nav-folder-title) .is-selected + .nav-folder-children :is(.nav-file-title, .nav-folder-title) {
  font-weight: 550 !important;
}

:is(.collapse-indicator, .collapse-icon) {
  --cursor: pointer;
}

body:is(:not(.css-settings-manager), .explorer-icon) .menu.mod-tab-list .lucide-file {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/><path d='M14 2v4a2 2 0 0 0 2 2h4M10 9H8m8 4H8m8 4H8'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
body:is(:not(.css-settings-manager), .explorer-icon) .menu.mod-tab-list .lucide-file path {
  display: none;
}
body:is(:not(.css-settings-manager), .explorer-icon) .menu.mod-tab-list .lucide-file-text {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 7v14m-9-3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4a4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3a3 3 0 0 0-3-3z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
body:is(:not(.css-settings-manager), .explorer-icon) .menu.mod-tab-list .lucide-file-text path {
  display: none;
}
body:is(:not(.css-settings-manager), .explorer-icon) .menu.mod-tab-list .lucide-file-audio {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M9 18V5l12-2v13M9 9l12-2'/><circle cx='6' cy='18' r='3'/><circle cx='18' cy='16' r='3'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
body:is(:not(.css-settings-manager), .explorer-icon) .menu.mod-tab-list .lucide-file-audio path {
  display: none;
}
body:is(:not(.css-settings-manager), .explorer-icon) .menu.mod-tab-list .lucide-table {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><ellipse cx='12' cy='5' rx='9' ry='3'/><path d='M3 5v14a9 3 0 0 0 18 0V5'/><path d='M3 12a9 3 0 0 0 18 0'/></g></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
body:is(:not(.css-settings-manager), .explorer-icon) .menu.mod-tab-list .lucide-table path {
  display: none;
}
body:is(:not(.css-settings-manager), .explorer-icon) .lucide-folder-closed {
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
}
body:is(:not(.css-settings-manager), .explorer-icon) .lucide-folder-closed path {
  display: none;
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-folder-title {
  cursor: pointer;
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-folder-title-content {
  padding-left: var(--size-4-1);
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-folder .nav-folder-children {
  transition: border-color var(--animation-fast);
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-folder .nav-folder-children:hover {
  border-color: var(--accent-inactive);
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-folder .collapse-icon {
  margin-inline-start: calc(var(--size-2-1) - var(--size-4-5));
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-folder .collapse-icon svg.svg-icon {
  display: inline-block;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 14l1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--folder-color);
  width: var(--size-4-4);
  height: var(--size-4-4);
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-folder .collapse-icon.is-collapsed svg.svg-icon {
  transform: none;
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z'/></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--folder-color);
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title {
  padding-inline-end: 0;
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title::before {
  content: "";
  position: absolute;
  opacity: 0.8;
  flex-shrink: 0;
  translate: calc(var(--size-2-1) - var(--size-4-5)) 12%;
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/><path d='M14 2v4a2 2 0 0 0 2 2h4M10 9H8m8 4H8m8 4H8'/></g></svg>");
  -webkit-mask: var(--file-icon) no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--accent-active);
  width: var(--size-4-4);
  height: var(--size-4-4);
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=pdf])::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 7v14m-9-3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4a4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3a3 3 0 0 0-3-3z'/></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title.is-unsupported::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12 17h.01M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z'/><path d='M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=png], [data-path$=".svg"], [data-path$=".jpeg"], [data-path$=".jpg"], [data-path$=".bmp"], [data-path$=".gif"], [data-path$=".webp"], [data-path$=".tiff"])::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><rect width='18' height='18' x='3' y='3' rx='2' ry='2'/><circle cx='9' cy='9' r='2'/><path d='m21 15l-3.086-3.086a2 2 0 0 0-2.828 0L6 21'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title.is-unsupported::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12 17h.01M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z'/><path d='M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=mp3], [data-path$=".flac"], [data-path$=".wav"], [data-path$=".ape"], [data-path$=".alac"], [data-path$=".aac"], [data-path$=".m4a"])::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M9 18V5l12-2v13M9 9l12-2'/><circle cx='6' cy='18' r='3'/><circle cx='18' cy='16' r='3'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title.is-unsupported::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12 17h.01M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z'/><path d='M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=mkv], [data-path$=".mp4"], [data-path$=".flv"], [data-path$=".webm"], [data-path$=".avi"], [data-path$=".mov"])::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><rect width='18' height='18' x='3' y='3' rx='2'/><path d='M7 3v18M3 7.5h4M3 12h18M3 16.5h4M17 3v18m0-13.5h4m-4 9h4'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title.is-unsupported::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12 17h.01M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z'/><path d='M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=canvas])::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12 22a1 1 0 0 1 0-20a10 9 0 0 1 10 9a5 5 0 0 1-5 5h-2.25a1.75 1.75 0 0 0-1.4 2.8l.3.4a1.75 1.75 0 0 1-1.4 2.8z'/><circle cx='13.5' cy='6.5' r='.5' fill='currentColor'/><circle cx='17.5' cy='10.5' r='.5' fill='currentColor'/><circle cx='6.5' cy='12.5' r='.5' fill='currentColor'/><circle cx='8.5' cy='7.5' r='.5' fill='currentColor'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title.is-unsupported::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12 17h.01M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z'/><path d='M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=base])::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><ellipse cx='12' cy='5' rx='9' ry='3'/><path d='M3 5v14a9 3 0 0 0 18 0V5'/><path d='M3 12a9 3 0 0 0 18 0'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title.is-unsupported::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12 17h.01M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z'/><path d='M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$="excalidraw.md"], [data-path$=".excalidraw"])::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497zM15 5l4 4'/></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title.is-unsupported::before {
  --file-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12 17h.01M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z'/><path d='M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3'/></g></svg>");
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title .nav-file-tag {
  margin-right: var(--size-2-3);
  background-color: var(--background-modifier-hover);
  color: var(--text-accent);
  line-height: unset;
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title.is-active:not(.is-selected):first-child::before {
  background-color: var(--nav-item-color-active);
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title.is-active:not(.is-selected) .nav-file-title-content {
  color: var(--nav-item-color-active);
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title.is-active:not(.is-selected) .nav-file-tag {
  backdrop-filter: brightness(0.85);
  color: var(--nav-item-color-active);
}
body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title-content {
  padding-left: var(--size-4-1);
}

body.explorer-title-wrap :is(.nav-file-title-content, .nav-folder-title-content) {
  overflow: visible;
  white-space: pre-wrap;
}

body.explorer-folder-bold .nav-folder-title {
  font-weight: 600;
}

/* #endregion file-explorer */
/* #region empty-state */
.empty-state-action-list {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  position: relative;
}
.empty-state-action-list::before {
  content: "";
  -webkit-mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='140' height='180' viewBox='0 0 140 180' fill='currentColor'><path d='M49.775 105.089C54.3828 103.715 61.8069 101.605 70.3434 101.082C65.2222 88.1449 63.986 76.8242 64.9803 66.7442C66.1285 55.1033 70.23 45.3874 74.228 37.1201C75.0811 35.3561 75.9012 33.7135 76.6879 32.1378C77.8017 29.9069 78.8486 27.81 79.8278 25.6916C81.4579 22.1652 82.6674 19.051 83.2791 16.1576C83.8806 13.3125 83.8838 10.7715 83.1727 8.3342C82.4607 5.89352 80.9475 3.26635 78.0704 0.386692C74.3134 -0.587559 70.1448 0.267767 67.0197 3.08162L29.9298 36.4772C27.861 38.34 26.503 40.8642 26.0879 43.6182L22.8899 64.8384C27.9185 69.2873 40.33 82.2201 47.8789 100.165C48.5525 101.766 49.1875 103.408 49.775 105.089Z' /><path d='M21.3902 74.5293C21.2153 75.2761 20.9692 76.0051 20.6549 76.7063L1.05225 120.436C-0.961131 124.928 -0.0336421 130.194 3.39276 133.726L34.2418 165.523C49.9952 142.262 47.6984 120.379 40.5026 103.274C35.0465 90.3037 26.777 80.1526 21.3902 74.5293Z' /><path d='M41.3687 169.269C41.9093 169.355 42.4575 169.407 43.0096 169.424C48.864 169.6 58.7098 170.109 66.6947 171.582C73.2088 172.783 86.1213 176.397 96.747 179.505C104.855 181.877 113.211 175.396 114.387 167.024C115.245 160.917 116.855 154.009 119.821 147.677L119.753 147.702C114.73 133.682 108.34 124.629 101.641 118.849C94.9619 113.086 87.7708 110.397 80.8276 109.42C69.2835 107.795 58.7071 110.832 52.0453 112.791C56.0353 129.428 54.8074 149.004 41.3687 169.269Z' /><path d='M124.96 139.034C131.626 128.965 136.375 121.134 138.881 116.888C140.135 114.764 139.907 112.102 138.423 110.133C134.554 105.002 127.152 94.5755 123.12 84.9218C118.973 74.9962 118.355 59.5866 118.319 52.081C118.306 49.2279 117.402 46.4413 115.639 44.1994L91.6762 13.73C91.5918 15.1034 91.3946 16.4659 91.1093 17.8158C90.3118 21.5882 88.8073 25.3437 87.0916 29.0552C86.086 31.2306 84.9238 33.5612 83.7497 35.9157C82.9682 37.4827 82.1814 39.0607 81.432 40.6102C77.5579 48.6212 73.9528 57.3151 72.9451 67.5313C72.011 77.0006 73.2894 88.014 79.0482 101.162C80.0074 101.243 80.9727 101.351 81.9422 101.487C90.2067 102.651 98.8807 105.891 106.866 112.781C113.73 118.704 119.932 127.19 124.96 139.034Z' /></svg>") no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: hsla(var(--color-accent-hsl), 0.2);
  width: calc(2 * var(--size-4-12));
  height: calc(2 * var(--size-4-12));
  margin-inline-start: 50%;
  translate: -50% -25%;
}
.empty-state-action-list > ::before {
  content: "";
  display: inline-block;
  margin-inline-end: var(--size-4-3);
  translate: 0 var(--size-4-1);
  -webkit-mask: var(--empty-icon) no-repeat;
  -webkit-mask-size: 100% 100%;
  background-color: currentColor;
  color: var(--text-accent);
  width: var(--size-4-5);
  height: var(--size-4-5);
}
.empty-state-action-list :nth-child(1)::before {
  --empty-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7'/><path d='M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z'/></g></svg>");
}
.empty-state-action-list :nth-child(2)::before {
  --empty-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='m15 17l5-5l-5-5'/><path d='M4 18v-2a4 4 0 0 1 4-4h12'/></g></svg>");
}
.empty-state-action-list :nth-child(3)::before {
  --empty-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><path d='m21 21l-4.34-4.34'/><circle cx='11' cy='11' r='8'/></g></svg>");
}
.empty-state-action-list :nth-child(4)::before {
  --empty-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><g fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'><circle cx='12' cy='12' r='10'/><path d='M12 2a14.5 14.5 0 0 0 0 20a14.5 14.5 0 0 0 0-20M2 12h20'/></g></svg>");
}
.empty-state-action-list .mod-close::before {
  --empty-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 6L6 18M6 6l12 12'/></svg>");
}
.empty-state-action-list .empty-state-action {
  width: 100%;
  text-align: start;
}

/* #endregion empty-state */
/* #endregion [[panel]] */
/* #endregion [workspace] */
/* #region [mobile] */
/* #region basic */
.is-mobile {
  --interactive-hover: var(--background-modifier-hover);
  --system-access-override-text-width: 115%;
  --scrollbar-thumb-bg: var(--interactive-hover);
  --scrollbar-active-thumb-bg: var(--interactive-accent);
  --toggle-s-width: 42px;
  --font-interface-theme: var(--setting-mobile-font-interface, "");
  --font-text-theme: var(--setting-mobile-font-text, "");
  --font-monospace-theme: var(--setting-mobile-font-monospace, maplemono);
}
.is-mobile .modal-close-button::before {
  transform: translate(20%, 20%);
}
.is-mobile .mobile-tap.tree-item-self.is-clickable.is-active {
  background-color: var(--nav-item-background-active);
}

body.is-tablet .modal-container .modal-sidebar:not(:has(+ .community-modal-details)) .community-modal-controls {
  padding-inline-end: var(--size-4-10);
}

/* #endregion basic */
/* #region floating button */
body.is-phone.mobile-floating-button .mod-root .view-header {
  z-index: 3;
}
body.is-phone.mobile-floating-button .mod-root .workspace-leaf-content[data-type=markdown] .view-actions button:nth-last-child(2) {
  position: fixed;
  right: var(--size-4-4);
  bottom: 0;
  color: var(--text-on-accent);
  background-color: var(--accent-active-bg);
  margin-bottom: calc(var(--safe-area-inset-bottom) + var(--size-4-4));
  border-radius: 100%;
  padding: var(--size-4-3);
  width: auto;
  height: auto;
  box-shadow: var(--shadow-s) !important;
}

/* #endregion floating button */
/* #region ios hdr */
/* Reference: https://github.com/aaaaalexis/obsidian-cupertino/blob/a7b045b1267728f6535fc8ed1b0925f8b49bc05d/src/app/mobile.scss#L488C1-L523C2 */
body.is-ios.theme-light .mod-left-split-toggle.clickable-icon::after,
body.is-ios.theme-light .mod-root .workspace-leaf-content .view-action::after,
body.is-ios.theme-light .mobile-navbar-actions::after,
body.is-ios.theme-light .mobile-toolbar-options-list::after,
body.is-ios.theme-light .workspace-drawer .nav-buttons-container::after,
body.is-ios.theme-light .workspace-drawer-header-icon.clickable-icon::after,
body.is-ios.theme-light .prompt-input-container::after,
body.is-ios.theme-light .prompt-input-container .search-input-clear-button::before,
body.is-ios.theme-light .modal-setting-back-button::after,
body.is-ios.theme-light .modal-close-button::after {
  position: absolute;
  backdrop-filter: brightness(1.5);
  mask: linear-gradient(white, white) padding-box, linear-gradient(white, white) border-box;
  mask-composite: exclude, add;
  filter: blur(1px);
  inset: 0;
  border: 1px solid transparent;
  border-radius: inherit;
  background: linear-gradient(to bottom left, white, transparent, white) border-box no-repeat;
  pointer-events: none;
  content: "";
}
body.is-ios.theme-light .prompt-input-container::after {
  margin-right: 56px;
  border-radius: var(--clickable-icon-radius);
}
body.is-ios.theme-light .prompt-input-container::after,
body.is-ios.theme-light .search-input-clear-button::before {
  backdrop-filter: brightness(1.2);
}

/* #endregion ios hdr */
/* #endregion [mobile] */
/* #region built-in fonts */
@font-face {
  font-family: "maplemono";
  font-display: swap;
  font-style: normal;
  src: local("Maple Mono NF CN Regular"), local("Maple Mono CN Regular"), local("Maple Mono NF Regular"), local("Maple Mono Regular"), url("data:font/woff2;base64,") format("woff2");
}
@font-face {
  font-family: "maplemono";
  font-display: swap;
  font-style: italic;
  src: local("Maple Mono NF CN Italic"), local("Maple Mono CN Italic"), local("Maple Mono NF Italic"), local("Maple Mono Italic"), url("data:font/woff2;base64,") format("woff2");
}
/* #endregion built-in fonts */